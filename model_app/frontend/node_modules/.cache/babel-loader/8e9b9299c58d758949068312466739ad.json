{"ast":null,"code":"var _jsxFileName = \"/Users/davidyang/Documents/Website/model_app/frontend/src/components/GridList.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    overflow: 'hidden',\n    backgroundColor: '#1b4441c2',\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(4)\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  },\n  displayOver: {\n    height: \"100%\",\n    left: \"0\",\n    position: \"absolute\",\n    top: \"0\",\n    width: \"100%\",\n    zIndex: 2,\n    transition: \"background-color 350ms ease\",\n    backgroundColor: \"rgba(0,0,0,.5)\",\n    padding: \"20px 20px 0 20px\",\n    boxSizing: \"border-box\",\n    opacity: 0\n  },\n  hover: {\n    opacity: 1,\n    transition: \"opacity 350ms ease\"\n  },\n  hoverTitle: {\n    transform: \"translate3d(0,50px,0)\",\n    transition: \"transform 350ms ease\",\n    fontSize: '20px'\n  },\n  hoverSubtitle: {\n    transform: \"translate3d(0,50px,0)\",\n    transition: \"transform 350ms ease\",\n    fontSize: '16px'\n  },\n  hoverP: {\n    transform: \"translate3d(0,50px,0)\",\n    transition: \"transform 350ms ease\"\n  },\n  gridList: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  GridListTile: {\n    '&:hover p, &:hover h3, &:hover h4': {\n      transform: \"translate3d(0,0,0)\"\n    },\n    '&:hover div': {\n      opacity: 1\n    },\n    width: '200px',\n    height: '200px'\n  }\n}));\nexport default function TitlebarGridList(tileData) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.root,\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, tileData.map(tile => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: tile.name,\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridListTile, {\n    className: classes.GridListTile,\n    key: tile.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: tile.img,\n    alt: tile.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.displayOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.hover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.hoverTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, tile.name), /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.hoverSubtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, tile.role), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.hoverP,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, tile.description))))))));\n}","map":{"version":3,"sources":["/Users/davidyang/Documents/Website/model_app/frontend/src/components/GridList.js"],"names":["React","makeStyles","GridListTile","Grid","Container","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","paddingTop","spacing","paddingBottom","icon","color","displayOver","height","left","position","top","width","zIndex","transition","padding","boxSizing","opacity","hover","hoverTitle","transform","fontSize","hoverSubtitle","hoverP","gridList","flexDirection","TitlebarGridList","tileData","classes","map","tile","name","img","role","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    overflow: 'hidden',\n    backgroundColor: '#1b4441c2',\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(4),\n\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n  displayOver: {\n    height: \"100%\",\n    left: \"0\",\n    position: \"absolute\",\n    top: \"0\",\n    width: \"100%\",\n    zIndex: 2,\n    transition: \"background-color 350ms ease\",\n    backgroundColor: \"rgba(0,0,0,.5)\",\n    padding: \"20px 20px 0 20px\",\n    boxSizing: \"border-box\",\n    opacity: 0,\n  },\n  hover: {\n    opacity: 1,\n    transition: \"opacity 350ms ease\",\n  },\n  hoverTitle: {\n    transform: \"translate3d(0,50px,0)\",\n    transition: \"transform 350ms ease\",\n    fontSize: '20px'\n  },\n  hoverSubtitle: {\n    transform: \"translate3d(0,50px,0)\",\n    transition: \"transform 350ms ease\",\n    fontSize: '16px'\n  },\n  hoverP: {\n    transform: \"translate3d(0,50px,0)\",\n    transition: \"transform 350ms ease\",\n  },\n  gridList: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n\n  },\n  GridListTile: {\n    '&:hover p, &:hover h3, &:hover h4': {\n      transform: \"translate3d(0,0,0)\",\n    },\n    '&:hover div': {\n      opacity: 1,\n    },\n    width: '200px',\n    height:'200px',\n\n\n\n  },\n}));\n\nexport default function TitlebarGridList(tileData) {\n  const classes = useStyles();\n\n\n  return (\n    <Container className={classes.root} maxWidth=\"md\">\n      <Grid container spacing={4}>\n        {tileData.map((tile) => (\n          <Grid item key={tile.name}  xs={12} sm={6} md={3}>\n            <GridListTile className={classes.GridListTile} key={tile.img}>\n              <img src={tile.img} alt={tile.name} />\n\n              <div className={classes.displayOver}>\n                <div className={classes.hover}>\n                  <h3 className={classes.hoverTitle}>{tile.name}</h3>\n                  <h4 className={classes.hoverSubtitle}>{tile.role}</h4>\n                  <p className={classes.hoverP}>{tile.description}</p>\n                </div>\n              </div>\n            </GridListTile>\n          </Grid>\n        ))}\n\n      </Grid>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}