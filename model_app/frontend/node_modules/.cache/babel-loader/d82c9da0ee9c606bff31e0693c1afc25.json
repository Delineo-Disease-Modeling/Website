{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\r\n * Dialogs are overlaid modal paper based components with a backdrop.\r\n */\n\nvar Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onMouseUp: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The id(s) of the element(s) that describe the dialog.\r\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\r\n   * The id(s) of the element(s) that label the dialog.\r\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\r\n   * Dialog children, usually the included sub-components.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\r\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\r\n   * If `true`, hitting escape will not fire the `onClose` callback.\r\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\r\n   * If `true`, the dialog will be full-screen\r\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\r\n   * If `true`, the dialog stretches to `maxWidth`.\r\n   *\r\n   * Notice that the dialog width grow is limited by the default margin.\r\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\r\n   * Determine the max-width of the dialog.\r\n   * The dialog width grows with the size of the screen.\r\n   * Set to `false` to disable `maxWidth`.\r\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * Callback fired before the dialog enters.\r\n   */\n  onEnter: PropTypes.func,\n\n  /**\r\n   * Callback fired when the dialog has entered.\r\n   */\n  onEntered: PropTypes.func,\n\n  /**\r\n   * Callback fired when the dialog is entering.\r\n   */\n  onEntering: PropTypes.func,\n\n  /**\r\n   * Callback fired when the escape key is pressed,\r\n   * `disableKeyboard` is false and the modal is in focus.\r\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\r\n   * Callback fired before the dialog exits.\r\n   */\n  onExit: PropTypes.func,\n\n  /**\r\n   * Callback fired when the dialog has exited.\r\n   */\n  onExited: PropTypes.func,\n\n  /**\r\n   * Callback fired when the dialog is exiting.\r\n   */\n  onExiting: PropTypes.func,\n\n  /**\r\n   * If `true`, the Dialog is open.\r\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\r\n   * The component used to render the body of the dialog.\r\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the [`Paper`](/api/paper/) element.\r\n   */\n  PaperProps: PropTypes.object,\n\n  /**\r\n   * Determine the container for scrolling the dialog.\r\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\r\n   * The duration for the transition, in milliseconds.\r\n   * You may specify a single timeout for all transitions, or individually with an object.\r\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\r\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\r\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","map":{"version":3,"sources":["C:/Users/Arpan Gandhi/Desktop/Aayush Coding/Website/model_app/frontend/node_modules/@material-ui/core/esm/Dialog/Dialog.js"],"names":["_extends","_objectWithoutProperties","_defineProperty","React","PropTypes","clsx","withStyles","capitalize","Modal","Backdrop","Fade","duration","Paper","styles","theme","root","position","scrollPaper","display","justifyContent","alignItems","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","height","width","container","outline","paper","margin","boxShadow","paperScrollPaper","flexDirection","maxHeight","paperScrollBody","paperWidthFalse","maxWidth","paperWidthXs","Math","max","breakpoints","values","xs","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","paperFullWidth","paperFullScreen","borderRadius","defaultTransitionDuration","enter","enteringScreen","exit","leavingScreen","Dialog","forwardRef","props","ref","BackdropProps","children","classes","className","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$fullScreen","fullScreen","_props$fullWidth","fullWidth","_props$maxWidth","onBackdropClick","onClose","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExited","onExiting","open","_props$PaperComponent","PaperComponent","_props$PaperProps","PaperProps","_props$scroll","scroll","_props$TransitionComp","TransitionComponent","_props$transitionDura","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","other","mouseDownTarget","useRef","handleMouseDown","event","current","target","handleBackdropClick","currentTarget","createElement","BackdropComponent","closeAfterTransition","appear","in","timeout","role","concat","onMouseUp","onMouseDown","elevation","String","process","env","NODE_ENV","propTypes","string","object","node","bool","oneOf","func","isRequired","elementType","oneOfType","number","shape","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nimport capitalize from '../utils/capitalize';\r\nimport Modal from '../Modal';\r\nimport Backdrop from '../Backdrop';\r\nimport Fade from '../Fade';\r\nimport { duration } from '../styles/transitions';\r\nimport Paper from '../Paper';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      '@media print': {\r\n        // Use !important to override the Modal inline-style.\r\n        position: 'absolute !important'\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\r\n    scrollPaper: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n\r\n    /* Styles applied to the container element if `scroll=\"body\"`. */\r\n    scrollBody: {\r\n      overflowY: 'auto',\r\n      overflowX: 'hidden',\r\n      textAlign: 'center',\r\n      '&:after': {\r\n        content: '\"\"',\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        height: '100%',\r\n        width: '0'\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the container element. */\r\n    container: {\r\n      height: '100%',\r\n      '@media print': {\r\n        height: 'auto'\r\n      },\r\n      // We disable the focus ring for mouse, touch and keyboard users.\r\n      outline: 0\r\n    },\r\n\r\n    /* Styles applied to the `Paper` component. */\r\n    paper: {\r\n      margin: 32,\r\n      position: 'relative',\r\n      overflowY: 'auto',\r\n      // Fix IE 11 issue, to remove at some point.\r\n      '@media print': {\r\n        overflowY: 'visible',\r\n        boxShadow: 'none'\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\r\n    paperScrollPaper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      maxHeight: 'calc(100% - 64px)'\r\n    },\r\n\r\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\r\n    paperScrollBody: {\r\n      display: 'inline-block',\r\n      verticalAlign: 'middle',\r\n      textAlign: 'left' // 'initial' doesn't work on IE 11\r\n\r\n    },\r\n\r\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\r\n    paperWidthFalse: {\r\n      maxWidth: 'calc(100% - 64px)'\r\n    },\r\n\r\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\r\n    paperWidthXs: {\r\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\r\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\r\n        maxWidth: 'calc(100% - 64px)'\r\n      })\r\n    },\r\n\r\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\r\n    paperWidthSm: {\r\n      maxWidth: theme.breakpoints.values.sm,\r\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\r\n        maxWidth: 'calc(100% - 64px)'\r\n      })\r\n    },\r\n\r\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\r\n    paperWidthMd: {\r\n      maxWidth: theme.breakpoints.values.md,\r\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\r\n        maxWidth: 'calc(100% - 64px)'\r\n      })\r\n    },\r\n\r\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\r\n    paperWidthLg: {\r\n      maxWidth: theme.breakpoints.values.lg,\r\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\r\n        maxWidth: 'calc(100% - 64px)'\r\n      })\r\n    },\r\n\r\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\r\n    paperWidthXl: {\r\n      maxWidth: theme.breakpoints.values.xl,\r\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\r\n        maxWidth: 'calc(100% - 64px)'\r\n      })\r\n    },\r\n\r\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\r\n    paperFullWidth: {\r\n      width: 'calc(100% - 64px)'\r\n    },\r\n\r\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\r\n    paperFullScreen: {\r\n      margin: 0,\r\n      width: '100%',\r\n      maxWidth: '100%',\r\n      height: '100%',\r\n      maxHeight: 'none',\r\n      borderRadius: 0,\r\n      '&$paperScrollBody': {\r\n        margin: 0,\r\n        maxWidth: '100%'\r\n      }\r\n    }\r\n  };\r\n};\r\nvar defaultTransitionDuration = {\r\n  enter: duration.enteringScreen,\r\n  exit: duration.leavingScreen\r\n};\r\n/**\r\n * Dialogs are overlaid modal paper based components with a backdrop.\r\n */\r\n\r\nvar Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\r\n  var BackdropProps = props.BackdropProps,\r\n      children = props.children,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      _props$disableBackdro = props.disableBackdropClick,\r\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\r\n      _props$disableEscapeK = props.disableEscapeKeyDown,\r\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\r\n      _props$fullScreen = props.fullScreen,\r\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\r\n      _props$fullWidth = props.fullWidth,\r\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\r\n      _props$maxWidth = props.maxWidth,\r\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\r\n      onBackdropClick = props.onBackdropClick,\r\n      onClose = props.onClose,\r\n      onEnter = props.onEnter,\r\n      onEntered = props.onEntered,\r\n      onEntering = props.onEntering,\r\n      onEscapeKeyDown = props.onEscapeKeyDown,\r\n      onExit = props.onExit,\r\n      onExited = props.onExited,\r\n      onExiting = props.onExiting,\r\n      open = props.open,\r\n      _props$PaperComponent = props.PaperComponent,\r\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\r\n      _props$PaperProps = props.PaperProps,\r\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\r\n      _props$scroll = props.scroll,\r\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\r\n      _props$TransitionComp = props.TransitionComponent,\r\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\r\n      _props$transitionDura = props.transitionDuration,\r\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\r\n      TransitionProps = props.TransitionProps,\r\n      ariaDescribedby = props['aria-describedby'],\r\n      ariaLabelledby = props['aria-labelledby'],\r\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\r\n\r\n  var mouseDownTarget = React.useRef();\r\n\r\n  var handleMouseDown = function handleMouseDown(event) {\r\n    mouseDownTarget.current = event.target;\r\n  };\r\n\r\n  var handleBackdropClick = function handleBackdropClick(event) {\r\n    // Ignore the events not coming from the \"backdrop\"\r\n    // We don't want to close the dialog when clicking the dialog content.\r\n    if (event.target !== event.currentTarget) {\r\n      return;\r\n    } // Make sure the event starts and ends on the same DOM element.\r\n\r\n\r\n    if (event.target !== mouseDownTarget.current) {\r\n      return;\r\n    }\r\n\r\n    mouseDownTarget.current = null;\r\n\r\n    if (onBackdropClick) {\r\n      onBackdropClick(event);\r\n    }\r\n\r\n    if (!disableBackdropClick && onClose) {\r\n      onClose(event, 'backdropClick');\r\n    }\r\n  };\r\n\r\n  return /*#__PURE__*/React.createElement(Modal, _extends({\r\n    className: clsx(classes.root, className),\r\n    BackdropComponent: Backdrop,\r\n    BackdropProps: _extends({\r\n      transitionDuration: transitionDuration\r\n    }, BackdropProps),\r\n    closeAfterTransition: true,\r\n    disableBackdropClick: disableBackdropClick,\r\n    disableEscapeKeyDown: disableEscapeKeyDown,\r\n    onEscapeKeyDown: onEscapeKeyDown,\r\n    onClose: onClose,\r\n    open: open,\r\n    ref: ref\r\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\r\n    appear: true,\r\n    in: open,\r\n    timeout: transitionDuration,\r\n    onEnter: onEnter,\r\n    onEntering: onEntering,\r\n    onEntered: onEntered,\r\n    onExit: onExit,\r\n    onExiting: onExiting,\r\n    onExited: onExited,\r\n    role: \"none presentation\"\r\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\r\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\r\n    onMouseUp: handleBackdropClick,\r\n    onMouseDown: handleMouseDown\r\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\r\n    elevation: 24,\r\n    role: \"dialog\",\r\n    \"aria-describedby\": ariaDescribedby,\r\n    \"aria-labelledby\": ariaLabelledby\r\n  }, PaperProps, {\r\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\r\n  }), children))));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The id(s) of the element(s) that describe the dialog.\r\n   */\r\n  'aria-describedby': PropTypes.string,\r\n\r\n  /**\r\n   * The id(s) of the element(s) that label the dialog.\r\n   */\r\n  'aria-labelledby': PropTypes.string,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  BackdropProps: PropTypes.object,\r\n\r\n  /**\r\n   * Dialog children, usually the included sub-components.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\r\n   */\r\n  disableBackdropClick: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, hitting escape will not fire the `onClose` callback.\r\n   */\r\n  disableEscapeKeyDown: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the dialog will be full-screen\r\n   */\r\n  fullScreen: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the dialog stretches to `maxWidth`.\r\n   *\r\n   * Notice that the dialog width grow is limited by the default margin.\r\n   */\r\n  fullWidth: PropTypes.bool,\r\n\r\n  /**\r\n   * Determine the max-width of the dialog.\r\n   * The dialog width grows with the size of the screen.\r\n   * Set to `false` to disable `maxWidth`.\r\n   */\r\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\r\n\r\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   */\r\n  onBackdropClick: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired before the dialog enters.\r\n   */\r\n  onEnter: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the dialog has entered.\r\n   */\r\n  onEntered: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the dialog is entering.\r\n   */\r\n  onEntering: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the escape key is pressed,\r\n   * `disableKeyboard` is false and the modal is in focus.\r\n   */\r\n  onEscapeKeyDown: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired before the dialog exits.\r\n   */\r\n  onExit: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the dialog has exited.\r\n   */\r\n  onExited: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the dialog is exiting.\r\n   */\r\n  onExiting: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the Dialog is open.\r\n   */\r\n  open: PropTypes.bool.isRequired,\r\n\r\n  /**\r\n   * The component used to render the body of the dialog.\r\n   */\r\n  PaperComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Props applied to the [`Paper`](/api/paper/) element.\r\n   */\r\n  PaperProps: PropTypes.object,\r\n\r\n  /**\r\n   * Determine the container for scrolling the dialog.\r\n   */\r\n  scroll: PropTypes.oneOf(['body', 'paper']),\r\n\r\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   */\r\n  TransitionComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * The duration for the transition, in milliseconds.\r\n   * You may specify a single timeout for all transitions, or individually with an object.\r\n   */\r\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\r\n    appear: PropTypes.number,\r\n    enter: PropTypes.number,\r\n    exit: PropTypes.number\r\n  })]),\r\n\r\n  /**\r\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\r\n   */\r\n  TransitionProps: PropTypes.object\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiDialog'\r\n})(Dialog);"]},"metadata":{},"sourceType":"module"}