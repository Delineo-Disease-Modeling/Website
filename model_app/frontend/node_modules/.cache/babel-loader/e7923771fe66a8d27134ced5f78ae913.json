{"ast":null,"code":"var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\r\n * Creates a hash object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","map":{"version":3,"sources":["C:/Users/totti/Documents/jhu class/delineo/Website/model_app/frontend/node_modules/lodash/_Hash.js"],"names":["hashClear","require","hashDelete","hashGet","hashHas","hashSet","Hash","entries","index","length","clear","entry","set","prototype","get","has","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;AAAA,IACIC,UAAU,GAAGD,OAAO,CAAC,eAAD,CADxB;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAAC,YAAD,CAFrB;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAAC,YAAD,CAHrB;AAAA,IAIII,OAAO,GAAGJ,OAAO,CAAC,YAAD,CAJrB;AAMA;;;;;;;;;AAOA,SAASK,IAAT,CAAcC,OAAd,EAAuB;AACrB,MAAIC,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,MAAM,GAAGF,OAAO,IAAI,IAAX,GAAkB,CAAlB,GAAsBA,OAAO,CAACE,MAD3C;AAGA,OAAKC,KAAL;;AACA,SAAO,EAAEF,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAIE,KAAK,GAAGJ,OAAO,CAACC,KAAD,CAAnB;AACA,SAAKI,GAAL,CAASD,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAxB;AACD;AACF,C,CAED;;;AACAL,IAAI,CAACO,SAAL,CAAeH,KAAf,GAAuBV,SAAvB;AACAM,IAAI,CAACO,SAAL,CAAe,QAAf,IAA2BX,UAA3B;AACAI,IAAI,CAACO,SAAL,CAAeC,GAAf,GAAqBX,OAArB;AACAG,IAAI,CAACO,SAAL,CAAeE,GAAf,GAAqBX,OAArB;AACAE,IAAI,CAACO,SAAL,CAAeD,GAAf,GAAqBP,OAArB;AAEAW,MAAM,CAACC,OAAP,GAAiBX,IAAjB","sourcesContent":["var hashClear = require('./_hashClear'),\r\n    hashDelete = require('./_hashDelete'),\r\n    hashGet = require('./_hashGet'),\r\n    hashHas = require('./_hashHas'),\r\n    hashSet = require('./_hashSet');\r\n\r\n/**\r\n * Creates a hash object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction Hash(entries) {\r\n  var index = -1,\r\n      length = entries == null ? 0 : entries.length;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n// Add methods to `Hash`.\r\nHash.prototype.clear = hashClear;\r\nHash.prototype['delete'] = hashDelete;\r\nHash.prototype.get = hashGet;\r\nHash.prototype.has = hashHas;\r\nHash.prototype.set = hashSet;\r\n\r\nmodule.exports = Hash;\r\n"]},"metadata":{},"sourceType":"script"}