{"ast":null,"code":"var _jsxFileName = \"/Users/seamonester/Desktop/Easy Access/Delineo/PandemicModel/model_app/frontend/src/components/GridList.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: '#1b4441c2',\n    fontSize: '12px'\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  },\n  displayOver: {\n    height: \"100%\",\n    left: \"0\",\n    position: \"absolute\",\n    top: \"0\",\n    width: \"100%\",\n    zIndex: 2,\n    transition: \"background-color 350ms ease\",\n    backgroundColor: \"transparent\",\n    padding: \"20px 20px 0 20px\",\n    boxSizing: \"border-box\",\n    opacity: 0,\n    backgroundColor: \"rgba(0,0,0,.5)\"\n  },\n  hover: {\n    opacity: 1,\n    transition: \"opacity 350ms ease\"\n  },\n  hoverTitle: {\n    transform: \"translate3d(0,50px,0)\",\n    transition: \"transform 350ms ease\",\n    fontSize: '20px'\n  },\n  hoverSubtitle: {\n    transform: \"translate3d(0,50px,0)\",\n    transition: \"transform 350ms ease\",\n    fontSize: '16px'\n  },\n  hoverP: {\n    transform: \"translate3d(0,50px,0)\",\n    transition: \"transform 350ms ease\"\n  },\n  gridList: {\n    width: 800\n  },\n  GridListTile: {\n    '&:hover p, &:hover h3, &:hover h4': {\n      transform: \"translate3d(0,0,0)\"\n    },\n    '&:hover div': {\n      opacity: 1\n    }\n  }\n}));\nexport default function TitlebarGridList(tileData) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    cellWidth: 200,\n    className: classes.gridList,\n    cols: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, tileData.map(tile => /*#__PURE__*/React.createElement(GridListTile, {\n    className: classes.GridListTile,\n    key: tile.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: tile.img,\n    alt: tile.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.displayOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.hover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.hoverTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, tile.name), /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.hoverSubtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, tile.role), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.hoverP,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, tile.description)))))));\n}","map":{"version":3,"sources":["/Users/seamonester/Desktop/Easy Access/Delineo/PandemicModel/model_app/frontend/src/components/GridList.js"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","fontSize","icon","color","displayOver","height","left","position","top","width","zIndex","transition","padding","boxSizing","opacity","hover","hoverTitle","transform","hoverSubtitle","hoverP","gridList","TitlebarGridList","tileData","classes","map","tile","img","name","role","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: '#1b4441c2',\n    fontSize: '12px'\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n  displayOver: {\n    height: \"100%\",\n    left: \"0\",\n    position: \"absolute\",\n    top: \"0\",\n    width: \"100%\",\n    zIndex: 2,\n    transition: \"background-color 350ms ease\",\n    backgroundColor: \"transparent\",\n    padding: \"20px 20px 0 20px\",\n    boxSizing: \"border-box\",\n    opacity: 0,\n    backgroundColor: \"rgba(0,0,0,.5)\"\n  },\n  hover: {\n    opacity: 1,\n    transition: \"opacity 350ms ease\",\n  },\n  hoverTitle: {\n    transform: \"translate3d(0,50px,0)\",\n    transition: \"transform 350ms ease\",\n    fontSize: '20px'\n  },\n  hoverSubtitle: {\n    transform: \"translate3d(0,50px,0)\",\n    transition: \"transform 350ms ease\",\n    fontSize: '16px'\n  },\n  hoverP: {\n    transform: \"translate3d(0,50px,0)\",\n    transition: \"transform 350ms ease\", \n  },\n  gridList: {\n    width: 800,\n  },\n  GridListTile: {\n    '&:hover p, &:hover h3, &:hover h4': {\n      transform: \"translate3d(0,0,0)\",\n    },\n    '&:hover div': {\n      opacity: 1,\n    }\n  },\n}));\n\nexport default function TitlebarGridList(tileData) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellWidth={200} className={classes.gridList} cols={4}>\n        {tileData.map((tile) => (\n          <GridListTile className={classes.GridListTile} key={tile.img}>\n            <img src={tile.img} alt={tile.name} />\n            \n            <div className={classes.displayOver}>\n              <div className={classes.hover}>\n                <h3 className={classes.hoverTitle}>{tile.name}</h3>\n                <h4 className={classes.hoverSubtitle}>{tile.role}</h4>\n                <p className={classes.hoverP}>{tile.description}</p>\n              </div>\n            </div>\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}