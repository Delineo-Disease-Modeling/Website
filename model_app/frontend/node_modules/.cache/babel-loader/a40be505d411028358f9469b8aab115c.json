{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = addPassiveEventListener; // feature detection for passive support\n// see: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n\nfunction hasPassiveSupport() {\n  var passiveSupported = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        passiveSupported = true;\n      }\n    });\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, options);\n  } catch (err) {\n    passiveSupported = false;\n  }\n\n  return passiveSupported;\n}\n\nfunction addPassiveEventListener(element, eventName, func, capture) {\n  element.addEventListener(eventName, func, hasPassiveSupport() ? {\n    capture: capture,\n    passive: true\n  } : capture);\n}","map":{"version":3,"sources":["C:/Users/totti/Documents/jhu class/delineo/Website/model_app/frontend/node_modules/google-map-react/lib/utils/passiveEvents.js"],"names":["exports","__esModule","default","addPassiveEventListener","hasPassiveSupport","passiveSupported","options","Object","defineProperty","get","window","addEventListener","removeEventListener","err","element","eventName","func","capture","passive"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,uBAAlB,C,CACA;AACA;;AACA,SAASC,iBAAT,GAA6B;AAC3B,MAAIC,gBAAgB,GAAG,KAAvB;;AAEA,MAAI;AACF,QAAIC,OAAO,GAAGC,MAAM,CAACC,cAAP,CAAsB,EAAtB,EAA0B,SAA1B,EAAqC;AACjDC,MAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClBJ,QAAAA,gBAAgB,GAAG,IAAnB;AACD;AAHgD,KAArC,CAAd;AAMAK,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgCL,OAAhC,EAAyCA,OAAzC;AACAI,IAAAA,MAAM,CAACE,mBAAP,CAA2B,MAA3B,EAAmCN,OAAnC,EAA4CA,OAA5C;AACD,GATD,CASE,OAAOO,GAAP,EAAY;AACZR,IAAAA,gBAAgB,GAAG,KAAnB;AACD;;AAED,SAAOA,gBAAP;AACD;;AAED,SAASF,uBAAT,CAAiCW,OAAjC,EAA0CC,SAA1C,EAAqDC,IAArD,EAA2DC,OAA3D,EAAoE;AAClEH,EAAAA,OAAO,CAACH,gBAAR,CAAyBI,SAAzB,EAAoCC,IAApC,EAA0CZ,iBAAiB,KAAK;AAC9Da,IAAAA,OAAO,EAAEA,OADqD;AAE9DC,IAAAA,OAAO,EAAE;AAFqD,GAAL,GAGvDD,OAHJ;AAID","sourcesContent":["'use strict';\r\n\r\nexports.__esModule = true;\r\nexports.default = addPassiveEventListener;\r\n// feature detection for passive support\r\n// see: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\nfunction hasPassiveSupport() {\r\n  var passiveSupported = false;\r\n\r\n  try {\r\n    var options = Object.defineProperty({}, 'passive', {\r\n      get: function get() {\r\n        passiveSupported = true;\r\n      }\r\n    });\r\n\r\n    window.addEventListener('test', options, options);\r\n    window.removeEventListener('test', options, options);\r\n  } catch (err) {\r\n    passiveSupported = false;\r\n  }\r\n\r\n  return passiveSupported;\r\n}\r\n\r\nfunction addPassiveEventListener(element, eventName, func, capture) {\r\n  element.addEventListener(eventName, func, hasPassiveSupport() ? {\r\n    capture: capture,\r\n    passive: true\r\n  } : capture);\r\n}"]},"metadata":{},"sourceType":"script"}