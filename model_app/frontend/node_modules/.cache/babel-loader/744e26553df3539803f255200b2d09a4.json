{"ast":null,"code":"var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\r\n * Creates an list cache object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","map":{"version":3,"sources":["C:/Users/Arpan Gandhi/Desktop/Aayush Coding/Website/model_app/frontend/node_modules/lodash/_ListCache.js"],"names":["listCacheClear","require","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","clear","entry","set","prototype","get","has","module","exports"],"mappings":"AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA5B;AAAA,IACIC,eAAe,GAAGD,OAAO,CAAC,oBAAD,CAD7B;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAAC,iBAAD,CAF1B;AAAA,IAGIG,YAAY,GAAGH,OAAO,CAAC,iBAAD,CAH1B;AAAA,IAIII,YAAY,GAAGJ,OAAO,CAAC,iBAAD,CAJ1B;AAMA;;;;;;;;;AAOA,SAASK,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,MAAIC,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,MAAM,GAAGF,OAAO,IAAI,IAAX,GAAkB,CAAlB,GAAsBA,OAAO,CAACE,MAD3C;AAGA,OAAKC,KAAL;;AACA,SAAO,EAAEF,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAIE,KAAK,GAAGJ,OAAO,CAACC,KAAD,CAAnB;AACA,SAAKI,GAAL,CAASD,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAxB;AACD;AACF,C,CAED;;;AACAL,SAAS,CAACO,SAAV,CAAoBH,KAApB,GAA4BV,cAA5B;AACAM,SAAS,CAACO,SAAV,CAAoB,QAApB,IAAgCX,eAAhC;AACAI,SAAS,CAACO,SAAV,CAAoBC,GAApB,GAA0BX,YAA1B;AACAG,SAAS,CAACO,SAAV,CAAoBE,GAApB,GAA0BX,YAA1B;AACAE,SAAS,CAACO,SAAV,CAAoBD,GAApB,GAA0BP,YAA1B;AAEAW,MAAM,CAACC,OAAP,GAAiBX,SAAjB","sourcesContent":["var listCacheClear = require('./_listCacheClear'),\r\n    listCacheDelete = require('./_listCacheDelete'),\r\n    listCacheGet = require('./_listCacheGet'),\r\n    listCacheHas = require('./_listCacheHas'),\r\n    listCacheSet = require('./_listCacheSet');\r\n\r\n/**\r\n * Creates an list cache object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {Array} [entries] The key-value pairs to cache.\r\n */\r\nfunction ListCache(entries) {\r\n  var index = -1,\r\n      length = entries == null ? 0 : entries.length;\r\n\r\n  this.clear();\r\n  while (++index < length) {\r\n    var entry = entries[index];\r\n    this.set(entry[0], entry[1]);\r\n  }\r\n}\r\n\r\n// Add methods to `ListCache`.\r\nListCache.prototype.clear = listCacheClear;\r\nListCache.prototype['delete'] = listCacheDelete;\r\nListCache.prototype.get = listCacheGet;\r\nListCache.prototype.has = listCacheHas;\r\nListCache.prototype.set = listCacheSet;\r\n\r\nmodule.exports = ListCache;\r\n"]},"metadata":{},"sourceType":"script"}