{"ast":null,"code":"var isArrayLike = require('./isArrayLike');\n/**\r\n * Creates a `baseEach` or `baseEachRight` function.\r\n *\r\n * @private\r\n * @param {Function} eachFunc The function to iterate over a collection.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new base function.\r\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","map":{"version":3,"sources":["C:/Users/totti/Documents/jhu class/delineo/Website/model_app/frontend/node_modules/lodash/_createBaseEach.js"],"names":["isArrayLike","require","createBaseEach","eachFunc","fromRight","collection","iteratee","length","index","iterable","Object","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;AAEA;;;;;;;;;;AAQA,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,SAAlC,EAA6C;AAC3C,SAAO,UAASC,UAAT,EAAqBC,QAArB,EAA+B;AACpC,QAAID,UAAU,IAAI,IAAlB,EAAwB;AACtB,aAAOA,UAAP;AACD;;AACD,QAAI,CAACL,WAAW,CAACK,UAAD,CAAhB,EAA8B;AAC5B,aAAOF,QAAQ,CAACE,UAAD,EAAaC,QAAb,CAAf;AACD;;AACD,QAAIC,MAAM,GAAGF,UAAU,CAACE,MAAxB;AAAA,QACIC,KAAK,GAAGJ,SAAS,GAAGG,MAAH,GAAY,CAAC,CADlC;AAAA,QAEIE,QAAQ,GAAGC,MAAM,CAACL,UAAD,CAFrB;;AAIA,WAAQD,SAAS,GAAGI,KAAK,EAAR,GAAa,EAAEA,KAAF,GAAUD,MAAxC,EAAiD;AAC/C,UAAID,QAAQ,CAACG,QAAQ,CAACD,KAAD,CAAT,EAAkBA,KAAlB,EAAyBC,QAAzB,CAAR,KAA+C,KAAnD,EAA0D;AACxD;AACD;AACF;;AACD,WAAOJ,UAAP;AACD,GAjBD;AAkBD;;AAEDM,MAAM,CAACC,OAAP,GAAiBV,cAAjB","sourcesContent":["var isArrayLike = require('./isArrayLike');\r\n\r\n/**\r\n * Creates a `baseEach` or `baseEachRight` function.\r\n *\r\n * @private\r\n * @param {Function} eachFunc The function to iterate over a collection.\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new base function.\r\n */\r\nfunction createBaseEach(eachFunc, fromRight) {\r\n  return function(collection, iteratee) {\r\n    if (collection == null) {\r\n      return collection;\r\n    }\r\n    if (!isArrayLike(collection)) {\r\n      return eachFunc(collection, iteratee);\r\n    }\r\n    var length = collection.length,\r\n        index = fromRight ? length : -1,\r\n        iterable = Object(collection);\r\n\r\n    while ((fromRight ? index-- : ++index < length)) {\r\n      if (iteratee(iterable[index], index, iterable) === false) {\r\n        break;\r\n      }\r\n    }\r\n    return collection;\r\n  };\r\n}\r\n\r\nmodule.exports = createBaseEach;\r\n"]},"metadata":{},"sourceType":"script"}