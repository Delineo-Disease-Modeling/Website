{"ast":null,"code":"import { rgb as colorRgb } from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, { gamma } from \"./color.js\";\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function (t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function (colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i,\n        color;\n\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function (t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);","map":{"version":3,"sources":["C:/Users/Arpan Gandhi/Desktop/Aayush Coding/Website/model_app/frontend/node_modules/d3-interpolate/src/rgb.js"],"names":["rgb","colorRgb","basis","basisClosed","nogamma","gamma","rgbGamma","y","color","start","end","r","g","b","opacity","t","rgbSpline","spline","colors","n","length","Array","i","rgbBasis","rgbBasisClosed"],"mappings":"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","sourcesContent":["import {rgb as colorRgb} from \"d3-color\";\r\nimport basis from \"./basis.js\";\r\nimport basisClosed from \"./basisClosed.js\";\r\nimport nogamma, {gamma} from \"./color.js\";\r\n\r\nexport default (function rgbGamma(y) {\r\n  var color = gamma(y);\r\n\r\n  function rgb(start, end) {\r\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\r\n        g = color(start.g, end.g),\r\n        b = color(start.b, end.b),\r\n        opacity = nogamma(start.opacity, end.opacity);\r\n    return function(t) {\r\n      start.r = r(t);\r\n      start.g = g(t);\r\n      start.b = b(t);\r\n      start.opacity = opacity(t);\r\n      return start + \"\";\r\n    };\r\n  }\r\n\r\n  rgb.gamma = rgbGamma;\r\n\r\n  return rgb;\r\n})(1);\r\n\r\nfunction rgbSpline(spline) {\r\n  return function(colors) {\r\n    var n = colors.length,\r\n        r = new Array(n),\r\n        g = new Array(n),\r\n        b = new Array(n),\r\n        i, color;\r\n    for (i = 0; i < n; ++i) {\r\n      color = colorRgb(colors[i]);\r\n      r[i] = color.r || 0;\r\n      g[i] = color.g || 0;\r\n      b[i] = color.b || 0;\r\n    }\r\n    r = spline(r);\r\n    g = spline(g);\r\n    b = spline(b);\r\n    color.opacity = 1;\r\n    return function(t) {\r\n      color.r = r(t);\r\n      color.g = g(t);\r\n      color.b = b(t);\r\n      return color + \"\";\r\n    };\r\n  };\r\n}\r\n\r\nexport var rgbBasis = rgbSpline(basis);\r\nexport var rgbBasisClosed = rgbSpline(basisClosed);\r\n"]},"metadata":{},"sourceType":"module"}