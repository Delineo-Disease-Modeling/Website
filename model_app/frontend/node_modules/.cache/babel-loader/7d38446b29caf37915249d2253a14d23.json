{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The action to display. It renders after the message, at the end of the snackbar.\r\n   */\n  action: PropTypes.node,\n\n  /**\r\n   * The anchor of the `Snackbar`.\r\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\r\n   * The number of milliseconds to wait before automatically calling the\r\n   * `onClose` function. `onClose` should then set the state of the `open`\r\n   * prop to hide the Snackbar. This behavior is disabled by default with\r\n   * the `null` value.\r\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\r\n   * Replace the `SnackbarContent` component.\r\n   */\n  children: PropTypes.element,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Props applied to the `ClickAwayListener` element.\r\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\r\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\r\n   */\n  ContentProps: PropTypes.object,\n\n  /**\r\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\r\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\r\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\r\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\r\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\r\n   * features such as autoHideDuration may be canceled.\r\n   */\n  key: PropTypes.any,\n\n  /**\r\n   * The message to display.\r\n   */\n  message: PropTypes.node,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Typically `onClose` is used to set state in the parent component,\r\n   * which is used to control the `Snackbar` `open` prop.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\r\n   * for example ignoring `clickaway`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * Callback fired before the transition is entering.\r\n   */\n  onEnter: PropTypes.func,\n\n  /**\r\n   * Callback fired when the transition has entered.\r\n   */\n  onEntered: PropTypes.func,\n\n  /**\r\n   * Callback fired when the transition is entering.\r\n   */\n  onEntering: PropTypes.func,\n\n  /**\r\n   * Callback fired before the transition is exiting.\r\n   */\n  onExit: PropTypes.func,\n\n  /**\r\n   * Callback fired when the transition has exited.\r\n   */\n  onExited: PropTypes.func,\n\n  /**\r\n   * Callback fired when the transition is exiting.\r\n   */\n  onExiting: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\r\n   * If `true`, `Snackbar` is open.\r\n   */\n  open: PropTypes.bool,\n\n  /**\r\n   * The number of milliseconds to wait before dismissing after user interaction.\r\n   * If `autoHideDuration` prop isn't specified, it does nothing.\r\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\r\n   * we default to `autoHideDuration / 2` ms.\r\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\r\n   * The duration for the transition, in milliseconds.\r\n   * You may specify a single timeout for all transitions, or individually with an object.\r\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\r\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\r\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","map":{"version":3,"sources":["C:/Users/Arpan Gandhi/Desktop/Aayush Coding/Website/model_app/frontend/node_modules/@material-ui/core/esm/Snackbar/Snackbar.js"],"names":["_objectWithoutProperties","_defineProperty","_extends","React","PropTypes","clsx","withStyles","duration","ClickAwayListener","useEventCallback","capitalize","createChainedFunction","Grow","SnackbarContent","styles","theme","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","root","zIndex","snackbar","position","display","alignItems","anchorOriginTopCenter","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","Snackbar","forwardRef","props","ref","action","_props$anchorOrigin","anchorOrigin","vertical","horizontal","_props$autoHideDurati","autoHideDuration","children","classes","className","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","message","onClose","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","open","resumeHideDuration","_props$TransitionComp","TransitionComponent","_props$transitionDura","transitionDuration","enter","enteringScreen","exit","leavingScreen","TransitionProps","other","timerAutoHide","useRef","_React$useState","useState","exited","setExited","handleClose","apply","arguments","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","useCallback","handleMouseEnter","event","handleMouseLeave","handleClickAway","handleExited","handleEnter","window","addEventListener","removeEventListener","undefined","createElement","onClickAway","concat","appear","in","timeout","direction","process","env","NODE_ENV","propTypes","node","shape","oneOf","isRequired","number","element","object","string","bool","key","any","func","elementType","oneOfType","flip","name"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nimport { duration } from '../styles/transitions';\r\nimport ClickAwayListener from '../ClickAwayListener';\r\nimport useEventCallback from '../utils/useEventCallback';\r\nimport capitalize from '../utils/capitalize';\r\nimport createChainedFunction from '../utils/createChainedFunction';\r\nimport Grow from '../Grow';\r\nimport SnackbarContent from '../SnackbarContent';\r\nexport var styles = function styles(theme) {\r\n  var top1 = {\r\n    top: 8\r\n  };\r\n  var bottom1 = {\r\n    bottom: 8\r\n  };\r\n  var right = {\r\n    justifyContent: 'flex-end'\r\n  };\r\n  var left = {\r\n    justifyContent: 'flex-start'\r\n  };\r\n  var top3 = {\r\n    top: 24\r\n  };\r\n  var bottom3 = {\r\n    bottom: 24\r\n  };\r\n  var right3 = {\r\n    right: 24\r\n  };\r\n  var left3 = {\r\n    left: 24\r\n  };\r\n  var center = {\r\n    left: '50%',\r\n    right: 'auto',\r\n    transform: 'translateX(-50%)'\r\n  };\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      zIndex: theme.zIndex.snackbar,\r\n      position: 'fixed',\r\n      display: 'flex',\r\n      left: 8,\r\n      right: 8,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n\r\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\r\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\r\n\r\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\r\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\r\n\r\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\r\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\r\n      left: 'auto'\r\n    }, top3, right3))),\r\n\r\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\r\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\r\n      left: 'auto'\r\n    }, bottom3, right3))),\r\n\r\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\r\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\r\n      right: 'auto'\r\n    }, top3, left3))),\r\n\r\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\r\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\r\n      right: 'auto'\r\n    }, bottom3, left3)))\r\n  };\r\n};\r\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\r\n  var action = props.action,\r\n      _props$anchorOrigin = props.anchorOrigin;\r\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\r\n    vertical: 'bottom',\r\n    horizontal: 'center'\r\n  } : _props$anchorOrigin;\r\n\r\n  var vertical = _props$anchorOrigin.vertical,\r\n      horizontal = _props$anchorOrigin.horizontal,\r\n      _props$autoHideDurati = props.autoHideDuration,\r\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\r\n      children = props.children,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\r\n      ContentProps = props.ContentProps,\r\n      _props$disableWindowB = props.disableWindowBlurListener,\r\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\r\n      message = props.message,\r\n      onClose = props.onClose,\r\n      onEnter = props.onEnter,\r\n      onEntered = props.onEntered,\r\n      onEntering = props.onEntering,\r\n      onExit = props.onExit,\r\n      onExited = props.onExited,\r\n      onExiting = props.onExiting,\r\n      onMouseEnter = props.onMouseEnter,\r\n      onMouseLeave = props.onMouseLeave,\r\n      open = props.open,\r\n      resumeHideDuration = props.resumeHideDuration,\r\n      _props$TransitionComp = props.TransitionComponent,\r\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\r\n      _props$transitionDura = props.transitionDuration,\r\n      transitionDuration = _props$transitionDura === void 0 ? {\r\n    enter: duration.enteringScreen,\r\n    exit: duration.leavingScreen\r\n  } : _props$transitionDura,\r\n      TransitionProps = props.TransitionProps,\r\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\r\n\r\n  var timerAutoHide = React.useRef();\r\n\r\n  var _React$useState = React.useState(true),\r\n      exited = _React$useState[0],\r\n      setExited = _React$useState[1];\r\n\r\n  var handleClose = useEventCallback(function () {\r\n    if (onClose) {\r\n      onClose.apply(void 0, arguments);\r\n    }\r\n  });\r\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\r\n    if (!onClose || autoHideDurationParam == null) {\r\n      return;\r\n    }\r\n\r\n    clearTimeout(timerAutoHide.current);\r\n    timerAutoHide.current = setTimeout(function () {\r\n      handleClose(null, 'timeout');\r\n    }, autoHideDurationParam);\r\n  });\r\n  React.useEffect(function () {\r\n    if (open) {\r\n      setAutoHideTimer(autoHideDuration);\r\n    }\r\n\r\n    return function () {\r\n      clearTimeout(timerAutoHide.current);\r\n    };\r\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\r\n  // or when the user hide the window.\r\n\r\n  var handlePause = function handlePause() {\r\n    clearTimeout(timerAutoHide.current);\r\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\r\n  // or when the window is shown back.\r\n\r\n\r\n  var handleResume = React.useCallback(function () {\r\n    if (autoHideDuration != null) {\r\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\r\n    }\r\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\r\n\r\n  var handleMouseEnter = function handleMouseEnter(event) {\r\n    if (onMouseEnter) {\r\n      onMouseEnter(event);\r\n    }\r\n\r\n    handlePause();\r\n  };\r\n\r\n  var handleMouseLeave = function handleMouseLeave(event) {\r\n    if (onMouseLeave) {\r\n      onMouseLeave(event);\r\n    }\r\n\r\n    handleResume();\r\n  };\r\n\r\n  var handleClickAway = function handleClickAway(event) {\r\n    if (onClose) {\r\n      onClose(event, 'clickaway');\r\n    }\r\n  };\r\n\r\n  var handleExited = function handleExited() {\r\n    setExited(true);\r\n  };\r\n\r\n  var handleEnter = function handleEnter() {\r\n    setExited(false);\r\n  };\r\n\r\n  React.useEffect(function () {\r\n    if (!disableWindowBlurListener && open) {\r\n      window.addEventListener('focus', handleResume);\r\n      window.addEventListener('blur', handlePause);\r\n      return function () {\r\n        window.removeEventListener('focus', handleResume);\r\n        window.removeEventListener('blur', handlePause);\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\r\n\r\n  if (!open && exited) {\r\n    return null;\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\r\n    onClickAway: handleClickAway\r\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\r\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\r\n    onMouseEnter: handleMouseEnter,\r\n    onMouseLeave: handleMouseLeave,\r\n    ref: ref\r\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\r\n    appear: true,\r\n    in: open,\r\n    onEnter: createChainedFunction(handleEnter, onEnter),\r\n    onEntered: onEntered,\r\n    onEntering: onEntering,\r\n    onExit: onExit,\r\n    onExited: createChainedFunction(handleExited, onExited),\r\n    onExiting: onExiting,\r\n    timeout: transitionDuration,\r\n    direction: vertical === 'top' ? 'down' : 'up'\r\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\r\n    message: message,\r\n    action: action\r\n  }, ContentProps)))));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The action to display. It renders after the message, at the end of the snackbar.\r\n   */\r\n  action: PropTypes.node,\r\n\r\n  /**\r\n   * The anchor of the `Snackbar`.\r\n   */\r\n  anchorOrigin: PropTypes.shape({\r\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\r\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\r\n  }),\r\n\r\n  /**\r\n   * The number of milliseconds to wait before automatically calling the\r\n   * `onClose` function. `onClose` should then set the state of the `open`\r\n   * prop to hide the Snackbar. This behavior is disabled by default with\r\n   * the `null` value.\r\n   */\r\n  autoHideDuration: PropTypes.number,\r\n\r\n  /**\r\n   * Replace the `SnackbarContent` component.\r\n   */\r\n  children: PropTypes.element,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * Props applied to the `ClickAwayListener` element.\r\n   */\r\n  ClickAwayListenerProps: PropTypes.object,\r\n\r\n  /**\r\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\r\n   */\r\n  ContentProps: PropTypes.object,\r\n\r\n  /**\r\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\r\n   */\r\n  disableWindowBlurListener: PropTypes.bool,\r\n\r\n  /**\r\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\r\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\r\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\r\n   * features such as autoHideDuration may be canceled.\r\n   */\r\n  key: PropTypes.any,\r\n\r\n  /**\r\n   * The message to display.\r\n   */\r\n  message: PropTypes.node,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Typically `onClose` is used to set state in the parent component,\r\n   * which is used to control the `Snackbar` `open` prop.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\r\n   * for example ignoring `clickaway`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired before the transition is entering.\r\n   */\r\n  onEnter: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the transition has entered.\r\n   */\r\n  onEntered: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the transition is entering.\r\n   */\r\n  onEntering: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired before the transition is exiting.\r\n   */\r\n  onExit: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the transition has exited.\r\n   */\r\n  onExited: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the transition is exiting.\r\n   */\r\n  onExiting: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onMouseEnter: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onMouseLeave: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, `Snackbar` is open.\r\n   */\r\n  open: PropTypes.bool,\r\n\r\n  /**\r\n   * The number of milliseconds to wait before dismissing after user interaction.\r\n   * If `autoHideDuration` prop isn't specified, it does nothing.\r\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\r\n   * we default to `autoHideDuration / 2` ms.\r\n   */\r\n  resumeHideDuration: PropTypes.number,\r\n\r\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   */\r\n  TransitionComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * The duration for the transition, in milliseconds.\r\n   * You may specify a single timeout for all transitions, or individually with an object.\r\n   */\r\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\r\n    appear: PropTypes.number,\r\n    enter: PropTypes.number,\r\n    exit: PropTypes.number\r\n  })]),\r\n\r\n  /**\r\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\r\n   */\r\n  TransitionProps: PropTypes.object\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  flip: false,\r\n  name: 'MuiSnackbar'\r\n})(Snackbar);"]},"metadata":{},"sourceType":"module"}