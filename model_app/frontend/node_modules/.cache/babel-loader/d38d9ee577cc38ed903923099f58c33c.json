{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../Unstable_TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container;\n  return ReactDOM.findDOMNode(container);\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nvar defaultManager = new ModalManager();\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\r\n * Modal is a lower-level construct that is leveraged by the following components:\r\n *\r\n * - [Dialog](/api/dialog/)\r\n * - [Drawer](/api/drawer/)\r\n * - [Menu](/api/menu/)\r\n * - [Popover](/api/popover/)\r\n *\r\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\r\n * rather than directly using Modal.\r\n *\r\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\r\n */\n\nvar Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n\n  var _props$BackdropCompon = props.BackdropComponent,\n      BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      _props$manager = props.manager,\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onRendered = props.onRendered,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\"]);\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (onRendered) {\n      onRendered();\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviours like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  var inlineStyle = styles(theme || {\n    zIndex: zIndex\n  });\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)\n  }), hideBackdrop ? null : /*#__PURE__*/React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), /*#__PURE__*/React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, /*#__PURE__*/React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  /**\r\n   * A backdrop component. This prop enables custom backdrop rendering.\r\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\r\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\r\n   * A single child content element.\r\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\r\n   * When set to true the Modal waits until a nested Transition is completed before closing.\r\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\r\n   * A HTML element, component instance, or function that returns either.\r\n   * The `container` will have the portal children appended to it.\r\n   *\r\n   * By default, it uses the body of the top-level document object,\r\n   * so it's simply `document.body` most of the time.\r\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.instanceOf(React.Component), PropTypes.func]),\n\n  /**\r\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes.\r\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, clicking the backdrop will not fire `onClose`.\r\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\r\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, hitting escape will not fire `onClose`.\r\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\r\n   * Disable the portal behavior.\r\n   * The children stay within it's parent DOM hierarchy.\r\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\r\n   * If `true`, the modal will not restore focus to previously focused element once\r\n   * modal is hidden.\r\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\r\n   * Disable the scroll lock behavior.\r\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\r\n   * If `true`, the backdrop is not rendered.\r\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\r\n   * Always keep the children in the DOM.\r\n   * This prop can be useful in SEO situation or\r\n   * when you want to maximize the responsiveness of the Modal.\r\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  manager: PropTypes.object,\n\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * Callback fired when the escape key is pressed,\r\n   * `disableEscapeKeyDown` is false and the modal is in focus.\r\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\r\n   * Callback fired once the children has been mounted into the `container`.\r\n   * It signals that the `open={true}` prop took effect.\r\n   *\r\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\r\n   */\n  onRendered: PropTypes.func,\n\n  /**\r\n   * If `true`, the modal is open.\r\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;","map":{"version":3,"sources":["C:/Users/Arpan Gandhi/Desktop/Aayush Coding/Website/model_app/frontend/node_modules/@material-ui/core/esm/Modal/Modal.js"],"names":["_objectWithoutProperties","_extends","React","ReactDOM","PropTypes","getThemeProps","useTheme","elementAcceptingRef","HTMLElementType","ownerDocument","Portal","createChainedFunction","useForkRef","useEventCallback","zIndex","ModalManager","ariaHidden","TrapFocus","SimpleBackdrop","getContainer","container","findDOMNode","getHasTransition","props","children","hasOwnProperty","defaultManager","styles","theme","root","position","modal","right","bottom","top","left","hidden","visibility","Modal","forwardRef","inProps","ref","name","_props$BackdropCompon","BackdropComponent","BackdropProps","_props$closeAfterTran","closeAfterTransition","_props$disableAutoFoc","disableAutoFocus","_props$disableBackdro","disableBackdropClick","_props$disableEnforce","disableEnforceFocus","_props$disableEscapeK","disableEscapeKeyDown","_props$disablePortal","disablePortal","_props$disableRestore","disableRestoreFocus","_props$disableScrollL","disableScrollLock","_props$hideBackdrop","hideBackdrop","_props$keepMounted","keepMounted","_props$manager","manager","onBackdropClick","onClose","onEscapeKeyDown","onRendered","open","other","_React$useState","useState","exited","setExited","useRef","mountNodeRef","modalRef","handleRef","hasTransition","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","inlineStyle","childProps","tabIndex","undefined","onEnter","onExited","createElement","onKeyDown","role","style","onClick","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","elementType","object","isRequired","bool","oneOfType","instanceOf","Component","func"],"mappings":"AAAA,OAAOA,wBAAP,MAAqC,oDAArC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,qBAAxC;AACA,SAASC,mBAAT,EAA8BC,eAA9B,QAAqD,oBAArD;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,qBAAP,MAAkC,gCAAlC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,YAAP,IAAuBC,UAAvB,QAAyC,gBAAzC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AAC/BA,EAAAA,SAAS,GAAG,OAAOA,SAAP,KAAqB,UAArB,GAAkCA,SAAS,EAA3C,GAAgDA,SAA5D;AACA,SAAOjB,QAAQ,CAACkB,WAAT,CAAqBD,SAArB,CAAP;AACD;;AAED,SAASE,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAOA,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACC,QAAN,CAAeD,KAAf,CAAqBE,cAArB,CAAoC,IAApC,CAAjB,GAA6D,KAApE;AACD,C,CAAC;AACF;;;AAGA,IAAIC,cAAc,GAAG,IAAIX,YAAJ,EAArB;AACA,OAAO,IAAIY,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACzC,SAAO;AACL;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,OADN;AAEJhB,MAAAA,MAAM,EAAEc,KAAK,CAACd,MAAN,CAAaiB,KAFjB;AAGJC,MAAAA,KAAK,EAAE,CAHH;AAIJC,MAAAA,MAAM,EAAE,CAJJ;AAKJC,MAAAA,GAAG,EAAE,CALD;AAMJC,MAAAA,IAAI,EAAE;AANF,KAFD;;AAWL;AACAC,IAAAA,MAAM,EAAE;AACNC,MAAAA,UAAU,EAAE;AADN;AAZH,GAAP;AAgBD,CAjBM;AAkBP;;;;;;;;;;;;;;AAcA,IAAIC,KAAK,GAAG,aAAapC,KAAK,CAACqC,UAAN,CAAiB,SAASD,KAAT,CAAeE,OAAf,EAAwBC,GAAxB,EAA6B;AACrE,MAAIb,KAAK,GAAGtB,QAAQ,EAApB;AACA,MAAIiB,KAAK,GAAGlB,aAAa,CAAC;AACxBqC,IAAAA,IAAI,EAAE,UADkB;AAExBnB,IAAAA,KAAK,EAAEtB,QAAQ,CAAC,EAAD,EAAKuC,OAAL,CAFS;AAGxBZ,IAAAA,KAAK,EAAEA;AAHiB,GAAD,CAAzB;;AAMA,MAAIe,qBAAqB,GAAGpB,KAAK,CAACqB,iBAAlC;AAAA,MACIA,iBAAiB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmCzB,cAAnC,GAAoDyB,qBAD5E;AAAA,MAEIE,aAAa,GAAGtB,KAAK,CAACsB,aAF1B;AAAA,MAGIrB,QAAQ,GAAGD,KAAK,CAACC,QAHrB;AAAA,MAIIsB,qBAAqB,GAAGvB,KAAK,CAACwB,oBAJlC;AAAA,MAKIA,oBAAoB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBALtE;AAAA,MAMI1B,SAAS,GAAGG,KAAK,CAACH,SANtB;AAAA,MAOI4B,qBAAqB,GAAGzB,KAAK,CAAC0B,gBAPlC;AAAA,MAQIA,gBAAgB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBARlE;AAAA,MASIE,qBAAqB,GAAG3B,KAAK,CAAC4B,oBATlC;AAAA,MAUIA,oBAAoB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBAVtE;AAAA,MAWIE,qBAAqB,GAAG7B,KAAK,CAAC8B,mBAXlC;AAAA,MAYIA,mBAAmB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBAZrE;AAAA,MAaIE,qBAAqB,GAAG/B,KAAK,CAACgC,oBAblC;AAAA,MAcIA,oBAAoB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBAdtE;AAAA,MAeIE,oBAAoB,GAAGjC,KAAK,CAACkC,aAfjC;AAAA,MAgBIA,aAAa,GAAGD,oBAAoB,KAAK,KAAK,CAA9B,GAAkC,KAAlC,GAA0CA,oBAhB9D;AAAA,MAiBIE,qBAAqB,GAAGnC,KAAK,CAACoC,mBAjBlC;AAAA,MAkBIA,mBAAmB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBAlBrE;AAAA,MAmBIE,qBAAqB,GAAGrC,KAAK,CAACsC,iBAnBlC;AAAA,MAoBIA,iBAAiB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBApBnE;AAAA,MAqBIE,mBAAmB,GAAGvC,KAAK,CAACwC,YArBhC;AAAA,MAsBIA,YAAY,GAAGD,mBAAmB,KAAK,KAAK,CAA7B,GAAiC,KAAjC,GAAyCA,mBAtB5D;AAAA,MAuBIE,kBAAkB,GAAGzC,KAAK,CAAC0C,WAvB/B;AAAA,MAwBIA,WAAW,GAAGD,kBAAkB,KAAK,KAAK,CAA5B,GAAgC,KAAhC,GAAwCA,kBAxB1D;AAAA,MAyBIE,cAAc,GAAG3C,KAAK,CAAC4C,OAzB3B;AAAA,MA0BIA,OAAO,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4BxC,cAA5B,GAA6CwC,cA1B3D;AAAA,MA2BIE,eAAe,GAAG7C,KAAK,CAAC6C,eA3B5B;AAAA,MA4BIC,OAAO,GAAG9C,KAAK,CAAC8C,OA5BpB;AAAA,MA6BIC,eAAe,GAAG/C,KAAK,CAAC+C,eA7B5B;AAAA,MA8BIC,UAAU,GAAGhD,KAAK,CAACgD,UA9BvB;AAAA,MA+BIC,IAAI,GAAGjD,KAAK,CAACiD,IA/BjB;AAAA,MAgCIC,KAAK,GAAGzE,wBAAwB,CAACuB,KAAD,EAAQ,CAAC,mBAAD,EAAsB,eAAtB,EAAuC,UAAvC,EAAmD,sBAAnD,EAA2E,WAA3E,EAAwF,kBAAxF,EAA4G,sBAA5G,EAAoI,qBAApI,EAA2J,sBAA3J,EAAmL,eAAnL,EAAoM,qBAApM,EAA2N,mBAA3N,EAAgP,cAAhP,EAAgQ,aAAhQ,EAA+Q,SAA/Q,EAA0R,iBAA1R,EAA6S,SAA7S,EAAwT,iBAAxT,EAA2U,YAA3U,EAAyV,MAAzV,CAAR,CAhCpC;;AAkCA,MAAImD,eAAe,GAAGxE,KAAK,CAACyE,QAAN,CAAe,IAAf,CAAtB;AAAA,MACIC,MAAM,GAAGF,eAAe,CAAC,CAAD,CAD5B;AAAA,MAEIG,SAAS,GAAGH,eAAe,CAAC,CAAD,CAF/B;;AAIA,MAAI3C,KAAK,GAAG7B,KAAK,CAAC4E,MAAN,CAAa,EAAb,CAAZ;AACA,MAAIC,YAAY,GAAG7E,KAAK,CAAC4E,MAAN,CAAa,IAAb,CAAnB;AACA,MAAIE,QAAQ,GAAG9E,KAAK,CAAC4E,MAAN,CAAa,IAAb,CAAf;AACA,MAAIG,SAAS,GAAGrE,UAAU,CAACoE,QAAD,EAAWvC,GAAX,CAA1B;AACA,MAAIyC,aAAa,GAAG5D,gBAAgB,CAACC,KAAD,CAApC;;AAEA,MAAI4D,MAAM,GAAG,SAASA,MAAT,GAAkB;AAC7B,WAAO1E,aAAa,CAACsE,YAAY,CAACK,OAAd,CAApB;AACD,GAFD;;AAIA,MAAIC,QAAQ,GAAG,SAASA,QAAT,GAAoB;AACjCtD,IAAAA,KAAK,CAACqD,OAAN,CAAcJ,QAAd,GAAyBA,QAAQ,CAACI,OAAlC;AACArD,IAAAA,KAAK,CAACqD,OAAN,CAAcE,SAAd,GAA0BP,YAAY,CAACK,OAAvC;AACA,WAAOrD,KAAK,CAACqD,OAAb;AACD,GAJD;;AAMA,MAAIG,aAAa,GAAG,SAASA,aAAT,GAAyB;AAC3CpB,IAAAA,OAAO,CAACqB,KAAR,CAAcH,QAAQ,EAAtB,EAA0B;AACxBxB,MAAAA,iBAAiB,EAAEA;AADK,KAA1B,EAD2C,CAGvC;;AAEJmB,IAAAA,QAAQ,CAACI,OAAT,CAAiBK,SAAjB,GAA6B,CAA7B;AACD,GAND;;AAQA,MAAIC,UAAU,GAAG7E,gBAAgB,CAAC,YAAY;AAC5C,QAAI8E,iBAAiB,GAAGxE,YAAY,CAACC,SAAD,CAAZ,IAA2B+D,MAAM,GAAGS,IAA5D;AACAzB,IAAAA,OAAO,CAAC0B,GAAR,CAAYR,QAAQ,EAApB,EAAwBM,iBAAxB,EAF4C,CAEA;;AAE5C,QAAIX,QAAQ,CAACI,OAAb,EAAsB;AACpBG,MAAAA,aAAa;AACd;AACF,GAPgC,CAAjC;AAQA,MAAIO,UAAU,GAAG5F,KAAK,CAAC6F,WAAN,CAAkB,YAAY;AAC7C,WAAO5B,OAAO,CAAC2B,UAAR,CAAmBT,QAAQ,EAA3B,CAAP;AACD,GAFgB,EAEd,CAAClB,OAAD,CAFc,CAAjB;AAGA,MAAI6B,eAAe,GAAGnF,gBAAgB,CAAC,UAAUoF,IAAV,EAAgB;AACrDlB,IAAAA,YAAY,CAACK,OAAb,GAAuBa,IAAvB;;AAEA,QAAI,CAACA,IAAL,EAAW;AACT;AACD;;AAED,QAAI1B,UAAJ,EAAgB;AACdA,MAAAA,UAAU;AACX;;AAED,QAAIC,IAAI,IAAIsB,UAAU,EAAtB,EAA0B;AACxBP,MAAAA,aAAa;AACd,KAFD,MAEO;AACLvE,MAAAA,UAAU,CAACgE,QAAQ,CAACI,OAAV,EAAmB,IAAnB,CAAV;AACD;AACF,GAhBqC,CAAtC;AAiBA,MAAIc,WAAW,GAAGhG,KAAK,CAAC6F,WAAN,CAAkB,YAAY;AAC9C5B,IAAAA,OAAO,CAACgC,MAAR,CAAed,QAAQ,EAAvB;AACD,GAFiB,EAEf,CAAClB,OAAD,CAFe,CAAlB;AAGAjE,EAAAA,KAAK,CAACkG,SAAN,CAAgB,YAAY;AAC1B,WAAO,YAAY;AACjBF,MAAAA,WAAW;AACZ,KAFD;AAGD,GAJD,EAIG,CAACA,WAAD,CAJH;AAKAhG,EAAAA,KAAK,CAACkG,SAAN,CAAgB,YAAY;AAC1B,QAAI5B,IAAJ,EAAU;AACRkB,MAAAA,UAAU;AACX,KAFD,MAEO,IAAI,CAACR,aAAD,IAAkB,CAACnC,oBAAvB,EAA6C;AAClDmD,MAAAA,WAAW;AACZ;AACF,GAND,EAMG,CAAC1B,IAAD,EAAO0B,WAAP,EAAoBhB,aAApB,EAAmCnC,oBAAnC,EAAyD2C,UAAzD,CANH;;AAQA,MAAI,CAACzB,WAAD,IAAgB,CAACO,IAAjB,KAA0B,CAACU,aAAD,IAAkBN,MAA5C,CAAJ,EAAyD;AACvD,WAAO,IAAP;AACD;;AAED,MAAIyB,WAAW,GAAG,SAASA,WAAT,GAAuB;AACvCxB,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAIA,MAAIyB,YAAY,GAAG,SAASA,YAAT,GAAwB;AACzCzB,IAAAA,SAAS,CAAC,IAAD,CAAT;;AAEA,QAAI9B,oBAAJ,EAA0B;AACxBmD,MAAAA,WAAW;AACZ;AACF,GAND;;AAQA,MAAIK,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;AAC5D,QAAIA,KAAK,CAACC,MAAN,KAAiBD,KAAK,CAACE,aAA3B,EAA0C;AACxC;AACD;;AAED,QAAItC,eAAJ,EAAqB;AACnBA,MAAAA,eAAe,CAACoC,KAAD,CAAf;AACD;;AAED,QAAI,CAACrD,oBAAD,IAAyBkB,OAA7B,EAAsC;AACpCA,MAAAA,OAAO,CAACmC,KAAD,EAAQ,eAAR,CAAP;AACD;AACF,GAZD;;AAcA,MAAIG,aAAa,GAAG,SAASA,aAAT,CAAuBH,KAAvB,EAA8B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,QAAIA,KAAK,CAACI,GAAN,KAAc,QAAd,IAA0B,CAACd,UAAU,EAAzC,EAA6C;AAC3C;AACD;;AAED,QAAIxB,eAAJ,EAAqB;AACnBA,MAAAA,eAAe,CAACkC,KAAD,CAAf;AACD;;AAED,QAAI,CAACjD,oBAAL,EAA2B;AACzB;AACAiD,MAAAA,KAAK,CAACK,eAAN;;AAEA,UAAIxC,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACmC,KAAD,EAAQ,eAAR,CAAP;AACD;AACF;AACF,GAvBD;;AAyBA,MAAIM,WAAW,GAAGnF,MAAM,CAACC,KAAK,IAAI;AAChCd,IAAAA,MAAM,EAAEA;AADwB,GAAV,CAAxB;AAGA,MAAIiG,UAAU,GAAG,EAAjB;;AAEA,MAAIvF,QAAQ,CAACD,KAAT,CAAeyF,QAAf,KAA4BC,SAAhC,EAA2C;AACzCF,IAAAA,UAAU,CAACC,QAAX,GAAsBxF,QAAQ,CAACD,KAAT,CAAeyF,QAAf,IAA2B,IAAjD;AACD,GAhLoE,CAgLnE;;;AAGF,MAAI9B,aAAJ,EAAmB;AACjB6B,IAAAA,UAAU,CAACG,OAAX,GAAqBvG,qBAAqB,CAAC0F,WAAD,EAAc7E,QAAQ,CAACD,KAAT,CAAe2F,OAA7B,CAA1C;AACAH,IAAAA,UAAU,CAACI,QAAX,GAAsBxG,qBAAqB,CAAC2F,YAAD,EAAe9E,QAAQ,CAACD,KAAT,CAAe4F,QAA9B,CAA3C;AACD;;AAED,SAAO,aAAajH,KAAK,CAACkH,aAAN,CAAoB1G,MAApB,EAA4B;AAC9C+B,IAAAA,GAAG,EAAEuD,eADyC;AAE9C5E,IAAAA,SAAS,EAAEA,SAFmC;AAG9CqC,IAAAA,aAAa,EAAEA;AAH+B,GAA5B,EAIjB,aAAavD,KAAK,CAACkH,aAAN,CAAoB,KAApB,EAA2BnH,QAAQ,CAAC;AAClDwC,IAAAA,GAAG,EAAEwC,SAD6C;AAElDoC,IAAAA,SAAS,EAAEV,aAFuC;AAGlDW,IAAAA,IAAI,EAAE;AAH4C,GAAD,EAIhD7C,KAJgD,EAIzC;AACR8C,IAAAA,KAAK,EAAEtH,QAAQ,CAAC,EAAD,EAAK6G,WAAW,CAACjF,IAAjB,EAAuB,CAAC2C,IAAD,IAASI,MAAT,GAAkBkC,WAAW,CAAC1E,MAA9B,GAAuC,EAA9D,EAAkEqC,KAAK,CAAC8C,KAAxE;AADP,GAJyC,CAAnC,EAMZxD,YAAY,GAAG,IAAH,GAAU,aAAa7D,KAAK,CAACkH,aAAN,CAAoBxE,iBAApB,EAAuC3C,QAAQ,CAAC;AACrFuE,IAAAA,IAAI,EAAEA,IAD+E;AAErFgD,IAAAA,OAAO,EAAEjB;AAF4E,GAAD,EAGnF1D,aAHmF,CAA/C,CANvB,EASI,aAAa3C,KAAK,CAACkH,aAAN,CAAoBnG,SAApB,EAA+B;AAC9DoC,IAAAA,mBAAmB,EAAEA,mBADyC;AAE9DJ,IAAAA,gBAAgB,EAAEA,gBAF4C;AAG9DU,IAAAA,mBAAmB,EAAEA,mBAHyC;AAI9DwB,IAAAA,MAAM,EAAEA,MAJsD;AAK9DsC,IAAAA,SAAS,EAAE3B,UALmD;AAM9DtB,IAAAA,IAAI,EAAEA;AANwD,GAA/B,EAO9B,aAAatE,KAAK,CAACwH,YAAN,CAAmBlG,QAAnB,EAA6BuF,UAA7B,CAPiB,CATjB,CAJI,CAApB;AAqBD,CA7MwB,CAAzB;AA8MAY,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvF,KAAK,CAACwF,SAAN,GAAkB;AACxD;;;AAGAlF,EAAAA,iBAAiB,EAAExC,SAAS,CAAC2H,WAJ2B;;AAMxD;;;AAGAlF,EAAAA,aAAa,EAAEzC,SAAS,CAAC4H,MAT+B;;AAWxD;;;AAGAxG,EAAAA,QAAQ,EAAEjB,mBAAmB,CAAC0H,UAd0B;;AAgBxD;;;AAGAlF,EAAAA,oBAAoB,EAAE3C,SAAS,CAAC8H,IAnBwB;;AAqBxD;;;;;;;AAOA9G,EAAAA,SAAS,EAAEhB;AACX;AADoB,GAEnB+H,SAFU,CAEA,CAAC3H,eAAD,EAAkBJ,SAAS,CAACgI,UAAV,CAAqBlI,KAAK,CAACmI,SAA3B,CAAlB,EAAyDjI,SAAS,CAACkI,IAAnE,CAFA,CA5B6C;;AAgCxD;;;;;;;;AAQArF,EAAAA,gBAAgB,EAAE7C,SAAS,CAAC8H,IAxC4B;;AA0CxD;;;AAGA/E,EAAAA,oBAAoB,EAAE/C,SAAS,CAAC8H,IA7CwB;;AA+CxD;;;;;;AAMA7E,EAAAA,mBAAmB,EAAEjD,SAAS,CAAC8H,IArDyB;;AAuDxD;;;AAGA3E,EAAAA,oBAAoB,EAAEnD,SAAS,CAAC8H,IA1DwB;;AA4DxD;;;;AAIAzE,EAAAA,aAAa,EAAErD,SAAS,CAAC8H,IAhE+B;;AAkExD;;;;AAIAvE,EAAAA,mBAAmB,EAAEvD,SAAS,CAAC8H,IAtEyB;;AAwExD;;;AAGArE,EAAAA,iBAAiB,EAAEzD,SAAS,CAAC8H,IA3E2B;;AA6ExD;;;AAGAnE,EAAAA,YAAY,EAAE3D,SAAS,CAAC8H,IAhFgC;;AAkFxD;;;;;AAKAjE,EAAAA,WAAW,EAAE7D,SAAS,CAAC8H,IAvFiC;;AAyFxD;;;AAGA/D,EAAAA,OAAO,EAAE/D,SAAS,CAAC4H,MA5FqC;;AA8FxD;;;AAGA5D,EAAAA,eAAe,EAAEhE,SAAS,CAACkI,IAjG6B;;AAmGxD;;;;;;;AAOAjE,EAAAA,OAAO,EAAEjE,SAAS,CAACkI,IA1GqC;;AA4GxD;;;;AAIAhE,EAAAA,eAAe,EAAElE,SAAS,CAACkI,IAhH6B;;AAkHxD;;;;;;AAMA/D,EAAAA,UAAU,EAAEnE,SAAS,CAACkI,IAxHkC;;AA0HxD;;;AAGA9D,EAAAA,IAAI,EAAEpE,SAAS,CAAC8H,IAAV,CAAeD;AA7HmC,CAA1D,GA8HI,KAAK,CA9HT;AA+HA,eAAe3F,KAAf","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { getThemeProps, useTheme } from '@material-ui/styles';\r\nimport { elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\r\nimport ownerDocument from '../utils/ownerDocument';\r\nimport Portal from '../Portal';\r\nimport createChainedFunction from '../utils/createChainedFunction';\r\nimport useForkRef from '../utils/useForkRef';\r\nimport useEventCallback from '../utils/useEventCallback';\r\nimport zIndex from '../styles/zIndex';\r\nimport ModalManager, { ariaHidden } from './ModalManager';\r\nimport TrapFocus from '../Unstable_TrapFocus';\r\nimport SimpleBackdrop from './SimpleBackdrop';\r\n\r\nfunction getContainer(container) {\r\n  container = typeof container === 'function' ? container() : container;\r\n  return ReactDOM.findDOMNode(container);\r\n}\r\n\r\nfunction getHasTransition(props) {\r\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\r\n} // A modal manager used to track and manage the state of open Modals.\r\n// Modals don't open on the server so this won't conflict with concurrent requests.\r\n\r\n\r\nvar defaultManager = new ModalManager();\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      position: 'fixed',\r\n      zIndex: theme.zIndex.modal,\r\n      right: 0,\r\n      bottom: 0,\r\n      top: 0,\r\n      left: 0\r\n    },\r\n\r\n    /* Styles applied to the root element if the `Modal` has exited. */\r\n    hidden: {\r\n      visibility: 'hidden'\r\n    }\r\n  };\r\n};\r\n/**\r\n * Modal is a lower-level construct that is leveraged by the following components:\r\n *\r\n * - [Dialog](/api/dialog/)\r\n * - [Drawer](/api/drawer/)\r\n * - [Menu](/api/menu/)\r\n * - [Popover](/api/popover/)\r\n *\r\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\r\n * rather than directly using Modal.\r\n *\r\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\r\n */\r\n\r\nvar Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\r\n  var theme = useTheme();\r\n  var props = getThemeProps({\r\n    name: 'MuiModal',\r\n    props: _extends({}, inProps),\r\n    theme: theme\r\n  });\r\n\r\n  var _props$BackdropCompon = props.BackdropComponent,\r\n      BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\r\n      BackdropProps = props.BackdropProps,\r\n      children = props.children,\r\n      _props$closeAfterTran = props.closeAfterTransition,\r\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\r\n      container = props.container,\r\n      _props$disableAutoFoc = props.disableAutoFocus,\r\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\r\n      _props$disableBackdro = props.disableBackdropClick,\r\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\r\n      _props$disableEnforce = props.disableEnforceFocus,\r\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\r\n      _props$disableEscapeK = props.disableEscapeKeyDown,\r\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\r\n      _props$disablePortal = props.disablePortal,\r\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\r\n      _props$disableRestore = props.disableRestoreFocus,\r\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\r\n      _props$disableScrollL = props.disableScrollLock,\r\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\r\n      _props$hideBackdrop = props.hideBackdrop,\r\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\r\n      _props$keepMounted = props.keepMounted,\r\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\r\n      _props$manager = props.manager,\r\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\r\n      onBackdropClick = props.onBackdropClick,\r\n      onClose = props.onClose,\r\n      onEscapeKeyDown = props.onEscapeKeyDown,\r\n      onRendered = props.onRendered,\r\n      open = props.open,\r\n      other = _objectWithoutProperties(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\"]);\r\n\r\n  var _React$useState = React.useState(true),\r\n      exited = _React$useState[0],\r\n      setExited = _React$useState[1];\r\n\r\n  var modal = React.useRef({});\r\n  var mountNodeRef = React.useRef(null);\r\n  var modalRef = React.useRef(null);\r\n  var handleRef = useForkRef(modalRef, ref);\r\n  var hasTransition = getHasTransition(props);\r\n\r\n  var getDoc = function getDoc() {\r\n    return ownerDocument(mountNodeRef.current);\r\n  };\r\n\r\n  var getModal = function getModal() {\r\n    modal.current.modalRef = modalRef.current;\r\n    modal.current.mountNode = mountNodeRef.current;\r\n    return modal.current;\r\n  };\r\n\r\n  var handleMounted = function handleMounted() {\r\n    manager.mount(getModal(), {\r\n      disableScrollLock: disableScrollLock\r\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\r\n\r\n    modalRef.current.scrollTop = 0;\r\n  };\r\n\r\n  var handleOpen = useEventCallback(function () {\r\n    var resolvedContainer = getContainer(container) || getDoc().body;\r\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\r\n\r\n    if (modalRef.current) {\r\n      handleMounted();\r\n    }\r\n  });\r\n  var isTopModal = React.useCallback(function () {\r\n    return manager.isTopModal(getModal());\r\n  }, [manager]);\r\n  var handlePortalRef = useEventCallback(function (node) {\r\n    mountNodeRef.current = node;\r\n\r\n    if (!node) {\r\n      return;\r\n    }\r\n\r\n    if (onRendered) {\r\n      onRendered();\r\n    }\r\n\r\n    if (open && isTopModal()) {\r\n      handleMounted();\r\n    } else {\r\n      ariaHidden(modalRef.current, true);\r\n    }\r\n  });\r\n  var handleClose = React.useCallback(function () {\r\n    manager.remove(getModal());\r\n  }, [manager]);\r\n  React.useEffect(function () {\r\n    return function () {\r\n      handleClose();\r\n    };\r\n  }, [handleClose]);\r\n  React.useEffect(function () {\r\n    if (open) {\r\n      handleOpen();\r\n    } else if (!hasTransition || !closeAfterTransition) {\r\n      handleClose();\r\n    }\r\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\r\n\r\n  if (!keepMounted && !open && (!hasTransition || exited)) {\r\n    return null;\r\n  }\r\n\r\n  var handleEnter = function handleEnter() {\r\n    setExited(false);\r\n  };\r\n\r\n  var handleExited = function handleExited() {\r\n    setExited(true);\r\n\r\n    if (closeAfterTransition) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  var handleBackdropClick = function handleBackdropClick(event) {\r\n    if (event.target !== event.currentTarget) {\r\n      return;\r\n    }\r\n\r\n    if (onBackdropClick) {\r\n      onBackdropClick(event);\r\n    }\r\n\r\n    if (!disableBackdropClick && onClose) {\r\n      onClose(event, 'backdropClick');\r\n    }\r\n  };\r\n\r\n  var handleKeyDown = function handleKeyDown(event) {\r\n    // The handler doesn't take event.defaultPrevented into account:\r\n    //\r\n    // event.preventDefault() is meant to stop default behaviours like\r\n    // clicking a checkbox to check it, hitting a button to submit a form,\r\n    // and hitting left arrow to move the cursor in a text input etc.\r\n    // Only special HTML elements have these default behaviors.\r\n    if (event.key !== 'Escape' || !isTopModal()) {\r\n      return;\r\n    }\r\n\r\n    if (onEscapeKeyDown) {\r\n      onEscapeKeyDown(event);\r\n    }\r\n\r\n    if (!disableEscapeKeyDown) {\r\n      // Swallow the event, in case someone is listening for the escape key on the body.\r\n      event.stopPropagation();\r\n\r\n      if (onClose) {\r\n        onClose(event, 'escapeKeyDown');\r\n      }\r\n    }\r\n  };\r\n\r\n  var inlineStyle = styles(theme || {\r\n    zIndex: zIndex\r\n  });\r\n  var childProps = {};\r\n\r\n  if (children.props.tabIndex === undefined) {\r\n    childProps.tabIndex = children.props.tabIndex || '-1';\r\n  } // It's a Transition like component\r\n\r\n\r\n  if (hasTransition) {\r\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\r\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(Portal, {\r\n    ref: handlePortalRef,\r\n    container: container,\r\n    disablePortal: disablePortal\r\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\r\n    ref: handleRef,\r\n    onKeyDown: handleKeyDown,\r\n    role: \"presentation\"\r\n  }, other, {\r\n    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)\r\n  }), hideBackdrop ? null : /*#__PURE__*/React.createElement(BackdropComponent, _extends({\r\n    open: open,\r\n    onClick: handleBackdropClick\r\n  }, BackdropProps)), /*#__PURE__*/React.createElement(TrapFocus, {\r\n    disableEnforceFocus: disableEnforceFocus,\r\n    disableAutoFocus: disableAutoFocus,\r\n    disableRestoreFocus: disableRestoreFocus,\r\n    getDoc: getDoc,\r\n    isEnabled: isTopModal,\r\n    open: open\r\n  }, /*#__PURE__*/React.cloneElement(children, childProps))));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\r\n  /**\r\n   * A backdrop component. This prop enables custom backdrop rendering.\r\n   */\r\n  BackdropComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\r\n   */\r\n  BackdropProps: PropTypes.object,\r\n\r\n  /**\r\n   * A single child content element.\r\n   */\r\n  children: elementAcceptingRef.isRequired,\r\n\r\n  /**\r\n   * When set to true the Modal waits until a nested Transition is completed before closing.\r\n   */\r\n  closeAfterTransition: PropTypes.bool,\r\n\r\n  /**\r\n   * A HTML element, component instance, or function that returns either.\r\n   * The `container` will have the portal children appended to it.\r\n   *\r\n   * By default, it uses the body of the top-level document object,\r\n   * so it's simply `document.body` most of the time.\r\n   */\r\n  container: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .oneOfType([HTMLElementType, PropTypes.instanceOf(React.Component), PropTypes.func]),\r\n\r\n  /**\r\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes.\r\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\r\n  disableAutoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, clicking the backdrop will not fire `onClose`.\r\n   */\r\n  disableBackdropClick: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\r\n  disableEnforceFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, hitting escape will not fire `onClose`.\r\n   */\r\n  disableEscapeKeyDown: PropTypes.bool,\r\n\r\n  /**\r\n   * Disable the portal behavior.\r\n   * The children stay within it's parent DOM hierarchy.\r\n   */\r\n  disablePortal: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the modal will not restore focus to previously focused element once\r\n   * modal is hidden.\r\n   */\r\n  disableRestoreFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Disable the scroll lock behavior.\r\n   */\r\n  disableScrollLock: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the backdrop is not rendered.\r\n   */\r\n  hideBackdrop: PropTypes.bool,\r\n\r\n  /**\r\n   * Always keep the children in the DOM.\r\n   * This prop can be useful in SEO situation or\r\n   * when you want to maximize the responsiveness of the Modal.\r\n   */\r\n  keepMounted: PropTypes.bool,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  manager: PropTypes.object,\r\n\r\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   */\r\n  onBackdropClick: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the escape key is pressed,\r\n   * `disableEscapeKeyDown` is false and the modal is in focus.\r\n   */\r\n  onEscapeKeyDown: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired once the children has been mounted into the `container`.\r\n   * It signals that the `open={true}` prop took effect.\r\n   *\r\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\r\n   */\r\n  onRendered: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the modal is open.\r\n   */\r\n  open: PropTypes.bool.isRequired\r\n} : void 0;\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}