{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","map":{"version":3,"sources":["C:/Users/totti/Documents/jhu class/delineo/Website/model_app/frontend/node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js"],"names":["_extends","React","PropTypes","withStyles","Typography","styles","root","marginBottom","DialogContentText","forwardRef","props","ref","createElement","component","variant","color","process","env","NODE_ENV","propTypes","children","node","classes","object","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,IAAIC,MAAM,GAAG;AAClB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAE;AADV;AAFY,CAAb;AAMP,IAAIC,iBAAiB,GAAG,aAAaP,KAAK,CAACQ,UAAN,CAAiB,SAASD,iBAAT,CAA2BE,KAA3B,EAAkCC,GAAlC,EAAuC;AAC3F,SAAO,aAAaV,KAAK,CAACW,aAAN,CAAoBR,UAApB,EAAgCJ,QAAQ,CAAC;AAC3Da,IAAAA,SAAS,EAAE,GADgD;AAE3DC,IAAAA,OAAO,EAAE,OAFkD;AAG3DC,IAAAA,KAAK,EAAE,eAHoD;AAI3DJ,IAAAA,GAAG,EAAEA;AAJsD,GAAD,EAKzDD,KALyD,CAAxC,CAApB;AAMD,CAPoC,CAArC;AAQAM,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,iBAAiB,CAACW,SAAlB,GAA8B;AACpE;AACA;AACA;AACA;;AAEA;;;AAGAC,EAAAA,QAAQ,EAAElB,SAAS,CAACmB,IATgD;;AAWpE;;;;AAIAC,EAAAA,OAAO,EAAEpB,SAAS,CAACqB;AAfiD,CAAtE,GAgBI,KAAK,CAhBT;AAiBA,eAAepB,UAAU,CAACE,MAAD,EAAS;AAChCmB,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZhB,iBAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '../styles/withStyles';\r\nimport Typography from '../Typography';\r\nexport var styles = {\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    marginBottom: 12\r\n  }\r\n};\r\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\r\n  return /*#__PURE__*/React.createElement(Typography, _extends({\r\n    component: \"p\",\r\n    variant: \"body1\",\r\n    color: \"textSecondary\",\r\n    ref: ref\r\n  }, props));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiDialogContentText'\r\n})(DialogContentText);"]},"metadata":{},"sourceType":"module"}