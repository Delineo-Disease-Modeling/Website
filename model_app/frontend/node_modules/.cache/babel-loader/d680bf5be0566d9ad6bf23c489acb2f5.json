{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar warnedOnce = false;\n/**\r\n * ⚠️ The ExpansionPanelDetails component was renamed to AccordionDetails to use a more common naming convention.\r\n *\r\n * You should use `import { AccordionDetails } from '@material-ui/core'`\r\n * or `import AccordionDetails from '@material-ui/core/AccordionDetails'`.\r\n */\n\nvar ExpansionPanelDetails = /*#__PURE__*/React.forwardRef(function ExpansionPanelDetails(props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: the ExpansionPanelDetails component was renamed to AccordionDetails to use a more common naming convention.', '', \"You should use `import { AccordionDetails } from '@material-ui/core'`\", \"or `import AccordionDetails from '@material-ui/core/AccordionActions'`\"].join('\\n'));\n    }\n  }\n\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the expansion panel details.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelDetails'\n})(ExpansionPanelDetails);","map":{"version":3,"sources":["C:/Users/totti/Documents/jhu class/delineo/Website/model_app/frontend/node_modules/@material-ui/core/esm/ExpansionPanelDetails/ExpansionPanelDetails.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","styles","theme","root","display","padding","spacing","warnedOnce","ExpansionPanelDetails","forwardRef","props","ref","process","env","NODE_ENV","console","error","join","classes","className","other","createElement","propTypes","children","node","object","string","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACzC,SAAO;AACL;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AAFL;AAFD,GAAP;AAOD,CARM;AASP,IAAIC,UAAU,GAAG,KAAjB;AACA;;;;;;;AAOA,IAAIC,qBAAqB,GAAG,aAAaX,KAAK,CAACY,UAAN,CAAiB,SAASD,qBAAT,CAA+BE,KAA/B,EAAsCC,GAAtC,EAA2C;AACnG,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAI,CAACP,UAAL,EAAiB;AACfA,MAAAA,UAAU,GAAG,IAAb;AACAQ,MAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,0HAAD,EAA6H,EAA7H,EAAiI,uEAAjI,EAA0M,wEAA1M,EAAoRC,IAApR,CAAyR,IAAzR,CAAd;AACD;AACF;;AAED,MAAIC,OAAO,GAAGR,KAAK,CAACQ,OAApB;AAAA,MACIC,SAAS,GAAGT,KAAK,CAACS,SADtB;AAAA,MAEIC,KAAK,GAAGxB,wBAAwB,CAACc,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,CAAR,CAFpC;;AAIA,SAAO,aAAab,KAAK,CAACwB,aAAN,CAAoB,KAApB,EAA2B1B,QAAQ,CAAC;AACtDwB,IAAAA,SAAS,EAAEpB,IAAI,CAACmB,OAAO,CAACf,IAAT,EAAegB,SAAf,CADuC;AAEtDR,IAAAA,GAAG,EAAEA;AAFiD,GAAD,EAGpDS,KAHoD,CAAnC,CAApB;AAID,CAhBwC,CAAzC;AAiBAR,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,qBAAqB,CAACc,SAAtB,GAAkC;AACxE;AACA;AACA;AACA;;AAEA;;;AAGAC,EAAAA,QAAQ,EAAEzB,SAAS,CAAC0B,IAToD;;AAWxE;;;;AAIAN,EAAAA,OAAO,EAAEpB,SAAS,CAAC2B,MAfqD;;AAiBxE;;;AAGAN,EAAAA,SAAS,EAAErB,SAAS,CAAC4B;AApBmD,CAA1E,GAqBI,KAAK,CArBT;AAsBA,eAAe1B,UAAU,CAACC,MAAD,EAAS;AAChC0B,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZnB,qBAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      display: 'flex',\r\n      padding: theme.spacing(1, 2, 2)\r\n    }\r\n  };\r\n};\r\nvar warnedOnce = false;\r\n/**\r\n * ⚠️ The ExpansionPanelDetails component was renamed to AccordionDetails to use a more common naming convention.\r\n *\r\n * You should use `import { AccordionDetails } from '@material-ui/core'`\r\n * or `import AccordionDetails from '@material-ui/core/AccordionDetails'`.\r\n */\r\n\r\nvar ExpansionPanelDetails = /*#__PURE__*/React.forwardRef(function ExpansionPanelDetails(props, ref) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (!warnedOnce) {\r\n      warnedOnce = true;\r\n      console.error(['Material-UI: the ExpansionPanelDetails component was renamed to AccordionDetails to use a more common naming convention.', '', \"You should use `import { AccordionDetails } from '@material-ui/core'`\", \"or `import AccordionDetails from '@material-ui/core/AccordionActions'`\"].join('\\n'));\r\n    }\r\n  }\r\n\r\n  var classes = props.classes,\r\n      className = props.className,\r\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\r\n\r\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\r\n    className: clsx(classes.root, className),\r\n    ref: ref\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelDetails.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the expansion panel details.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiExpansionPanelDetails'\r\n})(ExpansionPanelDetails);"]},"metadata":{},"sourceType":"module"}