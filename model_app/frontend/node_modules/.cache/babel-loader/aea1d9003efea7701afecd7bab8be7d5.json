{"ast":null,"code":"import _get from \"lodash/get\";\nimport _isArray from \"lodash/isArray\";\nimport _isNaN from \"lodash/isNaN\";\nimport _isNumber from \"lodash/isNumber\";\nimport _isString from \"lodash/isString\";\nexport var mathSign = function mathSign(value) {\n  if (value === 0) {\n    return 0;\n  }\n\n  if (value > 0) {\n    return 1;\n  }\n\n  return -1;\n};\nexport var isPercent = function isPercent(value) {\n  return _isString(value) && value.indexOf('%') === value.length - 1;\n};\nexport var isNumber = function isNumber(value) {\n  return _isNumber(value) && !_isNaN(value);\n};\nexport var isNumOrStr = function isNumOrStr(value) {\n  return isNumber(value) || _isString(value);\n};\nvar idCounter = 0;\nexport var uniqueId = function uniqueId(prefix) {\n  var id = ++idCounter;\n  return \"\".concat(prefix || '').concat(id);\n};\n/**\n * Get percent value of a total value\n * @param {Number|String} percent A percent\n * @param {Number} totalValue     Total value\n * @param {NUmber} defaultValue   The value returned when percent is undefined or invalid\n * @param {Boolean} validate      If set to be true, the result will be validated\n * @return {Number} value\n */\n\nexport var getPercentValue = function getPercentValue(percent, totalValue) {\n  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var validate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  if (!isNumber(percent) && !_isString(percent)) {\n    return defaultValue;\n  }\n\n  var value;\n\n  if (isPercent(percent)) {\n    var index = percent.indexOf('%');\n    value = totalValue * parseFloat(percent.slice(0, index)) / 100;\n  } else {\n    value = +percent;\n  }\n\n  if (_isNaN(value)) {\n    value = defaultValue;\n  }\n\n  if (validate && value > totalValue) {\n    value = totalValue;\n  }\n\n  return value;\n};\nexport var getAnyElementOfObject = function getAnyElementOfObject(obj) {\n  if (!obj) {\n    return null;\n  }\n\n  var keys = Object.keys(obj);\n\n  if (keys && keys.length) {\n    return obj[keys[0]];\n  }\n\n  return null;\n};\nexport var hasDuplicate = function hasDuplicate(ary) {\n  if (!_isArray(ary)) {\n    return false;\n  }\n\n  var len = ary.length;\n  var cache = {};\n\n  for (var i = 0; i < len; i++) {\n    if (!cache[ary[i]]) {\n      cache[ary[i]] = true;\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n};\nexport var interpolateNumber = function interpolateNumber(numberA, numberB) {\n  if (isNumber(numberA) && isNumber(numberB)) {\n    return function (t) {\n      return numberA + t * (numberB - numberA);\n    };\n  }\n\n  return function () {\n    return numberB;\n  };\n};\nexport var findEntryInArray = function findEntryInArray(ary, specifiedKey, specifiedValue) {\n  if (!ary || !ary.length) {\n    return null;\n  }\n\n  return ary.find(function (entry) {\n    return entry && (typeof specifiedKey === 'function' ? specifiedKey(entry) : _get(entry, specifiedKey)) === specifiedValue;\n  });\n};\n/**\n * The least square linear regression\n * @param {Array} data The array of points\n * @returns {Object} The domain of x, and the parameter of linear function\n */\n\nexport var getLinearRegression = function getLinearRegression(data) {\n  if (!data || !data.length) {\n    return null;\n  }\n\n  var len = data.length;\n  var xsum = 0;\n  var ysum = 0;\n  var xysum = 0;\n  var xxsum = 0;\n  var xmin = Infinity;\n  var xmax = -Infinity;\n\n  for (var i = 0; i < len; i++) {\n    xsum += data[i].cx;\n    ysum += data[i].cy;\n    xysum += data[i].cx * data[i].cy;\n    xxsum += data[i].cx * data[i].cx;\n    xmin = Math.min(xmin, data[i].cx);\n    xmax = Math.max(xmax, data[i].cx);\n  }\n\n  var a = len * xxsum !== xsum * xsum ? (len * xysum - xsum * ysum) / (len * xxsum - xsum * xsum) : 0;\n  return {\n    xmin: xmin,\n    xmax: xmax,\n    a: a,\n    b: (ysum - a * xsum) / len\n  };\n};","map":{"version":3,"sources":["/Users/seamonester/Desktop/Easy Access/Delineo/PandemicModel/model_app/frontend/node_modules/recharts/es6/util/DataUtils.js"],"names":["_get","_isArray","_isNaN","_isNumber","_isString","mathSign","value","isPercent","indexOf","length","isNumber","isNumOrStr","idCounter","uniqueId","prefix","id","concat","getPercentValue","percent","totalValue","defaultValue","arguments","undefined","validate","index","parseFloat","slice","getAnyElementOfObject","obj","keys","Object","hasDuplicate","ary","len","cache","i","interpolateNumber","numberA","numberB","t","findEntryInArray","specifiedKey","specifiedValue","find","entry","getLinearRegression","data","xsum","ysum","xysum","xxsum","xmin","Infinity","xmax","cx","cy","Math","min","max","a","b"],"mappings":"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","sourcesContent":["import _get from \"lodash/get\";\nimport _isArray from \"lodash/isArray\";\nimport _isNaN from \"lodash/isNaN\";\nimport _isNumber from \"lodash/isNumber\";\nimport _isString from \"lodash/isString\";\nexport var mathSign = function mathSign(value) {\n  if (value === 0) {\n    return 0;\n  }\n\n  if (value > 0) {\n    return 1;\n  }\n\n  return -1;\n};\nexport var isPercent = function isPercent(value) {\n  return _isString(value) && value.indexOf('%') === value.length - 1;\n};\nexport var isNumber = function isNumber(value) {\n  return _isNumber(value) && !_isNaN(value);\n};\nexport var isNumOrStr = function isNumOrStr(value) {\n  return isNumber(value) || _isString(value);\n};\nvar idCounter = 0;\nexport var uniqueId = function uniqueId(prefix) {\n  var id = ++idCounter;\n  return \"\".concat(prefix || '').concat(id);\n};\n/**\n * Get percent value of a total value\n * @param {Number|String} percent A percent\n * @param {Number} totalValue     Total value\n * @param {NUmber} defaultValue   The value returned when percent is undefined or invalid\n * @param {Boolean} validate      If set to be true, the result will be validated\n * @return {Number} value\n */\n\nexport var getPercentValue = function getPercentValue(percent, totalValue) {\n  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var validate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  if (!isNumber(percent) && !_isString(percent)) {\n    return defaultValue;\n  }\n\n  var value;\n\n  if (isPercent(percent)) {\n    var index = percent.indexOf('%');\n    value = totalValue * parseFloat(percent.slice(0, index)) / 100;\n  } else {\n    value = +percent;\n  }\n\n  if (_isNaN(value)) {\n    value = defaultValue;\n  }\n\n  if (validate && value > totalValue) {\n    value = totalValue;\n  }\n\n  return value;\n};\nexport var getAnyElementOfObject = function getAnyElementOfObject(obj) {\n  if (!obj) {\n    return null;\n  }\n\n  var keys = Object.keys(obj);\n\n  if (keys && keys.length) {\n    return obj[keys[0]];\n  }\n\n  return null;\n};\nexport var hasDuplicate = function hasDuplicate(ary) {\n  if (!_isArray(ary)) {\n    return false;\n  }\n\n  var len = ary.length;\n  var cache = {};\n\n  for (var i = 0; i < len; i++) {\n    if (!cache[ary[i]]) {\n      cache[ary[i]] = true;\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n};\nexport var interpolateNumber = function interpolateNumber(numberA, numberB) {\n  if (isNumber(numberA) && isNumber(numberB)) {\n    return function (t) {\n      return numberA + t * (numberB - numberA);\n    };\n  }\n\n  return function () {\n    return numberB;\n  };\n};\nexport var findEntryInArray = function findEntryInArray(ary, specifiedKey, specifiedValue) {\n  if (!ary || !ary.length) {\n    return null;\n  }\n\n  return ary.find(function (entry) {\n    return entry && (typeof specifiedKey === 'function' ? specifiedKey(entry) : _get(entry, specifiedKey)) === specifiedValue;\n  });\n};\n/**\n * The least square linear regression\n * @param {Array} data The array of points\n * @returns {Object} The domain of x, and the parameter of linear function\n */\n\nexport var getLinearRegression = function getLinearRegression(data) {\n  if (!data || !data.length) {\n    return null;\n  }\n\n  var len = data.length;\n  var xsum = 0;\n  var ysum = 0;\n  var xysum = 0;\n  var xxsum = 0;\n  var xmin = Infinity;\n  var xmax = -Infinity;\n\n  for (var i = 0; i < len; i++) {\n    xsum += data[i].cx;\n    ysum += data[i].cy;\n    xysum += data[i].cx * data[i].cy;\n    xxsum += data[i].cx * data[i].cx;\n    xmin = Math.min(xmin, data[i].cx);\n    xmax = Math.max(xmax, data[i].cx);\n  }\n\n  var a = len * xxsum !== xsum * xsum ? (len * xysum - xsum * ysum) / (len * xxsum - xsum * xsum) : 0;\n  return {\n    xmin: xmin,\n    xmax: xmax,\n    a: a,\n    b: (ysum - a * xsum) / len\n  };\n};"]},"metadata":{},"sourceType":"module"}