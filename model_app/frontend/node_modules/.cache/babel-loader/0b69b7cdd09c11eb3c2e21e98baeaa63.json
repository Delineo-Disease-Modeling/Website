{"ast":null,"code":"var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n/**\r\n * Checks if the given arguments are from an iteratee call.\r\n *\r\n * @private\r\n * @param {*} value The potential iteratee value argument.\r\n * @param {*} index The potential iteratee index or key argument.\r\n * @param {*} object The potential iteratee object argument.\r\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\r\n *  else `false`.\r\n */\n\n\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  var type = typeof index;\n\n  if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n    return eq(object[index], value);\n  }\n\n  return false;\n}\n\nmodule.exports = isIterateeCall;","map":{"version":3,"sources":["C:/Users/Arpan Gandhi/Desktop/Aayush Coding/Website/model_app/frontend/node_modules/lodash/_isIterateeCall.js"],"names":["eq","require","isArrayLike","isIndex","isObject","isIterateeCall","value","index","object","type","length","module","exports"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,MAAD,CAAhB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CADzB;AAAA,IAEIE,OAAO,GAAGF,OAAO,CAAC,YAAD,CAFrB;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAHtB;AAKA;;;;;;;;;;;;AAUA,SAASI,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8C;AAC5C,MAAI,CAACJ,QAAQ,CAACI,MAAD,CAAb,EAAuB;AACrB,WAAO,KAAP;AACD;;AACD,MAAIC,IAAI,GAAG,OAAOF,KAAlB;;AACA,MAAIE,IAAI,IAAI,QAAR,GACKP,WAAW,CAACM,MAAD,CAAX,IAAuBL,OAAO,CAACI,KAAD,EAAQC,MAAM,CAACE,MAAf,CADnC,GAEKD,IAAI,IAAI,QAAR,IAAoBF,KAAK,IAAIC,MAFtC,EAGM;AACJ,WAAOR,EAAE,CAACQ,MAAM,CAACD,KAAD,CAAP,EAAgBD,KAAhB,CAAT;AACD;;AACD,SAAO,KAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBP,cAAjB","sourcesContent":["var eq = require('./eq'),\r\n    isArrayLike = require('./isArrayLike'),\r\n    isIndex = require('./_isIndex'),\r\n    isObject = require('./isObject');\r\n\r\n/**\r\n * Checks if the given arguments are from an iteratee call.\r\n *\r\n * @private\r\n * @param {*} value The potential iteratee value argument.\r\n * @param {*} index The potential iteratee index or key argument.\r\n * @param {*} object The potential iteratee object argument.\r\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\r\n *  else `false`.\r\n */\r\nfunction isIterateeCall(value, index, object) {\r\n  if (!isObject(object)) {\r\n    return false;\r\n  }\r\n  var type = typeof index;\r\n  if (type == 'number'\r\n        ? (isArrayLike(object) && isIndex(index, object.length))\r\n        : (type == 'string' && index in object)\r\n      ) {\r\n    return eq(object[index], value);\r\n  }\r\n  return false;\r\n}\r\n\r\nmodule.exports = isIterateeCall;\r\n"]},"metadata":{},"sourceType":"script"}