{"ast":null,"code":"import number from \"./number\";\nexport default function (values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}","map":{"version":3,"sources":["C:/Users/Arpan Gandhi/Desktop/Aayush Coding/Website/model_app/frontend/node_modules/d3-array/src/variance.js"],"names":["number","values","valueof","n","length","m","i","mean","value","delta","sum","isNaN"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AAEA,eAAe,UAASC,MAAT,EAAiBC,OAAjB,EAA0B;AACvC,MAAIC,CAAC,GAAGF,MAAM,CAACG,MAAf;AAAA,MACIC,CAAC,GAAG,CADR;AAAA,MAEIC,CAAC,GAAG,CAAC,CAFT;AAAA,MAGIC,IAAI,GAAG,CAHX;AAAA,MAIIC,KAJJ;AAAA,MAKIC,KALJ;AAAA,MAMIC,GAAG,GAAG,CANV;;AAQA,MAAIR,OAAO,IAAI,IAAf,EAAqB;AACnB,WAAO,EAAEI,CAAF,GAAMH,CAAb,EAAgB;AACd,UAAI,CAACQ,KAAK,CAACH,KAAK,GAAGR,MAAM,CAACC,MAAM,CAACK,CAAD,CAAP,CAAf,CAAV,EAAuC;AACrCG,QAAAA,KAAK,GAAGD,KAAK,GAAGD,IAAhB;AACAA,QAAAA,IAAI,IAAIE,KAAK,GAAG,EAAEJ,CAAlB;AACAK,QAAAA,GAAG,IAAID,KAAK,IAAID,KAAK,GAAGD,IAAZ,CAAZ;AACD;AACF;AACF,GARD,MAUK;AACH,WAAO,EAAED,CAAF,GAAMH,CAAb,EAAgB;AACd,UAAI,CAACQ,KAAK,CAACH,KAAK,GAAGR,MAAM,CAACE,OAAO,CAACD,MAAM,CAACK,CAAD,CAAP,EAAYA,CAAZ,EAAeL,MAAf,CAAR,CAAf,CAAV,EAA2D;AACzDQ,QAAAA,KAAK,GAAGD,KAAK,GAAGD,IAAhB;AACAA,QAAAA,IAAI,IAAIE,KAAK,GAAG,EAAEJ,CAAlB;AACAK,QAAAA,GAAG,IAAID,KAAK,IAAID,KAAK,GAAGD,IAAZ,CAAZ;AACD;AACF;AACF;;AAED,MAAIF,CAAC,GAAG,CAAR,EAAW,OAAOK,GAAG,IAAIL,CAAC,GAAG,CAAR,CAAV;AACZ","sourcesContent":["import number from \"./number\";\r\n\r\nexport default function(values, valueof) {\r\n  var n = values.length,\r\n      m = 0,\r\n      i = -1,\r\n      mean = 0,\r\n      value,\r\n      delta,\r\n      sum = 0;\r\n\r\n  if (valueof == null) {\r\n    while (++i < n) {\r\n      if (!isNaN(value = number(values[i]))) {\r\n        delta = value - mean;\r\n        mean += delta / ++m;\r\n        sum += delta * (value - mean);\r\n      }\r\n    }\r\n  }\r\n\r\n  else {\r\n    while (++i < n) {\r\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\r\n        delta = value - mean;\r\n        mean += delta / ++m;\r\n        sum += delta * (value - mean);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (m > 1) return sum / (m - 1);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}