{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { HTMLElementType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Popover from '../Popover';\nimport MenuList from '../MenuList';\nimport * as ReactDOM from 'react-dom';\nimport setRef from '../utils/setRef';\nimport useTheme from '../styles/useTheme';\nvar RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nvar LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nexport var styles = {\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    // specZ: The maximum height of a simple menu should be one or more rows less than the view\n    // height. This ensures a tapable area outside of the simple menu with which to dismiss\n    // the menu.\n    maxHeight: 'calc(100% - 96px)',\n    // Add iOS momentum scrolling.\n    WebkitOverflowScrolling: 'touch'\n  },\n\n  /* Styles applied to the `List` component via `MenuList`. */\n  list: {\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  }\n};\nvar Menu = /*#__PURE__*/React.forwardRef(function Menu(props, ref) {\n  var _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      _props$disableAutoFoc = props.disableAutoFocusItem,\n      disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$MenuListProps = props.MenuListProps,\n      MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,\n      onClose = props.onClose,\n      onEntering = props.onEntering,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      PopoverClasses = props.PopoverClasses,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"children\", \"classes\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"onEntering\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme();\n  var autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  var menuListActionsRef = React.useRef(null);\n  var contentAnchorRef = React.useRef(null);\n\n  var getContentAnchorEl = function getContentAnchorEl() {\n    return contentAnchorRef.current;\n  };\n\n  var handleEntering = function handleEntering(element, isAppearing) {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n\n  var handleListKeyDown = function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n  /**\r\n   * the index of the item should receive focus\r\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\r\n   * otherwise it's the very first item.\r\n   */\n\n\n  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.map(children, function (child, index) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant !== \"menu\" && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  var items = React.Children.map(children, function (child, index) {\n    if (index === activeItemIndex) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        ref: function ref(instance) {\n          // #StrictMode ready\n          contentAnchorRef.current = ReactDOM.findDOMNode(instance);\n          setRef(child.ref, instance);\n        }\n      });\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/React.createElement(Popover, _extends({\n    getContentAnchorEl: getContentAnchorEl,\n    classes: PopoverClasses,\n    onClose: onClose,\n    onEntering: handleEntering,\n    anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: _extends({}, PaperProps, {\n      classes: _extends({}, PaperProps.classes, {\n        root: classes.paper\n      })\n    }),\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration\n  }, other), /*#__PURE__*/React.createElement(MenuList, _extends({\n    onKeyDown: handleListKeyDown,\n    actions: menuListActionsRef,\n    autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n    autoFocusItem: autoFocusItem,\n    variant: variant\n  }, MenuListProps, {\n    className: clsx(classes.list, MenuListProps.className)\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * A HTML element, or a function that returns it.\r\n   * It's used to set the position of the menu.\r\n   */\n  anchorEl: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\r\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\r\n   * children are not focusable. If you set this prop to `false` focus will be placed\r\n   * on the parent modal container. This has severe accessibility implications\r\n   * and should only be considered if you manage focus otherwise.\r\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\r\n   * Menu contents, normally `MenuItem`s.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\r\n   * unless `autoFocus` is also set to `false`. Not using the default means not\r\n   * following WAI-ARIA authoring practices. Please be considerate about possible\r\n   * accessibility implications.\r\n   */\n  disableAutoFocusItem: PropTypes.bool,\n\n  /**\r\n   * Props applied to the [`MenuList`](/api/menu-list/) element.\r\n   */\n  MenuListProps: PropTypes.object,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * Callback fired before the Menu enters.\r\n   */\n  onEnter: PropTypes.func,\n\n  /**\r\n   * Callback fired when the Menu has entered.\r\n   */\n  onEntered: PropTypes.func,\n\n  /**\r\n   * Callback fired when the Menu is entering.\r\n   */\n  onEntering: PropTypes.func,\n\n  /**\r\n   * Callback fired before the Menu exits.\r\n   */\n  onExit: PropTypes.func,\n\n  /**\r\n   * Callback fired when the Menu has exited.\r\n   */\n  onExited: PropTypes.func,\n\n  /**\r\n   * Callback fired when the Menu is exiting.\r\n   */\n  onExiting: PropTypes.func,\n\n  /**\r\n   * If `true`, the menu is visible.\r\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  PaperProps: PropTypes.object,\n\n  /**\r\n   * `classes` prop applied to the [`Popover`](/api/popover/) element.\r\n   */\n  PopoverClasses: PropTypes.object,\n\n  /**\r\n   * The length of the transition in `ms`, or 'auto'\r\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\r\n   * and the vertical alignment relative to the anchor element.\r\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenu'\n})(Menu);","map":{"version":3,"sources":["C:/Users/totti/Documents/jhu class/delineo/Website/model_app/frontend/node_modules/@material-ui/core/esm/Menu/Menu.js"],"names":["_extends","_objectWithoutProperties","React","isFragment","PropTypes","clsx","HTMLElementType","withStyles","Popover","MenuList","ReactDOM","setRef","useTheme","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","styles","paper","maxHeight","WebkitOverflowScrolling","list","outline","Menu","forwardRef","props","ref","_props$autoFocus","autoFocus","children","classes","_props$disableAutoFoc","disableAutoFocusItem","_props$MenuListProps","MenuListProps","onClose","onEntering","open","_props$PaperProps","PaperProps","PopoverClasses","_props$transitionDura","transitionDuration","_props$variant","variant","other","theme","autoFocusItem","menuListActionsRef","useRef","contentAnchorRef","getContentAnchorEl","current","handleEntering","element","isAppearing","adjustStyleForScrollbar","handleListKeyDown","event","key","preventDefault","activeItemIndex","Children","map","child","index","isValidElement","process","env","NODE_ENV","console","error","join","disabled","selected","items","cloneElement","instance","findDOMNode","createElement","anchorOrigin","direction","transformOrigin","root","onKeyDown","actions","className","propTypes","anchorEl","oneOfType","func","bool","node","object","onEnter","onEntered","onExit","onExited","onExiting","isRequired","oneOf","number","shape","appear","enter","exit","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { HTMLElementType } from '@material-ui/utils';\r\nimport withStyles from '../styles/withStyles';\r\nimport Popover from '../Popover';\r\nimport MenuList from '../MenuList';\r\nimport * as ReactDOM from 'react-dom';\r\nimport setRef from '../utils/setRef';\r\nimport useTheme from '../styles/useTheme';\r\nvar RTL_ORIGIN = {\r\n  vertical: 'top',\r\n  horizontal: 'right'\r\n};\r\nvar LTR_ORIGIN = {\r\n  vertical: 'top',\r\n  horizontal: 'left'\r\n};\r\nexport var styles = {\r\n  /* Styles applied to the `Paper` component. */\r\n  paper: {\r\n    // specZ: The maximum height of a simple menu should be one or more rows less than the view\r\n    // height. This ensures a tapable area outside of the simple menu with which to dismiss\r\n    // the menu.\r\n    maxHeight: 'calc(100% - 96px)',\r\n    // Add iOS momentum scrolling.\r\n    WebkitOverflowScrolling: 'touch'\r\n  },\r\n\r\n  /* Styles applied to the `List` component via `MenuList`. */\r\n  list: {\r\n    // We disable the focus ring for mouse, touch and keyboard users.\r\n    outline: 0\r\n  }\r\n};\r\nvar Menu = /*#__PURE__*/React.forwardRef(function Menu(props, ref) {\r\n  var _props$autoFocus = props.autoFocus,\r\n      autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\r\n      children = props.children,\r\n      classes = props.classes,\r\n      _props$disableAutoFoc = props.disableAutoFocusItem,\r\n      disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\r\n      _props$MenuListProps = props.MenuListProps,\r\n      MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,\r\n      onClose = props.onClose,\r\n      onEntering = props.onEntering,\r\n      open = props.open,\r\n      _props$PaperProps = props.PaperProps,\r\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\r\n      PopoverClasses = props.PopoverClasses,\r\n      _props$transitionDura = props.transitionDuration,\r\n      transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\r\n      _props$variant = props.variant,\r\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\r\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"children\", \"classes\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"onEntering\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"variant\"]);\r\n\r\n  var theme = useTheme();\r\n  var autoFocusItem = autoFocus && !disableAutoFocusItem && open;\r\n  var menuListActionsRef = React.useRef(null);\r\n  var contentAnchorRef = React.useRef(null);\r\n\r\n  var getContentAnchorEl = function getContentAnchorEl() {\r\n    return contentAnchorRef.current;\r\n  };\r\n\r\n  var handleEntering = function handleEntering(element, isAppearing) {\r\n    if (menuListActionsRef.current) {\r\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\r\n    }\r\n\r\n    if (onEntering) {\r\n      onEntering(element, isAppearing);\r\n    }\r\n  };\r\n\r\n  var handleListKeyDown = function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n\r\n      if (onClose) {\r\n        onClose(event, 'tabKeyDown');\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * the index of the item should receive focus\r\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\r\n   * otherwise it's the very first item.\r\n   */\r\n\r\n\r\n  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\r\n  // to check if there is a `selected` item. We're looking for the last `selected`\r\n  // item and use the first valid item as a fallback\r\n\r\n  React.Children.map(children, function (child, index) {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      return;\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"Material-UI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    if (!child.props.disabled) {\r\n      if (variant !== \"menu\" && child.props.selected) {\r\n        activeItemIndex = index;\r\n      } else if (activeItemIndex === -1) {\r\n        activeItemIndex = index;\r\n      }\r\n    }\r\n  });\r\n  var items = React.Children.map(children, function (child, index) {\r\n    if (index === activeItemIndex) {\r\n      return /*#__PURE__*/React.cloneElement(child, {\r\n        ref: function ref(instance) {\r\n          // #StrictMode ready\r\n          contentAnchorRef.current = ReactDOM.findDOMNode(instance);\r\n          setRef(child.ref, instance);\r\n        }\r\n      });\r\n    }\r\n\r\n    return child;\r\n  });\r\n  return /*#__PURE__*/React.createElement(Popover, _extends({\r\n    getContentAnchorEl: getContentAnchorEl,\r\n    classes: PopoverClasses,\r\n    onClose: onClose,\r\n    onEntering: handleEntering,\r\n    anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\r\n    transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\r\n    PaperProps: _extends({}, PaperProps, {\r\n      classes: _extends({}, PaperProps.classes, {\r\n        root: classes.paper\r\n      })\r\n    }),\r\n    open: open,\r\n    ref: ref,\r\n    transitionDuration: transitionDuration\r\n  }, other), /*#__PURE__*/React.createElement(MenuList, _extends({\r\n    onKeyDown: handleListKeyDown,\r\n    actions: menuListActionsRef,\r\n    autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\r\n    autoFocusItem: autoFocusItem,\r\n    variant: variant\r\n  }, MenuListProps, {\r\n    className: clsx(classes.list, MenuListProps.className)\r\n  }), items));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * A HTML element, or a function that returns it.\r\n   * It's used to set the position of the menu.\r\n   */\r\n  anchorEl: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .oneOfType([HTMLElementType, PropTypes.func]),\r\n\r\n  /**\r\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\r\n   * children are not focusable. If you set this prop to `false` focus will be placed\r\n   * on the parent modal container. This has severe accessibility implications\r\n   * and should only be considered if you manage focus otherwise.\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Menu contents, normally `MenuItem`s.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\r\n   * unless `autoFocus` is also set to `false`. Not using the default means not\r\n   * following WAI-ARIA authoring practices. Please be considerate about possible\r\n   * accessibility implications.\r\n   */\r\n  disableAutoFocusItem: PropTypes.bool,\r\n\r\n  /**\r\n   * Props applied to the [`MenuList`](/api/menu-list/) element.\r\n   */\r\n  MenuListProps: PropTypes.object,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired before the Menu enters.\r\n   */\r\n  onEnter: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the Menu has entered.\r\n   */\r\n  onEntered: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the Menu is entering.\r\n   */\r\n  onEntering: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired before the Menu exits.\r\n   */\r\n  onExit: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the Menu has exited.\r\n   */\r\n  onExited: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the Menu is exiting.\r\n   */\r\n  onExiting: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the menu is visible.\r\n   */\r\n  open: PropTypes.bool.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  PaperProps: PropTypes.object,\r\n\r\n  /**\r\n   * `classes` prop applied to the [`Popover`](/api/popover/) element.\r\n   */\r\n  PopoverClasses: PropTypes.object,\r\n\r\n  /**\r\n   * The length of the transition in `ms`, or 'auto'\r\n   */\r\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\r\n    appear: PropTypes.number,\r\n    enter: PropTypes.number,\r\n    exit: PropTypes.number\r\n  })]),\r\n\r\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\r\n   * and the vertical alignment relative to the anchor element.\r\n   */\r\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiMenu'\r\n})(Menu);"]},"metadata":{},"sourceType":"module"}