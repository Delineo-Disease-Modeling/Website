{"ast":null,"code":"import { linearish } from \"./linear\";\nimport { copy, identity, transformer } from \"./continuous\";\nimport { initRange } from \"./init\";\n\nfunction transformPow(exponent) {\n  return function (x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function (_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function () {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n  return scale;\n}\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}","map":{"version":3,"sources":["C:/Users/totti/Documents/jhu class/delineo/Website/model_app/frontend/node_modules/d3-scale/src/pow.js"],"names":["linearish","copy","identity","transformer","initRange","transformPow","exponent","x","Math","pow","transformSqrt","sqrt","transformSquare","powish","transform","scale","rescale","_","arguments","length","apply"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,UAAxB;AACA,SAAQC,IAAR,EAAcC,QAAd,EAAwBC,WAAxB,QAA0C,cAA1C;AACA,SAAQC,SAAR,QAAwB,QAAxB;;AAEA,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B,SAAO,UAASC,CAAT,EAAY;AACjB,WAAOA,CAAC,GAAG,CAAJ,GAAQ,CAACC,IAAI,CAACC,GAAL,CAAS,CAACF,CAAV,EAAaD,QAAb,CAAT,GAAkCE,IAAI,CAACC,GAAL,CAASF,CAAT,EAAYD,QAAZ,CAAzC;AACD,GAFD;AAGD;;AAED,SAASI,aAAT,CAAuBH,CAAvB,EAA0B;AACxB,SAAOA,CAAC,GAAG,CAAJ,GAAQ,CAACC,IAAI,CAACG,IAAL,CAAU,CAACJ,CAAX,CAAT,GAAyBC,IAAI,CAACG,IAAL,CAAUJ,CAAV,CAAhC;AACD;;AAED,SAASK,eAAT,CAAyBL,CAAzB,EAA4B;AAC1B,SAAOA,CAAC,GAAG,CAAJ,GAAQ,CAACA,CAAD,GAAKA,CAAb,GAAiBA,CAAC,GAAGA,CAA5B;AACD;;AAED,OAAO,SAASM,MAAT,CAAgBC,SAAhB,EAA2B;AAChC,MAAIC,KAAK,GAAGD,SAAS,CAACZ,QAAD,EAAWA,QAAX,CAArB;AAAA,MACII,QAAQ,GAAG,CADf;;AAGA,WAASU,OAAT,GAAmB;AACjB,WAAOV,QAAQ,KAAK,CAAb,GAAiBQ,SAAS,CAACZ,QAAD,EAAWA,QAAX,CAA1B,GACDI,QAAQ,KAAK,GAAb,GAAmBQ,SAAS,CAACJ,aAAD,EAAgBE,eAAhB,CAA5B,GACAE,SAAS,CAACT,YAAY,CAACC,QAAD,CAAb,EAAyBD,YAAY,CAAC,IAAIC,QAAL,CAArC,CAFf;AAGD;;AAEDS,EAAAA,KAAK,CAACT,QAAN,GAAiB,UAASW,CAAT,EAAY;AAC3B,WAAOC,SAAS,CAACC,MAAV,IAAoBb,QAAQ,GAAG,CAACW,CAAZ,EAAeD,OAAO,EAA1C,IAAgDV,QAAvD;AACD,GAFD;;AAIA,SAAON,SAAS,CAACe,KAAD,CAAhB;AACD;AAED,eAAe,SAASN,GAAT,GAAe;AAC5B,MAAIM,KAAK,GAAGF,MAAM,CAACV,WAAW,EAAZ,CAAlB;;AAEAY,EAAAA,KAAK,CAACd,IAAN,GAAa,YAAW;AACtB,WAAOA,IAAI,CAACc,KAAD,EAAQN,GAAG,EAAX,CAAJ,CAAmBH,QAAnB,CAA4BS,KAAK,CAACT,QAAN,EAA5B,CAAP;AACD,GAFD;;AAIAF,EAAAA,SAAS,CAACgB,KAAV,CAAgBL,KAAhB,EAAuBG,SAAvB;AAEA,SAAOH,KAAP;AACD;AAED,OAAO,SAASJ,IAAT,GAAgB;AACrB,SAAOF,GAAG,CAACW,KAAJ,CAAU,IAAV,EAAgBF,SAAhB,EAA2BZ,QAA3B,CAAoC,GAApC,CAAP;AACD","sourcesContent":["import {linearish} from \"./linear\";\r\nimport {copy, identity, transformer} from \"./continuous\";\r\nimport {initRange} from \"./init\";\r\n\r\nfunction transformPow(exponent) {\r\n  return function(x) {\r\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\r\n  };\r\n}\r\n\r\nfunction transformSqrt(x) {\r\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\r\n}\r\n\r\nfunction transformSquare(x) {\r\n  return x < 0 ? -x * x : x * x;\r\n}\r\n\r\nexport function powish(transform) {\r\n  var scale = transform(identity, identity),\r\n      exponent = 1;\r\n\r\n  function rescale() {\r\n    return exponent === 1 ? transform(identity, identity)\r\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\r\n        : transform(transformPow(exponent), transformPow(1 / exponent));\r\n  }\r\n\r\n  scale.exponent = function(_) {\r\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\r\n  };\r\n\r\n  return linearish(scale);\r\n}\r\n\r\nexport default function pow() {\r\n  var scale = powish(transformer());\r\n\r\n  scale.copy = function() {\r\n    return copy(scale, pow()).exponent(scale.exponent());\r\n  };\r\n\r\n  initRange.apply(scale, arguments);\r\n\r\n  return scale;\r\n}\r\n\r\nexport function sqrt() {\r\n  return pow.apply(null, arguments).exponent(0.5);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}