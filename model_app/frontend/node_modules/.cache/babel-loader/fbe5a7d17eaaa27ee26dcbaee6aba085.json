{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";\nimport _sortBy from \"lodash/sortBy\";\nimport _isNaN from \"lodash/isNaN\";\nimport _isString from \"lodash/isString\";\nimport _isArray from \"lodash/isArray\";\nimport _max from \"lodash/max\";\nimport _min from \"lodash/min\";\nimport _flatMap from \"lodash/flatMap\";\nimport _isFunction from \"lodash/isFunction\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { getNiceTickValues, getTickValuesFixedDomain } from 'recharts-scale';\nimport * as d3Scales from 'd3-scale';\nimport { stack as shapeStack, stackOrderNone, stackOffsetExpand, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle } from 'd3-shape';\nimport { isNumOrStr, uniqueId, isNumber, getPercentValue, mathSign, findEntryInArray } from './DataUtils';\nimport ErrorBar from '../cartesian/ErrorBar';\nimport Legend from '../component/Legend';\nimport { findAllByType, findChildByType, getDisplayName } from './ReactUtils';\nexport var getValueByDataKey = function getValueByDataKey(obj, dataKey, defaultValue) {\n  if (_isNil(obj) || _isNil(dataKey)) {\n    return defaultValue;\n  }\n\n  if (isNumOrStr(dataKey)) {\n    return _get(obj, dataKey, defaultValue);\n  }\n\n  if (_isFunction(dataKey)) {\n    return dataKey(obj);\n  }\n\n  return defaultValue;\n};\n/**\r\n * Get domain of data by key\r\n * @param  {Array}   data      The data displayed in the chart\r\n * @param  {String}  key       The unique key of a group of data\r\n * @param  {String}  type      The type of axis\r\n * @param  {Boolean} filterNil Whether or not filter nil values\r\n * @return {Array} Domain of data\r\n */\n\nexport var getDomainOfDataByKey = function getDomainOfDataByKey(data, key, type, filterNil) {\n  var flattenData = _flatMap(data, function (entry) {\n    return getValueByDataKey(entry, key);\n  });\n\n  if (type === 'number') {\n    var domain = flattenData.filter(function (entry) {\n      return isNumber(entry) || parseFloat(entry, 10);\n    });\n    return domain.length ? [_min(domain), _max(domain)] : [Infinity, -Infinity];\n  }\n\n  var validateData = filterNil ? flattenData.filter(function (entry) {\n    return !_isNil(entry);\n  }) : flattenData;\n  return validateData.map(function (entry) {\n    return isNumOrStr(entry) ? entry : '';\n  });\n};\nexport var calculateActiveTickIndex = function calculateActiveTickIndex(coordinate, ticks, unsortedTicks, axis) {\n  var index = -1;\n  var len = ticks.length;\n\n  if (len > 1) {\n    if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\n      var range = axis.range; // ticks are distributed in a circle\n\n      for (var i = 0; i < len; i++) {\n        var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\n        var cur = unsortedTicks[i].coordinate;\n        var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\n        var sameDirectionCoord = void 0;\n\n        if (mathSign(cur - before) !== mathSign(after - cur)) {\n          var diffInterval = [];\n\n          if (mathSign(after - cur) === mathSign(range[1] - range[0])) {\n            sameDirectionCoord = after;\n            var curInRange = cur + range[1] - range[0];\n            diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\n            diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\n          } else {\n            sameDirectionCoord = before;\n            var afterInRange = after + range[1] - range[0];\n            diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\n            diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\n          }\n\n          var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];\n\n          if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        } else {\n          var min = Math.min(before, after);\n          var max = Math.max(before, after);\n\n          if (coordinate > (min + cur) / 2 && coordinate <= (max + cur) / 2) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        }\n      }\n    } else {\n      // ticks are distributed in a single direction\n      for (var _i = 0; _i < len; _i++) {\n        if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\n          index = ticks[_i].index;\n          break;\n        }\n      }\n    }\n  } else {\n    index = 0;\n  }\n\n  return index;\n};\n/**\r\n * Get the main color of each graphic item\r\n * @param  {ReactElement} item A graphic item\r\n * @return {String}            Color\r\n */\n\nexport var getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\n  var displayName = item.type.displayName;\n  var _item$props = item.props,\n      stroke = _item$props.stroke,\n      fill = _item$props.fill;\n  var result;\n\n  switch (displayName) {\n    case 'Line':\n      result = stroke;\n      break;\n\n    case 'Area':\n    case 'Radar':\n      result = stroke && stroke !== 'none' ? stroke : fill;\n      break;\n\n    default:\n      result = fill;\n      break;\n  }\n\n  return result;\n};\nexport var getLegendProps = function getLegendProps(_ref) {\n  var children = _ref.children,\n      formatedGraphicalItems = _ref.formatedGraphicalItems,\n      legendWidth = _ref.legendWidth,\n      legendContent = _ref.legendContent;\n  var legendItem = findChildByType(children, Legend);\n\n  if (!legendItem) {\n    return null;\n  }\n\n  var legendData;\n\n  if (legendItem.props && legendItem.props.payload) {\n    legendData = legendItem.props && legendItem.props.payload;\n  } else if (legendContent === 'children') {\n    legendData = (formatedGraphicalItems || []).reduce(function (result, _ref2) {\n      var item = _ref2.item,\n          props = _ref2.props;\n      var data = props.sectors || props.data || [];\n      return result.concat(data.map(function (entry) {\n        return {\n          type: legendItem.props.iconType || item.props.legendType,\n          value: entry.name,\n          color: entry.fill,\n          payload: entry\n        };\n      }));\n    }, []);\n  } else {\n    legendData = (formatedGraphicalItems || []).map(function (_ref3) {\n      var item = _ref3.item;\n      var _item$props2 = item.props,\n          dataKey = _item$props2.dataKey,\n          name = _item$props2.name,\n          legendType = _item$props2.legendType,\n          hide = _item$props2.hide;\n      return {\n        inactive: hide,\n        dataKey: dataKey,\n        type: legendItem.props.iconType || legendType || 'square',\n        color: getMainColorOfGraphicItem(item),\n        value: name || dataKey,\n        payload: item.props\n      };\n    });\n  }\n\n  return _objectSpread({}, legendItem.props, {}, Legend.getWithHeight(legendItem, legendWidth), {\n    payload: legendData,\n    item: legendItem\n  });\n};\n/**\r\n * Calculate the size of all groups for stacked bar graph\r\n * @param  {Object} stackGroups The items grouped by axisId and stackId\r\n * @return {Object} The size of all groups\r\n */\n\nexport var getBarSizeList = function getBarSizeList(_ref4) {\n  var globalSize = _ref4.barSize,\n      _ref4$stackGroups = _ref4.stackGroups,\n      stackGroups = _ref4$stackGroups === void 0 ? {} : _ref4$stackGroups;\n\n  if (!stackGroups) {\n    return {};\n  }\n\n  var result = {};\n  var numericAxisIds = Object.keys(stackGroups);\n\n  for (var i = 0, len = numericAxisIds.length; i < len; i++) {\n    var sgs = stackGroups[numericAxisIds[i]].stackGroups;\n    var stackIds = Object.keys(sgs);\n\n    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {\n      var _sgs$stackIds$j = sgs[stackIds[j]],\n          items = _sgs$stackIds$j.items,\n          cateAxisId = _sgs$stackIds$j.cateAxisId;\n      var barItems = items.filter(function (item) {\n        return getDisplayName(item.type).indexOf('Bar') >= 0;\n      });\n\n      if (barItems && barItems.length) {\n        var selfSize = barItems[0].props.barSize;\n        var cateId = barItems[0].props[cateAxisId];\n\n        if (!result[cateId]) {\n          result[cateId] = [];\n        }\n\n        result[cateId].push({\n          item: barItems[0],\n          stackList: barItems.slice(1),\n          barSize: _isNil(selfSize) ? globalSize : selfSize\n        });\n      }\n    }\n  }\n\n  return result;\n};\n/**\r\n   * Calculate the size of each bar and the gap between two bars\r\n   * @param  {Number} bandSize  The size of each category\r\n   * @param  {sizeList} sizeList  The size of all groups\r\n   * @param  {maxBarSize} maxBarSize The maximum size of bar\r\n   * @return {Number} The size of each bar and the gap between two bars\r\n   */\n\nexport var getBarPosition = function getBarPosition(_ref5) {\n  var barGap = _ref5.barGap,\n      barCategoryGap = _ref5.barCategoryGap,\n      bandSize = _ref5.bandSize,\n      _ref5$sizeList = _ref5.sizeList,\n      sizeList = _ref5$sizeList === void 0 ? [] : _ref5$sizeList,\n      maxBarSize = _ref5.maxBarSize;\n  var len = sizeList.length;\n  if (len < 1) return null;\n  var realBarGap = getPercentValue(barGap, bandSize, 0, true);\n  var result; // whether or not is barSize setted by user\n\n  if (sizeList[0].barSize === +sizeList[0].barSize) {\n    var useFull = false;\n    var fullBarSize = bandSize / len;\n    var sum = sizeList.reduce(function (res, entry) {\n      return res + entry.barSize || 0;\n    }, 0);\n    sum += (len - 1) * realBarGap;\n\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce(function (res, entry) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          size: useFull ? fullBarSize : entry.barSize\n        }\n      }]);\n      prev = newRes[newRes.length - 1].position;\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: prev\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  } else {\n    var _offset = getPercentValue(barCategoryGap, bandSize, 0, true);\n\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n\n    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce(function (res, entry, i) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n          size: size\n        }\n      }]);\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: newRes[newRes.length - 1].position\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  }\n\n  return result;\n};\nexport var appendOffsetOfLegend = function appendOffsetOfLegend(offset, items, props, legendBox) {\n  var children = props.children,\n      width = props.width,\n      height = props.height,\n      margin = props.margin;\n  var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n  var legendHeight = height - (margin.top || 0) - (margin.bottom || 0);\n  var legendProps = getLegendProps({\n    children: children,\n    items: items,\n    legendWidth: legendWidth,\n    legendHeight: legendHeight\n  });\n  var newOffset = offset;\n\n  if (legendProps) {\n    var box = legendBox || {};\n    var align = legendProps.align,\n        verticalAlign = legendProps.verticalAlign,\n        layout = legendProps.layout;\n\n    if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'center') && isNumber(offset[align])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, align, newOffset[align] + (box.width || 0)));\n    }\n\n    if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && isNumber(offset[verticalAlign])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, verticalAlign, newOffset[verticalAlign] + (box.height || 0)));\n    }\n  }\n\n  return newOffset;\n};\nexport var getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, axisType) {\n  var children = item.props.children;\n  var errorBars = findAllByType(children, ErrorBar).filter(function (errorBarChild) {\n    var direction = errorBarChild.props.direction;\n    return _isNil(direction) || _isNil(axisType) ? true : axisType.indexOf(direction) >= 0;\n  });\n\n  if (errorBars && errorBars.length) {\n    var keys = errorBars.map(function (errorBarChild) {\n      return errorBarChild.props.dataKey;\n    });\n    return data.reduce(function (result, entry) {\n      var entryValue = getValueByDataKey(entry, dataKey, 0);\n      var mainValue = _isArray(entryValue) ? [_min(entryValue), _max(entryValue)] : [entryValue, entryValue];\n      var errorDomain = keys.reduce(function (prevErrorArr, k) {\n        var errorValue = getValueByDataKey(entry, k, 0);\n        var lowerValue = mainValue[0] - Math.abs(_isArray(errorValue) ? errorValue[0] : errorValue);\n        var upperValue = mainValue[1] + Math.abs(_isArray(errorValue) ? errorValue[1] : errorValue);\n        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];\n      }, [Infinity, -Infinity]);\n      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\nexport var parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType) {\n  var domains = items.map(function (item) {\n    return getDomainOfErrorBars(data, item, dataKey, axisType);\n  }).filter(function (entry) {\n    return !_isNil(entry);\n  });\n\n  if (domains && domains.length) {\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n/**\r\n * Get domain of data by the configuration of item element\r\n * @param  {Array}   data      The data displayed in the chart\r\n * @param  {Array}   items     The instances of item\r\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\r\n * @param  {Boolean} filterNil Whether or not filter nil values\r\n * @return {Array}        Domain\r\n */\n\nexport var getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, filterNil) {\n  var domains = items.map(function (item) {\n    var dataKey = item.props.dataKey;\n\n    if (type === 'number' && dataKey) {\n      return getDomainOfErrorBars(data, item, dataKey) || getDomainOfDataByKey(data, dataKey, type, filterNil);\n    }\n\n    return getDomainOfDataByKey(data, dataKey, type, filterNil);\n  });\n\n  if (type === 'number') {\n    // Calculate the domain of number axis\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  var tag = {}; // Get the union set of category axis\n\n  return domains.reduce(function (result, entry) {\n    for (var i = 0, len = entry.length; i < len; i++) {\n      if (!tag[entry[i]]) {\n        tag[entry[i]] = true;\n        result.push(entry[i]);\n      }\n    }\n\n    return result;\n  }, []);\n};\nexport var isCategorialAxis = function isCategorialAxis(layout, axisType) {\n  return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';\n};\n/**\r\n * Calculate the Coordinates of grid\r\n * @param  {Array} ticks The ticks in axis\r\n * @param {Number} min   The minimun value of axis\r\n * @param {Number} max   The maximun value of axis\r\n * @return {Array}       Coordinates\r\n */\n\nexport var getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, min, max) {\n  var hasMin, hasMax;\n  var values = ticks.map(function (entry) {\n    if (entry.coordinate === min) {\n      hasMin = true;\n    }\n\n    if (entry.coordinate === max) {\n      hasMax = true;\n    }\n\n    return entry.coordinate;\n  });\n\n  if (!hasMin) {\n    values.push(min);\n  }\n\n  if (!hasMax) {\n    values.push(max);\n  }\n\n  return values;\n};\n/**\r\n * Get the ticks of an axis\r\n * @param  {Object}  axis The configuration of an axis\r\n * @param {Boolean} isGrid Whether or not are the ticks in grid\r\n * @param {Boolean} isAll Return the ticks of all the points or not\r\n * @return {Array}  Ticks\r\n */\n\nexport var getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\n  if (!axis) return null;\n  var scale = axis.scale;\n  var duplicateDomain = axis.duplicateDomain,\n      type = axis.type,\n      range = axis.range;\n  var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / 2 : 0;\n  offset = axis.axisType === 'angleAxis' ? mathSign(range[0] - range[1]) * 2 * offset : offset; // The ticks setted by user should only affect the ticks adjacent to axis line\n\n  if (isGrid && (axis.ticks || axis.niceTicks)) {\n    return (axis.ticks || axis.niceTicks).map(function (entry) {\n      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\n      return {\n        coordinate: scale(scaleContent) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  }\n\n  if (axis.isCategorial && axis.categoricalDomain) {\n    return axis.categoricalDomain.map(function (entry, index) {\n      return {\n        coordinate: scale(entry),\n        value: entry,\n        index: index,\n        offset: offset\n      };\n    });\n  }\n\n  if (scale.ticks && !isAll) {\n    return scale.ticks(axis.tickCount).map(function (entry) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  } // When axis has duplicated text, serial numbers are used to generate scale\n\n\n  return scale.domain().map(function (entry, index) {\n    return {\n      coordinate: scale(entry) + offset,\n      value: duplicateDomain ? duplicateDomain[entry] : entry,\n      index: index,\n      offset: offset\n    };\n  });\n};\n/**\r\n * combine the handlers\r\n * @param  {Function} defaultHandler Internal private handler\r\n * @param  {Function} parentHandler  Handler function specified in parent component\r\n * @param  {Function} childHandler   Handler function specified in child component\r\n * @return {Function}                The combined handler\r\n */\n\nexport var combineEventHandlers = function combineEventHandlers(defaultHandler, parentHandler, childHandler) {\n  var customizedHandler;\n\n  if (_isFunction(childHandler)) {\n    customizedHandler = childHandler;\n  } else if (_isFunction(parentHandler)) {\n    customizedHandler = parentHandler;\n  }\n\n  if (_isFunction(defaultHandler) || customizedHandler) {\n    return function (arg1, arg2, arg3, arg4) {\n      if (_isFunction(defaultHandler)) {\n        defaultHandler(arg1, arg2, arg3, arg4);\n      }\n\n      if (_isFunction(customizedHandler)) {\n        customizedHandler(arg1, arg2, arg3, arg4);\n      }\n    };\n  }\n\n  return null;\n};\n/**\r\n * Parse the scale function of axis\r\n * @param  {Object}   axis          The option of axis\r\n * @param  {String}   chartType     The displayName of chart\r\n * @return {Function}               The scale funcion\r\n */\n\nexport var parseScale = function parseScale(axis, chartType) {\n  var scale = axis.scale,\n      type = axis.type,\n      layout = axis.layout,\n      axisType = axis.axisType;\n\n  if (scale === 'auto') {\n    if (layout === 'radial' && axisType === 'radiusAxis') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    if (layout === 'radial' && axisType === 'angleAxis') {\n      return {\n        scale: d3Scales.scaleLinear(),\n        realScaleType: 'linear'\n      };\n    }\n\n    if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0)) {\n      return {\n        scale: d3Scales.scalePoint(),\n        realScaleType: 'point'\n      };\n    }\n\n    if (type === 'category') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    return {\n      scale: d3Scales.scaleLinear(),\n      realScaleType: 'linear'\n    };\n  }\n\n  if (_isString(scale)) {\n    var name = \"scale\".concat(scale.slice(0, 1).toUpperCase()).concat(scale.slice(1));\n    return {\n      scale: (d3Scales[name] || d3Scales.scalePoint)(),\n      realScaleType: d3Scales[name] ? name : 'point'\n    };\n  }\n\n  return _isFunction(scale) ? {\n    scale: scale\n  } : {\n    scale: d3Scales.scalePoint(),\n    realScaleType: 'point'\n  };\n};\nvar EPS = 1e-4;\nexport var checkDomainOfScale = function checkDomainOfScale(scale) {\n  var domain = scale.domain();\n\n  if (!domain || domain.length <= 2) {\n    return;\n  }\n\n  var len = domain.length;\n  var range = scale.range();\n  var min = Math.min(range[0], range[1]) - EPS;\n  var max = Math.max(range[0], range[1]) + EPS;\n  var first = scale(domain[0]);\n  var last = scale(domain[len - 1]);\n\n  if (first < min || first > max || last < min || last > max) {\n    scale.domain([domain[0], domain[len - 1]]);\n  }\n};\nexport var findPositionOfBar = function findPositionOfBar(barPosition, child) {\n  if (!barPosition) {\n    return null;\n  }\n\n  for (var i = 0, len = barPosition.length; i < len; i++) {\n    if (barPosition[i].item === child) {\n      return barPosition[i].position;\n    }\n  }\n\n  return null;\n};\nexport var truncateByDomain = function truncateByDomain(value, domain) {\n  if (!domain || domain.length !== 2 || !isNumber(domain[0]) || !isNumber(domain[1])) {\n    return value;\n  }\n\n  var min = Math.min(domain[0], domain[1]);\n  var max = Math.max(domain[0], domain[1]);\n  var result = [value[0], value[1]];\n\n  if (!isNumber(value[0]) || value[0] < min) {\n    result[0] = min;\n  }\n\n  if (!isNumber(value[1]) || value[1] > max) {\n    result[1] = max;\n  }\n\n  if (result[0] > max) {\n    result[0] = max;\n  }\n\n  if (result[1] < min) {\n    result[1] = min;\n  }\n\n  return result;\n};\n/* eslint no-param-reassign: 0 */\n\nexport var offsetSign = function offsetSign(series) {\n  var n = series.length;\n\n  if (n <= 0) {\n    return;\n  }\n\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    var negative = 0;\n\n    for (var i = 0; i < n; ++i) {\n      var value = _isNaN(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n      /* eslint-disable prefer-destructuring */\n\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = negative;\n        series[i][j][1] = negative + value;\n        negative = series[i][j][1];\n      }\n      /* eslint-enable prefer-destructuring */\n\n    }\n  }\n};\nvar STACK_OFFSET_MAP = {\n  sign: offsetSign,\n  expand: stackOffsetExpand,\n  none: stackOffsetNone,\n  silhouette: stackOffsetSilhouette,\n  wiggle: stackOffsetWiggle\n};\nexport var getStackedData = function getStackedData(data, stackItems, offsetType) {\n  var dataKeys = stackItems.map(function (item) {\n    return item.props.dataKey;\n  });\n  var stack = shapeStack().keys(dataKeys).value(function (d, key) {\n    return +getValueByDataKey(d, key, 0);\n  }).order(stackOrderNone).offset(STACK_OFFSET_MAP[offsetType]);\n  return stack(data);\n};\nexport var getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\n  if (!data) {\n    return null;\n  } // reversing items to affect render order (for layering)\n\n\n  var items = reverseStackOrder ? _items.reverse() : _items;\n  var stackGroups = items.reduce(function (result, item) {\n    var _item$props3 = item.props,\n        stackId = _item$props3.stackId,\n        hide = _item$props3.hide;\n\n    if (hide) {\n      return result;\n    }\n\n    var axisId = item.props[numericAxisId];\n    var parentGroup = result[axisId] || {\n      hasStack: false,\n      stackGroups: {}\n    };\n\n    if (isNumOrStr(stackId)) {\n      var childGroup = parentGroup.stackGroups[stackId] || {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: []\n      };\n      childGroup.items.push(item);\n      parentGroup.hasStack = true;\n      parentGroup.stackGroups[stackId] = childGroup;\n    } else {\n      parentGroup.stackGroups[uniqueId('_stackId_')] = {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: [item]\n      };\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, parentGroup));\n  }, {});\n  return Object.keys(stackGroups).reduce(function (result, axisId) {\n    var group = stackGroups[axisId];\n\n    if (group.hasStack) {\n      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {\n        var g = group.stackGroups[stackId];\n        return _objectSpread({}, res, _defineProperty({}, stackId, {\n          numericAxisId: numericAxisId,\n          cateAxisId: cateAxisId,\n          items: g.items,\n          stackedData: getStackedData(data, g.items, offsetType)\n        }));\n      }, {});\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, group));\n  }, {});\n};\n/**\r\n * get domain of ticks\r\n * @param  {Array} ticks Ticks of axis\r\n * @param  {String} type  The type of axis\r\n * @return {Array} domain\r\n */\n\nexport var calculateDomainOfTicks = function calculateDomainOfTicks(ticks, type) {\n  if (type === 'number') {\n    return [_min(ticks), _max(ticks)];\n  }\n\n  return ticks;\n};\n/**\r\n * Configure the scale function of axis\r\n * @param {Object} scale The scale function\r\n * @param {Object} opts  The configuration of axis\r\n * @return {Object}      null\r\n */\n\nexport var getTicksOfScale = function getTicksOfScale(scale, opts) {\n  var realScaleType = opts.realScaleType,\n      type = opts.type,\n      tickCount = opts.tickCount,\n      originalDomain = opts.originalDomain,\n      allowDecimals = opts.allowDecimals;\n  var scaleType = realScaleType || opts.scale;\n\n  if (scaleType !== 'auto' && scaleType !== 'linear') {\n    return null;\n  }\n\n  if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {\n    // Calculate the ticks by the number of grid when the axis is a number axis\n    var domain = scale.domain();\n    var tickValues = getNiceTickValues(domain, tickCount, allowDecimals);\n    scale.domain(calculateDomainOfTicks(tickValues, type));\n    return {\n      niceTicks: tickValues\n    };\n  }\n\n  if (tickCount && type === 'number') {\n    var _domain = scale.domain();\n\n    var _tickValues = getTickValuesFixedDomain(_domain, tickCount, allowDecimals);\n\n    return {\n      niceTicks: _tickValues\n    };\n  }\n\n  return null;\n};\nexport var getCateCoordinateOfLine = function getCateCoordinateOfLine(_ref6) {\n  var axis = _ref6.axis,\n      ticks = _ref6.ticks,\n      bandSize = _ref6.bandSize,\n      entry = _ref6.entry,\n      index = _ref6.index,\n      dataKey = _ref6.dataKey;\n\n  if (axis.type === 'category') {\n    // find coordinate of category axis by the value of category\n    if (!axis.allowDuplicatedCategory && axis.dataKey && !_isNil(entry[axis.dataKey])) {\n      var matchedTick = findEntryInArray(ticks, 'value', entry[axis.dataKey]);\n\n      if (matchedTick) {\n        return matchedTick.coordinate + bandSize / 2;\n      }\n    }\n\n    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\n  }\n\n  var value = getValueByDataKey(entry, !_isNil(dataKey) ? dataKey : axis.dataKey);\n  return !_isNil(value) ? axis.scale(value) : null;\n};\nexport var getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref7) {\n  var axis = _ref7.axis,\n      ticks = _ref7.ticks,\n      offset = _ref7.offset,\n      bandSize = _ref7.bandSize,\n      entry = _ref7.entry,\n      index = _ref7.index;\n\n  if (axis.type === 'category') {\n    return ticks[index] ? ticks[index].coordinate + offset : null;\n  }\n\n  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\n  return !_isNil(value) ? axis.scale(value) - bandSize / 2 + offset : null;\n};\nexport var getBaseValueOfBar = function getBaseValueOfBar(_ref8) {\n  var numericAxis = _ref8.numericAxis;\n  var domain = numericAxis.scale.domain();\n\n  if (numericAxis.type === 'number') {\n    var min = Math.min(domain[0], domain[1]);\n    var max = Math.max(domain[0], domain[1]);\n\n    if (min <= 0 && max >= 0) {\n      return 0;\n    }\n\n    if (max < 0) {\n      return max;\n    }\n\n    return min;\n  }\n\n  return domain[0];\n};\nexport var getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\n  var stackId = item.props.stackId;\n\n  if (isNumOrStr(stackId)) {\n    var group = stackGroups[stackId];\n\n    if (group && group.items.length) {\n      var itemIndex = -1;\n\n      for (var i = 0, len = group.items.length; i < len; i++) {\n        if (group.items[i] === item) {\n          itemIndex = i;\n          break;\n        }\n      }\n\n      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\n    }\n  }\n\n  return null;\n};\n\nvar getDomainOfSingle = function getDomainOfSingle(data) {\n  return data.reduce(function (result, entry) {\n    return [_min(entry.concat([result[0]]).filter(isNumber)), _max(entry.concat([result[1]]).filter(isNumber))];\n  }, [Infinity, -Infinity]);\n};\n\nexport var getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\n  return Object.keys(stackGroups).reduce(function (result, stackId) {\n    var group = stackGroups[stackId];\n    var stackedData = group.stackedData;\n    var domain = stackedData.reduce(function (res, entry) {\n      var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\n      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];\n    }, [Infinity, -Infinity]);\n    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];\n  }, [Infinity, -Infinity]).map(function (result) {\n    return result === Infinity || result === -Infinity ? 0 : result;\n  });\n};\nexport var MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\n  if (!_isArray(specifiedDomain)) {\n    return dataDomain;\n  }\n\n  var domain = [];\n  /* eslint-disable prefer-destructuring */\n\n  if (isNumber(specifiedDomain[0])) {\n    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\n  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\n    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\n    domain[0] = dataDomain[0] - value;\n  } else if (_isFunction(specifiedDomain[0])) {\n    domain[0] = specifiedDomain[0](dataDomain[0]);\n  } else {\n    domain[0] = dataDomain[0];\n  }\n\n  if (isNumber(specifiedDomain[1])) {\n    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\n  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\n    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\n\n    domain[1] = dataDomain[1] + _value;\n  } else if (_isFunction(specifiedDomain[1])) {\n    domain[1] = specifiedDomain[1](dataDomain[1]);\n  } else {\n    domain[1] = dataDomain[1];\n  }\n  /* eslint-enable prefer-destructuring */\n\n\n  return domain;\n};\n/**\r\n * Calculate the size between two category\r\n * @param  {Object} axis  The options of axis\r\n * @param  {Array}  ticks The ticks of axis\r\n * @return {Number} Size\r\n */\n\nexport var getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks) {\n  if (axis && axis.scale && axis.scale.bandwidth) {\n    return axis.scale.bandwidth();\n  }\n\n  if (axis && ticks && ticks.length >= 2) {\n    var orderedTicks = _sortBy(ticks, function (o) {\n      return o.coordinate;\n    });\n\n    var bandSize = Infinity;\n\n    for (var i = 1, len = orderedTicks.length; i < len; i++) {\n      var cur = orderedTicks[i];\n      var prev = orderedTicks[i - 1];\n      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\n    }\n\n    return bandSize === Infinity ? 0 : bandSize;\n  }\n\n  return 0;\n};\n/**\r\n * parse the domain of a category axis when a domain is specified\r\n * @param   {Array}        specifiedDomain  The domain specified by users\r\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\r\n * @param   {ReactElement} axisChild        The axis element\r\n * @returns {Array}        domains\r\n */\n\nexport var parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\n  if (!specifiedDomain || !specifiedDomain.length) {\n    return calculatedDomain;\n  }\n\n  if (_isEqual(specifiedDomain, _get(axisChild, 'type.defaultProps.domain'))) {\n    return calculatedDomain;\n  }\n\n  return specifiedDomain;\n};","map":{"version":3,"sources":["C:/Users/totti/Documents/jhu class/delineo/Website/model_app/frontend/node_modules/recharts/es6/util/ChartUtils.js"],"names":["_isEqual","_sortBy","_isNaN","_isString","_isArray","_max","_min","_flatMap","_isFunction","_get","_isNil","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","getNiceTickValues","getTickValuesFixedDomain","d3Scales","stack","shapeStack","stackOrderNone","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","isNumOrStr","uniqueId","isNumber","getPercentValue","mathSign","findEntryInArray","ErrorBar","Legend","findAllByType","findChildByType","getDisplayName","getValueByDataKey","dataKey","defaultValue","getDomainOfDataByKey","data","type","filterNil","flattenData","entry","domain","parseFloat","Infinity","validateData","map","calculateActiveTickIndex","coordinate","ticks","unsortedTicks","axis","index","len","axisType","Math","abs","range","before","cur","after","sameDirectionCoord","diffInterval","curInRange","min","max","afterInRange","sameInterval","_i","getMainColorOfGraphicItem","item","displayName","_item$props","props","stroke","fill","result","getLegendProps","_ref","children","formatedGraphicalItems","legendWidth","legendContent","legendItem","legendData","payload","reduce","_ref2","sectors","concat","iconType","legendType","name","color","_ref3","_item$props2","hide","inactive","getWithHeight","getBarSizeList","_ref4","globalSize","barSize","_ref4$stackGroups","stackGroups","numericAxisIds","sgs","stackIds","j","sLen","_sgs$stackIds$j","items","cateAxisId","barItems","indexOf","selfSize","cateId","stackList","slice","getBarPosition","_ref5","barGap","barCategoryGap","bandSize","_ref5$sizeList","sizeList","maxBarSize","realBarGap","useFull","fullBarSize","sum","res","offset","prev","size","newRes","position","_offset","originalSize","appendOffsetOfLegend","legendBox","width","height","margin","left","right","legendHeight","top","bottom","legendProps","newOffset","box","align","verticalAlign","layout","getDomainOfErrorBars","errorBars","errorBarChild","direction","entryValue","mainValue","errorDomain","prevErrorArr","k","errorValue","lowerValue","upperValue","parseErrorBarsOfAxis","domains","getDomainOfItemsWithSameAxis","tag","isCategorialAxis","getCoordinatesOfGrid","hasMin","hasMax","values","getTicksOfAxis","isGrid","isAll","scale","duplicateDomain","bandwidth","niceTicks","scaleContent","isCategorial","categoricalDomain","tickCount","combineEventHandlers","defaultHandler","parentHandler","childHandler","customizedHandler","arg1","arg2","arg3","arg4","parseScale","chartType","scaleBand","realScaleType","scaleLinear","scalePoint","toUpperCase","EPS","checkDomainOfScale","first","last","findPositionOfBar","barPosition","child","truncateByDomain","offsetSign","series","n","m","positive","negative","STACK_OFFSET_MAP","sign","expand","none","silhouette","wiggle","getStackedData","stackItems","offsetType","dataKeys","d","order","getStackGroupsByAxisId","_items","numericAxisId","reverseStackOrder","reverse","_item$props3","stackId","axisId","parentGroup","hasStack","childGroup","group","g","stackedData","calculateDomainOfTicks","getTicksOfScale","opts","originalDomain","allowDecimals","scaleType","tickValues","_domain","_tickValues","getCateCoordinateOfLine","_ref6","allowDuplicatedCategory","matchedTick","getCateCoordinateOfBar","_ref7","getBaseValueOfBar","_ref8","numericAxis","getStackedDataOfItem","itemIndex","getDomainOfSingle","getDomainOfStackGroups","startIndex","endIndex","s","MIN_VALUE_REG","MAX_VALUE_REG","parseSpecifiedDomain","specifiedDomain","dataDomain","allowDataOverflow","test","exec","_value","getBandSizeOfAxis","orderedTicks","o","parseDomainOfCategoryAxis","calculatedDomain","axisChild"],"mappings":"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","sourcesContent":["import _isEqual from \"lodash/isEqual\";\r\nimport _sortBy from \"lodash/sortBy\";\r\nimport _isNaN from \"lodash/isNaN\";\r\nimport _isString from \"lodash/isString\";\r\nimport _isArray from \"lodash/isArray\";\r\nimport _max from \"lodash/max\";\r\nimport _min from \"lodash/min\";\r\nimport _flatMap from \"lodash/flatMap\";\r\nimport _isFunction from \"lodash/isFunction\";\r\nimport _get from \"lodash/get\";\r\nimport _isNil from \"lodash/isNil\";\r\n\r\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\r\n\r\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\r\n\r\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\r\n\r\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\r\n\r\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nimport { getNiceTickValues, getTickValuesFixedDomain } from 'recharts-scale';\r\nimport * as d3Scales from 'd3-scale';\r\nimport { stack as shapeStack, stackOrderNone, stackOffsetExpand, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle } from 'd3-shape';\r\nimport { isNumOrStr, uniqueId, isNumber, getPercentValue, mathSign, findEntryInArray } from './DataUtils';\r\nimport ErrorBar from '../cartesian/ErrorBar';\r\nimport Legend from '../component/Legend';\r\nimport { findAllByType, findChildByType, getDisplayName } from './ReactUtils';\r\nexport var getValueByDataKey = function getValueByDataKey(obj, dataKey, defaultValue) {\r\n  if (_isNil(obj) || _isNil(dataKey)) {\r\n    return defaultValue;\r\n  }\r\n\r\n  if (isNumOrStr(dataKey)) {\r\n    return _get(obj, dataKey, defaultValue);\r\n  }\r\n\r\n  if (_isFunction(dataKey)) {\r\n    return dataKey(obj);\r\n  }\r\n\r\n  return defaultValue;\r\n};\r\n/**\r\n * Get domain of data by key\r\n * @param  {Array}   data      The data displayed in the chart\r\n * @param  {String}  key       The unique key of a group of data\r\n * @param  {String}  type      The type of axis\r\n * @param  {Boolean} filterNil Whether or not filter nil values\r\n * @return {Array} Domain of data\r\n */\r\n\r\nexport var getDomainOfDataByKey = function getDomainOfDataByKey(data, key, type, filterNil) {\r\n  var flattenData = _flatMap(data, function (entry) {\r\n    return getValueByDataKey(entry, key);\r\n  });\r\n\r\n  if (type === 'number') {\r\n    var domain = flattenData.filter(function (entry) {\r\n      return isNumber(entry) || parseFloat(entry, 10);\r\n    });\r\n    return domain.length ? [_min(domain), _max(domain)] : [Infinity, -Infinity];\r\n  }\r\n\r\n  var validateData = filterNil ? flattenData.filter(function (entry) {\r\n    return !_isNil(entry);\r\n  }) : flattenData;\r\n  return validateData.map(function (entry) {\r\n    return isNumOrStr(entry) ? entry : '';\r\n  });\r\n};\r\nexport var calculateActiveTickIndex = function calculateActiveTickIndex(coordinate, ticks, unsortedTicks, axis) {\r\n  var index = -1;\r\n  var len = ticks.length;\r\n\r\n  if (len > 1) {\r\n    if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\r\n      var range = axis.range; // ticks are distributed in a circle\r\n\r\n      for (var i = 0; i < len; i++) {\r\n        var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\r\n        var cur = unsortedTicks[i].coordinate;\r\n        var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\r\n        var sameDirectionCoord = void 0;\r\n\r\n        if (mathSign(cur - before) !== mathSign(after - cur)) {\r\n          var diffInterval = [];\r\n\r\n          if (mathSign(after - cur) === mathSign(range[1] - range[0])) {\r\n            sameDirectionCoord = after;\r\n            var curInRange = cur + range[1] - range[0];\r\n            diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\r\n            diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\r\n          } else {\r\n            sameDirectionCoord = before;\r\n            var afterInRange = after + range[1] - range[0];\r\n            diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\r\n            diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\r\n          }\r\n\r\n          var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];\r\n\r\n          if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\r\n            index = unsortedTicks[i].index;\r\n            break;\r\n          }\r\n        } else {\r\n          var min = Math.min(before, after);\r\n          var max = Math.max(before, after);\r\n\r\n          if (coordinate > (min + cur) / 2 && coordinate <= (max + cur) / 2) {\r\n            index = unsortedTicks[i].index;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // ticks are distributed in a single direction\r\n      for (var _i = 0; _i < len; _i++) {\r\n        if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\r\n          index = ticks[_i].index;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    index = 0;\r\n  }\r\n\r\n  return index;\r\n};\r\n/**\r\n * Get the main color of each graphic item\r\n * @param  {ReactElement} item A graphic item\r\n * @return {String}            Color\r\n */\r\n\r\nexport var getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\r\n  var displayName = item.type.displayName;\r\n  var _item$props = item.props,\r\n      stroke = _item$props.stroke,\r\n      fill = _item$props.fill;\r\n  var result;\r\n\r\n  switch (displayName) {\r\n    case 'Line':\r\n      result = stroke;\r\n      break;\r\n\r\n    case 'Area':\r\n    case 'Radar':\r\n      result = stroke && stroke !== 'none' ? stroke : fill;\r\n      break;\r\n\r\n    default:\r\n      result = fill;\r\n      break;\r\n  }\r\n\r\n  return result;\r\n};\r\nexport var getLegendProps = function getLegendProps(_ref) {\r\n  var children = _ref.children,\r\n      formatedGraphicalItems = _ref.formatedGraphicalItems,\r\n      legendWidth = _ref.legendWidth,\r\n      legendContent = _ref.legendContent;\r\n  var legendItem = findChildByType(children, Legend);\r\n\r\n  if (!legendItem) {\r\n    return null;\r\n  }\r\n\r\n  var legendData;\r\n\r\n  if (legendItem.props && legendItem.props.payload) {\r\n    legendData = legendItem.props && legendItem.props.payload;\r\n  } else if (legendContent === 'children') {\r\n    legendData = (formatedGraphicalItems || []).reduce(function (result, _ref2) {\r\n      var item = _ref2.item,\r\n          props = _ref2.props;\r\n      var data = props.sectors || props.data || [];\r\n      return result.concat(data.map(function (entry) {\r\n        return {\r\n          type: legendItem.props.iconType || item.props.legendType,\r\n          value: entry.name,\r\n          color: entry.fill,\r\n          payload: entry\r\n        };\r\n      }));\r\n    }, []);\r\n  } else {\r\n    legendData = (formatedGraphicalItems || []).map(function (_ref3) {\r\n      var item = _ref3.item;\r\n      var _item$props2 = item.props,\r\n          dataKey = _item$props2.dataKey,\r\n          name = _item$props2.name,\r\n          legendType = _item$props2.legendType,\r\n          hide = _item$props2.hide;\r\n      return {\r\n        inactive: hide,\r\n        dataKey: dataKey,\r\n        type: legendItem.props.iconType || legendType || 'square',\r\n        color: getMainColorOfGraphicItem(item),\r\n        value: name || dataKey,\r\n        payload: item.props\r\n      };\r\n    });\r\n  }\r\n\r\n  return _objectSpread({}, legendItem.props, {}, Legend.getWithHeight(legendItem, legendWidth), {\r\n    payload: legendData,\r\n    item: legendItem\r\n  });\r\n};\r\n/**\r\n * Calculate the size of all groups for stacked bar graph\r\n * @param  {Object} stackGroups The items grouped by axisId and stackId\r\n * @return {Object} The size of all groups\r\n */\r\n\r\nexport var getBarSizeList = function getBarSizeList(_ref4) {\r\n  var globalSize = _ref4.barSize,\r\n      _ref4$stackGroups = _ref4.stackGroups,\r\n      stackGroups = _ref4$stackGroups === void 0 ? {} : _ref4$stackGroups;\r\n\r\n  if (!stackGroups) {\r\n    return {};\r\n  }\r\n\r\n  var result = {};\r\n  var numericAxisIds = Object.keys(stackGroups);\r\n\r\n  for (var i = 0, len = numericAxisIds.length; i < len; i++) {\r\n    var sgs = stackGroups[numericAxisIds[i]].stackGroups;\r\n    var stackIds = Object.keys(sgs);\r\n\r\n    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {\r\n      var _sgs$stackIds$j = sgs[stackIds[j]],\r\n          items = _sgs$stackIds$j.items,\r\n          cateAxisId = _sgs$stackIds$j.cateAxisId;\r\n      var barItems = items.filter(function (item) {\r\n        return getDisplayName(item.type).indexOf('Bar') >= 0;\r\n      });\r\n\r\n      if (barItems && barItems.length) {\r\n        var selfSize = barItems[0].props.barSize;\r\n        var cateId = barItems[0].props[cateAxisId];\r\n\r\n        if (!result[cateId]) {\r\n          result[cateId] = [];\r\n        }\r\n\r\n        result[cateId].push({\r\n          item: barItems[0],\r\n          stackList: barItems.slice(1),\r\n          barSize: _isNil(selfSize) ? globalSize : selfSize\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n/**\r\n   * Calculate the size of each bar and the gap between two bars\r\n   * @param  {Number} bandSize  The size of each category\r\n   * @param  {sizeList} sizeList  The size of all groups\r\n   * @param  {maxBarSize} maxBarSize The maximum size of bar\r\n   * @return {Number} The size of each bar and the gap between two bars\r\n   */\r\n\r\nexport var getBarPosition = function getBarPosition(_ref5) {\r\n  var barGap = _ref5.barGap,\r\n      barCategoryGap = _ref5.barCategoryGap,\r\n      bandSize = _ref5.bandSize,\r\n      _ref5$sizeList = _ref5.sizeList,\r\n      sizeList = _ref5$sizeList === void 0 ? [] : _ref5$sizeList,\r\n      maxBarSize = _ref5.maxBarSize;\r\n  var len = sizeList.length;\r\n  if (len < 1) return null;\r\n  var realBarGap = getPercentValue(barGap, bandSize, 0, true);\r\n  var result; // whether or not is barSize setted by user\r\n\r\n  if (sizeList[0].barSize === +sizeList[0].barSize) {\r\n    var useFull = false;\r\n    var fullBarSize = bandSize / len;\r\n    var sum = sizeList.reduce(function (res, entry) {\r\n      return res + entry.barSize || 0;\r\n    }, 0);\r\n    sum += (len - 1) * realBarGap;\r\n\r\n    if (sum >= bandSize) {\r\n      sum -= (len - 1) * realBarGap;\r\n      realBarGap = 0;\r\n    }\r\n\r\n    if (sum >= bandSize && fullBarSize > 0) {\r\n      useFull = true;\r\n      fullBarSize *= 0.9;\r\n      sum = len * fullBarSize;\r\n    }\r\n\r\n    var offset = (bandSize - sum) / 2 >> 0;\r\n    var prev = {\r\n      offset: offset - realBarGap,\r\n      size: 0\r\n    };\r\n    result = sizeList.reduce(function (res, entry) {\r\n      var newRes = [].concat(_toConsumableArray(res), [{\r\n        item: entry.item,\r\n        position: {\r\n          offset: prev.offset + prev.size + realBarGap,\r\n          size: useFull ? fullBarSize : entry.barSize\r\n        }\r\n      }]);\r\n      prev = newRes[newRes.length - 1].position;\r\n\r\n      if (entry.stackList && entry.stackList.length) {\r\n        entry.stackList.forEach(function (item) {\r\n          newRes.push({\r\n            item: item,\r\n            position: prev\r\n          });\r\n        });\r\n      }\r\n\r\n      return newRes;\r\n    }, []);\r\n  } else {\r\n    var _offset = getPercentValue(barCategoryGap, bandSize, 0, true);\r\n\r\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\r\n      realBarGap = 0;\r\n    }\r\n\r\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\r\n\r\n    if (originalSize > 1) {\r\n      originalSize >>= 0;\r\n    }\r\n\r\n    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\r\n    result = sizeList.reduce(function (res, entry, i) {\r\n      var newRes = [].concat(_toConsumableArray(res), [{\r\n        item: entry.item,\r\n        position: {\r\n          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\r\n          size: size\r\n        }\r\n      }]);\r\n\r\n      if (entry.stackList && entry.stackList.length) {\r\n        entry.stackList.forEach(function (item) {\r\n          newRes.push({\r\n            item: item,\r\n            position: newRes[newRes.length - 1].position\r\n          });\r\n        });\r\n      }\r\n\r\n      return newRes;\r\n    }, []);\r\n  }\r\n\r\n  return result;\r\n};\r\nexport var appendOffsetOfLegend = function appendOffsetOfLegend(offset, items, props, legendBox) {\r\n  var children = props.children,\r\n      width = props.width,\r\n      height = props.height,\r\n      margin = props.margin;\r\n  var legendWidth = width - (margin.left || 0) - (margin.right || 0);\r\n  var legendHeight = height - (margin.top || 0) - (margin.bottom || 0);\r\n  var legendProps = getLegendProps({\r\n    children: children,\r\n    items: items,\r\n    legendWidth: legendWidth,\r\n    legendHeight: legendHeight\r\n  });\r\n  var newOffset = offset;\r\n\r\n  if (legendProps) {\r\n    var box = legendBox || {};\r\n    var align = legendProps.align,\r\n        verticalAlign = legendProps.verticalAlign,\r\n        layout = legendProps.layout;\r\n\r\n    if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'center') && isNumber(offset[align])) {\r\n      newOffset = _objectSpread({}, offset, _defineProperty({}, align, newOffset[align] + (box.width || 0)));\r\n    }\r\n\r\n    if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && isNumber(offset[verticalAlign])) {\r\n      newOffset = _objectSpread({}, offset, _defineProperty({}, verticalAlign, newOffset[verticalAlign] + (box.height || 0)));\r\n    }\r\n  }\r\n\r\n  return newOffset;\r\n};\r\nexport var getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, axisType) {\r\n  var children = item.props.children;\r\n  var errorBars = findAllByType(children, ErrorBar).filter(function (errorBarChild) {\r\n    var direction = errorBarChild.props.direction;\r\n    return _isNil(direction) || _isNil(axisType) ? true : axisType.indexOf(direction) >= 0;\r\n  });\r\n\r\n  if (errorBars && errorBars.length) {\r\n    var keys = errorBars.map(function (errorBarChild) {\r\n      return errorBarChild.props.dataKey;\r\n    });\r\n    return data.reduce(function (result, entry) {\r\n      var entryValue = getValueByDataKey(entry, dataKey, 0);\r\n      var mainValue = _isArray(entryValue) ? [_min(entryValue), _max(entryValue)] : [entryValue, entryValue];\r\n      var errorDomain = keys.reduce(function (prevErrorArr, k) {\r\n        var errorValue = getValueByDataKey(entry, k, 0);\r\n        var lowerValue = mainValue[0] - Math.abs(_isArray(errorValue) ? errorValue[0] : errorValue);\r\n        var upperValue = mainValue[1] + Math.abs(_isArray(errorValue) ? errorValue[1] : errorValue);\r\n        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];\r\n      }, [Infinity, -Infinity]);\r\n      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];\r\n    }, [Infinity, -Infinity]);\r\n  }\r\n\r\n  return null;\r\n};\r\nexport var parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType) {\r\n  var domains = items.map(function (item) {\r\n    return getDomainOfErrorBars(data, item, dataKey, axisType);\r\n  }).filter(function (entry) {\r\n    return !_isNil(entry);\r\n  });\r\n\r\n  if (domains && domains.length) {\r\n    return domains.reduce(function (result, entry) {\r\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\r\n    }, [Infinity, -Infinity]);\r\n  }\r\n\r\n  return null;\r\n};\r\n/**\r\n * Get domain of data by the configuration of item element\r\n * @param  {Array}   data      The data displayed in the chart\r\n * @param  {Array}   items     The instances of item\r\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\r\n * @param  {Boolean} filterNil Whether or not filter nil values\r\n * @return {Array}        Domain\r\n */\r\n\r\nexport var getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, filterNil) {\r\n  var domains = items.map(function (item) {\r\n    var dataKey = item.props.dataKey;\r\n\r\n    if (type === 'number' && dataKey) {\r\n      return getDomainOfErrorBars(data, item, dataKey) || getDomainOfDataByKey(data, dataKey, type, filterNil);\r\n    }\r\n\r\n    return getDomainOfDataByKey(data, dataKey, type, filterNil);\r\n  });\r\n\r\n  if (type === 'number') {\r\n    // Calculate the domain of number axis\r\n    return domains.reduce(function (result, entry) {\r\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\r\n    }, [Infinity, -Infinity]);\r\n  }\r\n\r\n  var tag = {}; // Get the union set of category axis\r\n\r\n  return domains.reduce(function (result, entry) {\r\n    for (var i = 0, len = entry.length; i < len; i++) {\r\n      if (!tag[entry[i]]) {\r\n        tag[entry[i]] = true;\r\n        result.push(entry[i]);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }, []);\r\n};\r\nexport var isCategorialAxis = function isCategorialAxis(layout, axisType) {\r\n  return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';\r\n};\r\n/**\r\n * Calculate the Coordinates of grid\r\n * @param  {Array} ticks The ticks in axis\r\n * @param {Number} min   The minimun value of axis\r\n * @param {Number} max   The maximun value of axis\r\n * @return {Array}       Coordinates\r\n */\r\n\r\nexport var getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, min, max) {\r\n  var hasMin, hasMax;\r\n  var values = ticks.map(function (entry) {\r\n    if (entry.coordinate === min) {\r\n      hasMin = true;\r\n    }\r\n\r\n    if (entry.coordinate === max) {\r\n      hasMax = true;\r\n    }\r\n\r\n    return entry.coordinate;\r\n  });\r\n\r\n  if (!hasMin) {\r\n    values.push(min);\r\n  }\r\n\r\n  if (!hasMax) {\r\n    values.push(max);\r\n  }\r\n\r\n  return values;\r\n};\r\n/**\r\n * Get the ticks of an axis\r\n * @param  {Object}  axis The configuration of an axis\r\n * @param {Boolean} isGrid Whether or not are the ticks in grid\r\n * @param {Boolean} isAll Return the ticks of all the points or not\r\n * @return {Array}  Ticks\r\n */\r\n\r\nexport var getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\r\n  if (!axis) return null;\r\n  var scale = axis.scale;\r\n  var duplicateDomain = axis.duplicateDomain,\r\n      type = axis.type,\r\n      range = axis.range;\r\n  var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / 2 : 0;\r\n  offset = axis.axisType === 'angleAxis' ? mathSign(range[0] - range[1]) * 2 * offset : offset; // The ticks setted by user should only affect the ticks adjacent to axis line\r\n\r\n  if (isGrid && (axis.ticks || axis.niceTicks)) {\r\n    return (axis.ticks || axis.niceTicks).map(function (entry) {\r\n      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\r\n      return {\r\n        coordinate: scale(scaleContent) + offset,\r\n        value: entry,\r\n        offset: offset\r\n      };\r\n    });\r\n  }\r\n\r\n  if (axis.isCategorial && axis.categoricalDomain) {\r\n    return axis.categoricalDomain.map(function (entry, index) {\r\n      return {\r\n        coordinate: scale(entry),\r\n        value: entry,\r\n        index: index,\r\n        offset: offset\r\n      };\r\n    });\r\n  }\r\n\r\n  if (scale.ticks && !isAll) {\r\n    return scale.ticks(axis.tickCount).map(function (entry) {\r\n      return {\r\n        coordinate: scale(entry) + offset,\r\n        value: entry,\r\n        offset: offset\r\n      };\r\n    });\r\n  } // When axis has duplicated text, serial numbers are used to generate scale\r\n\r\n\r\n  return scale.domain().map(function (entry, index) {\r\n    return {\r\n      coordinate: scale(entry) + offset,\r\n      value: duplicateDomain ? duplicateDomain[entry] : entry,\r\n      index: index,\r\n      offset: offset\r\n    };\r\n  });\r\n};\r\n/**\r\n * combine the handlers\r\n * @param  {Function} defaultHandler Internal private handler\r\n * @param  {Function} parentHandler  Handler function specified in parent component\r\n * @param  {Function} childHandler   Handler function specified in child component\r\n * @return {Function}                The combined handler\r\n */\r\n\r\nexport var combineEventHandlers = function combineEventHandlers(defaultHandler, parentHandler, childHandler) {\r\n  var customizedHandler;\r\n\r\n  if (_isFunction(childHandler)) {\r\n    customizedHandler = childHandler;\r\n  } else if (_isFunction(parentHandler)) {\r\n    customizedHandler = parentHandler;\r\n  }\r\n\r\n  if (_isFunction(defaultHandler) || customizedHandler) {\r\n    return function (arg1, arg2, arg3, arg4) {\r\n      if (_isFunction(defaultHandler)) {\r\n        defaultHandler(arg1, arg2, arg3, arg4);\r\n      }\r\n\r\n      if (_isFunction(customizedHandler)) {\r\n        customizedHandler(arg1, arg2, arg3, arg4);\r\n      }\r\n    };\r\n  }\r\n\r\n  return null;\r\n};\r\n/**\r\n * Parse the scale function of axis\r\n * @param  {Object}   axis          The option of axis\r\n * @param  {String}   chartType     The displayName of chart\r\n * @return {Function}               The scale funcion\r\n */\r\n\r\nexport var parseScale = function parseScale(axis, chartType) {\r\n  var scale = axis.scale,\r\n      type = axis.type,\r\n      layout = axis.layout,\r\n      axisType = axis.axisType;\r\n\r\n  if (scale === 'auto') {\r\n    if (layout === 'radial' && axisType === 'radiusAxis') {\r\n      return {\r\n        scale: d3Scales.scaleBand(),\r\n        realScaleType: 'band'\r\n      };\r\n    }\r\n\r\n    if (layout === 'radial' && axisType === 'angleAxis') {\r\n      return {\r\n        scale: d3Scales.scaleLinear(),\r\n        realScaleType: 'linear'\r\n      };\r\n    }\r\n\r\n    if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0)) {\r\n      return {\r\n        scale: d3Scales.scalePoint(),\r\n        realScaleType: 'point'\r\n      };\r\n    }\r\n\r\n    if (type === 'category') {\r\n      return {\r\n        scale: d3Scales.scaleBand(),\r\n        realScaleType: 'band'\r\n      };\r\n    }\r\n\r\n    return {\r\n      scale: d3Scales.scaleLinear(),\r\n      realScaleType: 'linear'\r\n    };\r\n  }\r\n\r\n  if (_isString(scale)) {\r\n    var name = \"scale\".concat(scale.slice(0, 1).toUpperCase()).concat(scale.slice(1));\r\n    return {\r\n      scale: (d3Scales[name] || d3Scales.scalePoint)(),\r\n      realScaleType: d3Scales[name] ? name : 'point'\r\n    };\r\n  }\r\n\r\n  return _isFunction(scale) ? {\r\n    scale: scale\r\n  } : {\r\n    scale: d3Scales.scalePoint(),\r\n    realScaleType: 'point'\r\n  };\r\n};\r\nvar EPS = 1e-4;\r\nexport var checkDomainOfScale = function checkDomainOfScale(scale) {\r\n  var domain = scale.domain();\r\n\r\n  if (!domain || domain.length <= 2) {\r\n    return;\r\n  }\r\n\r\n  var len = domain.length;\r\n  var range = scale.range();\r\n  var min = Math.min(range[0], range[1]) - EPS;\r\n  var max = Math.max(range[0], range[1]) + EPS;\r\n  var first = scale(domain[0]);\r\n  var last = scale(domain[len - 1]);\r\n\r\n  if (first < min || first > max || last < min || last > max) {\r\n    scale.domain([domain[0], domain[len - 1]]);\r\n  }\r\n};\r\nexport var findPositionOfBar = function findPositionOfBar(barPosition, child) {\r\n  if (!barPosition) {\r\n    return null;\r\n  }\r\n\r\n  for (var i = 0, len = barPosition.length; i < len; i++) {\r\n    if (barPosition[i].item === child) {\r\n      return barPosition[i].position;\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\nexport var truncateByDomain = function truncateByDomain(value, domain) {\r\n  if (!domain || domain.length !== 2 || !isNumber(domain[0]) || !isNumber(domain[1])) {\r\n    return value;\r\n  }\r\n\r\n  var min = Math.min(domain[0], domain[1]);\r\n  var max = Math.max(domain[0], domain[1]);\r\n  var result = [value[0], value[1]];\r\n\r\n  if (!isNumber(value[0]) || value[0] < min) {\r\n    result[0] = min;\r\n  }\r\n\r\n  if (!isNumber(value[1]) || value[1] > max) {\r\n    result[1] = max;\r\n  }\r\n\r\n  if (result[0] > max) {\r\n    result[0] = max;\r\n  }\r\n\r\n  if (result[1] < min) {\r\n    result[1] = min;\r\n  }\r\n\r\n  return result;\r\n};\r\n/* eslint no-param-reassign: 0 */\r\n\r\nexport var offsetSign = function offsetSign(series) {\r\n  var n = series.length;\r\n\r\n  if (n <= 0) {\r\n    return;\r\n  }\r\n\r\n  for (var j = 0, m = series[0].length; j < m; ++j) {\r\n    var positive = 0;\r\n    var negative = 0;\r\n\r\n    for (var i = 0; i < n; ++i) {\r\n      var value = _isNaN(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\r\n      /* eslint-disable prefer-destructuring */\r\n\r\n      if (value >= 0) {\r\n        series[i][j][0] = positive;\r\n        series[i][j][1] = positive + value;\r\n        positive = series[i][j][1];\r\n      } else {\r\n        series[i][j][0] = negative;\r\n        series[i][j][1] = negative + value;\r\n        negative = series[i][j][1];\r\n      }\r\n      /* eslint-enable prefer-destructuring */\r\n\r\n    }\r\n  }\r\n};\r\nvar STACK_OFFSET_MAP = {\r\n  sign: offsetSign,\r\n  expand: stackOffsetExpand,\r\n  none: stackOffsetNone,\r\n  silhouette: stackOffsetSilhouette,\r\n  wiggle: stackOffsetWiggle\r\n};\r\nexport var getStackedData = function getStackedData(data, stackItems, offsetType) {\r\n  var dataKeys = stackItems.map(function (item) {\r\n    return item.props.dataKey;\r\n  });\r\n  var stack = shapeStack().keys(dataKeys).value(function (d, key) {\r\n    return +getValueByDataKey(d, key, 0);\r\n  }).order(stackOrderNone).offset(STACK_OFFSET_MAP[offsetType]);\r\n  return stack(data);\r\n};\r\nexport var getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\r\n  if (!data) {\r\n    return null;\r\n  } // reversing items to affect render order (for layering)\r\n\r\n\r\n  var items = reverseStackOrder ? _items.reverse() : _items;\r\n  var stackGroups = items.reduce(function (result, item) {\r\n    var _item$props3 = item.props,\r\n        stackId = _item$props3.stackId,\r\n        hide = _item$props3.hide;\r\n\r\n    if (hide) {\r\n      return result;\r\n    }\r\n\r\n    var axisId = item.props[numericAxisId];\r\n    var parentGroup = result[axisId] || {\r\n      hasStack: false,\r\n      stackGroups: {}\r\n    };\r\n\r\n    if (isNumOrStr(stackId)) {\r\n      var childGroup = parentGroup.stackGroups[stackId] || {\r\n        numericAxisId: numericAxisId,\r\n        cateAxisId: cateAxisId,\r\n        items: []\r\n      };\r\n      childGroup.items.push(item);\r\n      parentGroup.hasStack = true;\r\n      parentGroup.stackGroups[stackId] = childGroup;\r\n    } else {\r\n      parentGroup.stackGroups[uniqueId('_stackId_')] = {\r\n        numericAxisId: numericAxisId,\r\n        cateAxisId: cateAxisId,\r\n        items: [item]\r\n      };\r\n    }\r\n\r\n    return _objectSpread({}, result, _defineProperty({}, axisId, parentGroup));\r\n  }, {});\r\n  return Object.keys(stackGroups).reduce(function (result, axisId) {\r\n    var group = stackGroups[axisId];\r\n\r\n    if (group.hasStack) {\r\n      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {\r\n        var g = group.stackGroups[stackId];\r\n        return _objectSpread({}, res, _defineProperty({}, stackId, {\r\n          numericAxisId: numericAxisId,\r\n          cateAxisId: cateAxisId,\r\n          items: g.items,\r\n          stackedData: getStackedData(data, g.items, offsetType)\r\n        }));\r\n      }, {});\r\n    }\r\n\r\n    return _objectSpread({}, result, _defineProperty({}, axisId, group));\r\n  }, {});\r\n};\r\n/**\r\n * get domain of ticks\r\n * @param  {Array} ticks Ticks of axis\r\n * @param  {String} type  The type of axis\r\n * @return {Array} domain\r\n */\r\n\r\nexport var calculateDomainOfTicks = function calculateDomainOfTicks(ticks, type) {\r\n  if (type === 'number') {\r\n    return [_min(ticks), _max(ticks)];\r\n  }\r\n\r\n  return ticks;\r\n};\r\n/**\r\n * Configure the scale function of axis\r\n * @param {Object} scale The scale function\r\n * @param {Object} opts  The configuration of axis\r\n * @return {Object}      null\r\n */\r\n\r\nexport var getTicksOfScale = function getTicksOfScale(scale, opts) {\r\n  var realScaleType = opts.realScaleType,\r\n      type = opts.type,\r\n      tickCount = opts.tickCount,\r\n      originalDomain = opts.originalDomain,\r\n      allowDecimals = opts.allowDecimals;\r\n  var scaleType = realScaleType || opts.scale;\r\n\r\n  if (scaleType !== 'auto' && scaleType !== 'linear') {\r\n    return null;\r\n  }\r\n\r\n  if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {\r\n    // Calculate the ticks by the number of grid when the axis is a number axis\r\n    var domain = scale.domain();\r\n    var tickValues = getNiceTickValues(domain, tickCount, allowDecimals);\r\n    scale.domain(calculateDomainOfTicks(tickValues, type));\r\n    return {\r\n      niceTicks: tickValues\r\n    };\r\n  }\r\n\r\n  if (tickCount && type === 'number') {\r\n    var _domain = scale.domain();\r\n\r\n    var _tickValues = getTickValuesFixedDomain(_domain, tickCount, allowDecimals);\r\n\r\n    return {\r\n      niceTicks: _tickValues\r\n    };\r\n  }\r\n\r\n  return null;\r\n};\r\nexport var getCateCoordinateOfLine = function getCateCoordinateOfLine(_ref6) {\r\n  var axis = _ref6.axis,\r\n      ticks = _ref6.ticks,\r\n      bandSize = _ref6.bandSize,\r\n      entry = _ref6.entry,\r\n      index = _ref6.index,\r\n      dataKey = _ref6.dataKey;\r\n\r\n  if (axis.type === 'category') {\r\n    // find coordinate of category axis by the value of category\r\n    if (!axis.allowDuplicatedCategory && axis.dataKey && !_isNil(entry[axis.dataKey])) {\r\n      var matchedTick = findEntryInArray(ticks, 'value', entry[axis.dataKey]);\r\n\r\n      if (matchedTick) {\r\n        return matchedTick.coordinate + bandSize / 2;\r\n      }\r\n    }\r\n\r\n    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\r\n  }\r\n\r\n  var value = getValueByDataKey(entry, !_isNil(dataKey) ? dataKey : axis.dataKey);\r\n  return !_isNil(value) ? axis.scale(value) : null;\r\n};\r\nexport var getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref7) {\r\n  var axis = _ref7.axis,\r\n      ticks = _ref7.ticks,\r\n      offset = _ref7.offset,\r\n      bandSize = _ref7.bandSize,\r\n      entry = _ref7.entry,\r\n      index = _ref7.index;\r\n\r\n  if (axis.type === 'category') {\r\n    return ticks[index] ? ticks[index].coordinate + offset : null;\r\n  }\r\n\r\n  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\r\n  return !_isNil(value) ? axis.scale(value) - bandSize / 2 + offset : null;\r\n};\r\nexport var getBaseValueOfBar = function getBaseValueOfBar(_ref8) {\r\n  var numericAxis = _ref8.numericAxis;\r\n  var domain = numericAxis.scale.domain();\r\n\r\n  if (numericAxis.type === 'number') {\r\n    var min = Math.min(domain[0], domain[1]);\r\n    var max = Math.max(domain[0], domain[1]);\r\n\r\n    if (min <= 0 && max >= 0) {\r\n      return 0;\r\n    }\r\n\r\n    if (max < 0) {\r\n      return max;\r\n    }\r\n\r\n    return min;\r\n  }\r\n\r\n  return domain[0];\r\n};\r\nexport var getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\r\n  var stackId = item.props.stackId;\r\n\r\n  if (isNumOrStr(stackId)) {\r\n    var group = stackGroups[stackId];\r\n\r\n    if (group && group.items.length) {\r\n      var itemIndex = -1;\r\n\r\n      for (var i = 0, len = group.items.length; i < len; i++) {\r\n        if (group.items[i] === item) {\r\n          itemIndex = i;\r\n          break;\r\n        }\r\n      }\r\n\r\n      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nvar getDomainOfSingle = function getDomainOfSingle(data) {\r\n  return data.reduce(function (result, entry) {\r\n    return [_min(entry.concat([result[0]]).filter(isNumber)), _max(entry.concat([result[1]]).filter(isNumber))];\r\n  }, [Infinity, -Infinity]);\r\n};\r\n\r\nexport var getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\r\n  return Object.keys(stackGroups).reduce(function (result, stackId) {\r\n    var group = stackGroups[stackId];\r\n    var stackedData = group.stackedData;\r\n    var domain = stackedData.reduce(function (res, entry) {\r\n      var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\r\n      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];\r\n    }, [Infinity, -Infinity]);\r\n    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];\r\n  }, [Infinity, -Infinity]).map(function (result) {\r\n    return result === Infinity || result === -Infinity ? 0 : result;\r\n  });\r\n};\r\nexport var MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\r\nexport var MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\r\nexport var parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\r\n  if (!_isArray(specifiedDomain)) {\r\n    return dataDomain;\r\n  }\r\n\r\n  var domain = [];\r\n  /* eslint-disable prefer-destructuring */\r\n\r\n  if (isNumber(specifiedDomain[0])) {\r\n    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\r\n  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\r\n    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\r\n    domain[0] = dataDomain[0] - value;\r\n  } else if (_isFunction(specifiedDomain[0])) {\r\n    domain[0] = specifiedDomain[0](dataDomain[0]);\r\n  } else {\r\n    domain[0] = dataDomain[0];\r\n  }\r\n\r\n  if (isNumber(specifiedDomain[1])) {\r\n    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\r\n  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\r\n    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\r\n\r\n    domain[1] = dataDomain[1] + _value;\r\n  } else if (_isFunction(specifiedDomain[1])) {\r\n    domain[1] = specifiedDomain[1](dataDomain[1]);\r\n  } else {\r\n    domain[1] = dataDomain[1];\r\n  }\r\n  /* eslint-enable prefer-destructuring */\r\n\r\n\r\n  return domain;\r\n};\r\n/**\r\n * Calculate the size between two category\r\n * @param  {Object} axis  The options of axis\r\n * @param  {Array}  ticks The ticks of axis\r\n * @return {Number} Size\r\n */\r\n\r\nexport var getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks) {\r\n  if (axis && axis.scale && axis.scale.bandwidth) {\r\n    return axis.scale.bandwidth();\r\n  }\r\n\r\n  if (axis && ticks && ticks.length >= 2) {\r\n    var orderedTicks = _sortBy(ticks, function (o) {\r\n      return o.coordinate;\r\n    });\r\n\r\n    var bandSize = Infinity;\r\n\r\n    for (var i = 1, len = orderedTicks.length; i < len; i++) {\r\n      var cur = orderedTicks[i];\r\n      var prev = orderedTicks[i - 1];\r\n      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\r\n    }\r\n\r\n    return bandSize === Infinity ? 0 : bandSize;\r\n  }\r\n\r\n  return 0;\r\n};\r\n/**\r\n * parse the domain of a category axis when a domain is specified\r\n * @param   {Array}        specifiedDomain  The domain specified by users\r\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\r\n * @param   {ReactElement} axisChild        The axis element\r\n * @returns {Array}        domains\r\n */\r\n\r\nexport var parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\r\n  if (!specifiedDomain || !specifiedDomain.length) {\r\n    return calculatedDomain;\r\n  }\r\n\r\n  if (_isEqual(specifiedDomain, _get(axisChild, 'type.defaultProps.domain'))) {\r\n    return calculatedDomain;\r\n  }\r\n\r\n  return specifiedDomain;\r\n};"]},"metadata":{},"sourceType":"module"}