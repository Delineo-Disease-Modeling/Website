{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\r\n * Provides context such as filled/focused/error/required for form inputs.\r\n * Relying on the context provides high flexibility and ensures that the state always stays\r\n * consistent across the children of the `FormControl`.\r\n * This context is used by the following components:\r\n *\r\n *  - FormLabel\r\n *  - FormHelperText\r\n *  - Input\r\n *  - InputLabel\r\n *\r\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\r\n *\r\n * ```jsx\r\n * <FormControl>\r\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\r\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\r\n * </FormControl>\r\n * ```\r\n *\r\n * ⚠️Only one input can be used within a FormControl.\r\n */\n\nvar FormControl = /*#__PURE__*/React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      visuallyFocused = props.focused,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"focused\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var focused = visuallyFocused !== undefined ? visuallyFocused : _focused;\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: There are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The contents of the form control.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\r\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the label should be displayed in an error state.\r\n   */\n  error: PropTypes.bool,\n\n  /**\r\n   * If `true`, the component will be displayed in focused state.\r\n   */\n  focused: PropTypes.bool,\n\n  /**\r\n   * If `true`, the component will take up the full width of its container.\r\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\r\n   * If `true`, the label will be hidden.\r\n   * This is used to increase density for a `FilledInput`.\r\n   * Be sure to add `aria-label` to the `input` element.\r\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\r\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\r\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\r\n   * If `true`, the label will indicate that the input is required.\r\n   */\n  required: PropTypes.bool,\n\n  /**\r\n   * The size of the text field.\r\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\r\n   * The variant to use.\r\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","map":{"version":3,"sources":["C:/Users/Arpan Gandhi/Desktop/Aayush Coding/Website/model_app/frontend/node_modules/@material-ui/core/esm/FormControl/FormControl.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","isFilled","isAdornedStart","withStyles","capitalize","isMuiElement","FormControlContext","styles","root","display","flexDirection","position","minWidth","padding","margin","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","fullWidth","width","FormControl","forwardRef","props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$disabled","disabled","_props$error","error","_props$fullWidth","visuallyFocused","focused","_props$hiddenLabel","hiddenLabel","_props$margin","_props$required","required","size","_props$variant","variant","other","_React$useState","useState","initialAdornedStart","Children","forEach","child","input","adornedStart","setAdornedStart","_React$useState2","initialFilled","filled","setFilled","_React$useState3","_focused","setFocused","undefined","registerEffect","process","env","NODE_ENV","registeredInput","useRef","current","console","join","onFilled","useCallback","onEmpty","childContext","onBlur","onFocus","createElement","Provider","value","concat","propTypes","node","object","string","oneOf","elementType","bool","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\r\nimport withStyles from '../styles/withStyles';\r\nimport capitalize from '../utils/capitalize';\r\nimport isMuiElement from '../utils/isMuiElement';\r\nimport FormControlContext from './FormControlContext';\r\nexport var styles = {\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    display: 'inline-flex',\r\n    flexDirection: 'column',\r\n    position: 'relative',\r\n    // Reset fieldset default style.\r\n    minWidth: 0,\r\n    padding: 0,\r\n    margin: 0,\r\n    border: 0,\r\n    verticalAlign: 'top' // Fix alignment issue on Safari.\r\n\r\n  },\r\n\r\n  /* Styles applied to the root element if `margin=\"normal\"`. */\r\n  marginNormal: {\r\n    marginTop: 16,\r\n    marginBottom: 8\r\n  },\r\n\r\n  /* Styles applied to the root element if `margin=\"dense\"`. */\r\n  marginDense: {\r\n    marginTop: 8,\r\n    marginBottom: 4\r\n  },\r\n\r\n  /* Styles applied to the root element if `fullWidth={true}`. */\r\n  fullWidth: {\r\n    width: '100%'\r\n  }\r\n};\r\n/**\r\n * Provides context such as filled/focused/error/required for form inputs.\r\n * Relying on the context provides high flexibility and ensures that the state always stays\r\n * consistent across the children of the `FormControl`.\r\n * This context is used by the following components:\r\n *\r\n *  - FormLabel\r\n *  - FormHelperText\r\n *  - Input\r\n *  - InputLabel\r\n *\r\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\r\n *\r\n * ```jsx\r\n * <FormControl>\r\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\r\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\r\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\r\n * </FormControl>\r\n * ```\r\n *\r\n * ⚠️Only one input can be used within a FormControl.\r\n */\r\n\r\nvar FormControl = /*#__PURE__*/React.forwardRef(function FormControl(props, ref) {\r\n  var children = props.children,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      _props$color = props.color,\r\n      color = _props$color === void 0 ? 'primary' : _props$color,\r\n      _props$component = props.component,\r\n      Component = _props$component === void 0 ? 'div' : _props$component,\r\n      _props$disabled = props.disabled,\r\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\r\n      _props$error = props.error,\r\n      error = _props$error === void 0 ? false : _props$error,\r\n      _props$fullWidth = props.fullWidth,\r\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\r\n      visuallyFocused = props.focused,\r\n      _props$hiddenLabel = props.hiddenLabel,\r\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\r\n      _props$margin = props.margin,\r\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\r\n      _props$required = props.required,\r\n      required = _props$required === void 0 ? false : _props$required,\r\n      size = props.size,\r\n      _props$variant = props.variant,\r\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\r\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"focused\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\r\n\r\n  var _React$useState = React.useState(function () {\r\n    // We need to iterate through the children and find the Input in order\r\n    // to fully support server-side rendering.\r\n    var initialAdornedStart = false;\r\n\r\n    if (children) {\r\n      React.Children.forEach(children, function (child) {\r\n        if (!isMuiElement(child, ['Input', 'Select'])) {\r\n          return;\r\n        }\r\n\r\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\r\n\r\n        if (input && isAdornedStart(input.props)) {\r\n          initialAdornedStart = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    return initialAdornedStart;\r\n  }),\r\n      adornedStart = _React$useState[0],\r\n      setAdornedStart = _React$useState[1];\r\n\r\n  var _React$useState2 = React.useState(function () {\r\n    // We need to iterate through the children and find the Input in order\r\n    // to fully support server-side rendering.\r\n    var initialFilled = false;\r\n\r\n    if (children) {\r\n      React.Children.forEach(children, function (child) {\r\n        if (!isMuiElement(child, ['Input', 'Select'])) {\r\n          return;\r\n        }\r\n\r\n        if (isFilled(child.props, true)) {\r\n          initialFilled = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    return initialFilled;\r\n  }),\r\n      filled = _React$useState2[0],\r\n      setFilled = _React$useState2[1];\r\n\r\n  var _React$useState3 = React.useState(false),\r\n      _focused = _React$useState3[0],\r\n      setFocused = _React$useState3[1];\r\n\r\n  var focused = visuallyFocused !== undefined ? visuallyFocused : _focused;\r\n\r\n  if (disabled && focused) {\r\n    setFocused(false);\r\n  }\r\n\r\n  var registerEffect;\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    var registeredInput = React.useRef(false);\r\n\r\n    registerEffect = function registerEffect() {\r\n      if (registeredInput.current) {\r\n        console.error(['Material-UI: There are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\r\n      }\r\n\r\n      registeredInput.current = true;\r\n      return function () {\r\n        registeredInput.current = false;\r\n      };\r\n    };\r\n  }\r\n\r\n  var onFilled = React.useCallback(function () {\r\n    setFilled(true);\r\n  }, []);\r\n  var onEmpty = React.useCallback(function () {\r\n    setFilled(false);\r\n  }, []);\r\n  var childContext = {\r\n    adornedStart: adornedStart,\r\n    setAdornedStart: setAdornedStart,\r\n    color: color,\r\n    disabled: disabled,\r\n    error: error,\r\n    filled: filled,\r\n    focused: focused,\r\n    fullWidth: fullWidth,\r\n    hiddenLabel: hiddenLabel,\r\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\r\n    onBlur: function onBlur() {\r\n      setFocused(false);\r\n    },\r\n    onEmpty: onEmpty,\r\n    onFilled: onFilled,\r\n    onFocus: function onFocus() {\r\n      setFocused(true);\r\n    },\r\n    registerEffect: registerEffect,\r\n    required: required,\r\n    variant: variant\r\n  };\r\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\r\n    value: childContext\r\n  }, /*#__PURE__*/React.createElement(Component, _extends({\r\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\r\n    ref: ref\r\n  }, other), children));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The contents of the form control.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   */\r\n  color: PropTypes.oneOf(['primary', 'secondary']),\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .elementType,\r\n\r\n  /**\r\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the label should be displayed in an error state.\r\n   */\r\n  error: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the component will be displayed in focused state.\r\n   */\r\n  focused: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the component will take up the full width of its container.\r\n   */\r\n  fullWidth: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the label will be hidden.\r\n   * This is used to increase density for a `FilledInput`.\r\n   * Be sure to add `aria-label` to the `input` element.\r\n   */\r\n  hiddenLabel: PropTypes.bool,\r\n\r\n  /**\r\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\r\n   */\r\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\r\n\r\n  /**\r\n   * If `true`, the label will indicate that the input is required.\r\n   */\r\n  required: PropTypes.bool,\r\n\r\n  /**\r\n   * The size of the text field.\r\n   */\r\n  size: PropTypes.oneOf(['medium', 'small']),\r\n\r\n  /**\r\n   * The variant to use.\r\n   */\r\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiFormControl'\r\n})(FormControl);"]},"metadata":{},"sourceType":"module"}