"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var UnityLoaderService = /** @class */ (function () {
    function UnityLoaderService() {
        /**
         * A reference to the document head.
         * @private
         * @type {HTMLHeadElement}
         */
        this.documentHead = typeof document !== "undefined"
            ? document.querySelector("head")
            : undefined;
    }
    /**
     * Adds the Unity loader script to the window. When a version of the loader
     * is already appended, we'll skip to the validation right away. Before
     * resolving a type check on the createUnityInstance method is done.
     * @public
     * @param {string} url the path to the Unity loader file
     * @returns {Promise<void>} A promise when resolving when the file is loaded succesfulling.
     */
    UnityLoaderService.prototype.addFromUrl = function (url) {
        return __awaiter(this, void 0, void 0, function () {
            var _hasSimilarUnityLoaderUrlInstance, _i, _a, _unityLoaderInstance, _htmlScriptElement;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _hasSimilarUnityLoaderUrlInstance = false;
                        for (_i = 0, _a = UnityLoaderService.unityLoaderInstances; _i < _a.length; _i++) {
                            _unityLoaderInstance = _a[_i];
                            if (_unityLoaderInstance.url === url)
                                _hasSimilarUnityLoaderUrlInstance = true;
                        }
                        if (!(_hasSimilarUnityLoaderUrlInstance === false)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.appendAndLoadScript(url)];
                    case 1:
                        _htmlScriptElement = _b.sent();
                        UnityLoaderService.unityLoaderInstances.push({
                            url: url,
                            htmlScriptElement: _htmlScriptElement,
                        });
                        _b.label = 2;
                    case 2:
                        if (typeof createUnityInstance !== "function")
                            throw new Error("Unable to invoke Unity Loader, loaded incorrectly.");
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Appends a new script tag to the window. The promise resolves when the script
     * is loaded and rejects when it failed to load.
     * @private
     * @param {string} url The url of the script
     * @returns A promise containing the HTML Script Ele,ent
     */
    UnityLoaderService.prototype.appendAndLoadScript = function (url) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            if (typeof _this.documentHead !== "undefined") {
                var _scriptTag = document.createElement("script");
                _scriptTag.type = "text/javascript";
                _scriptTag.async = true;
                _scriptTag.src = url;
                _scriptTag.onload = function () { return resolve(_scriptTag); };
                _scriptTag.onerror = function (error) {
                    return reject("Unable to load " + url + " " + error);
                };
                _this.documentHead.appendChild(_scriptTag);
            }
        });
    };
    /**
     * A reference to all UnityLoader script tags and their respective urls.
     * @private
     * @type {Array<{ url: string; htmlScriptElement: HTMLScriptElement; }>}
     */
    UnityLoaderService.unityLoaderInstances = new Array();
    return UnityLoaderService;
}());
exports.default = UnityLoaderService;
//# sourceMappingURL=unity-loader-service.js.map